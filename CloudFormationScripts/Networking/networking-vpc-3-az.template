{
    "AWSTemplateFormatVersion" : "2010-09-09",
    "Description"              : "Creates a standard networking setup with a 3 Availability Zone VPC setup, routes, security groups, NAT gateways, and optionally IPv6.",
    "Parameters"               : {
        "VpcCidrBlock" : {
            "Description" : "The CIDR block for the VPC.",
            "Type"        : "String",
            "AllowedPattern" : "[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\/[0-9]{1,2}",
            "ConstraintDescription" : "Member must satisfy regular expression pattern: [0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\/[0-9]{1,2}",
            "Default"               : "192.168.0.0/16"
        },
        "EnableIPv6"   : {
            "Type" : "String",
            "Description" : "The VPC will be assigned an AWS IPv6 /56 CIDR block and the subnets will be assigned IPv6 /64 CIDR blocks (if this is false a /56 CIDR will still be assigned to the VPC, but not used anywhere).",
            "AllowedValues" : [
                "true",
                "false"
            ],
            "Default"       : "false"
        },
        "AssignIPv6"   : {
            "Type" : "String",
            "Description" : "Whether to auto-assign IPv6 addresses to all subnets. This setting is ignored if IPv6 is set to false.",
            "AllowedValues" : [
                "false",
                "true"
            ],
            "Default"       : "false"
        },
        "AZ1PublicSubnet1CidrBlock" : {
            "Description" : "The CIDR block for the first public subnet in AZ 1.",
            "Type"        : "String",
            "AllowedPattern" : "(?:^$|[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\/[0-9]{1,2})",
            "ConstraintDescription" : "Member must satisfy regular expression pattern: (?:^$|[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\/[0-9]{1,2})",
            "Default"               : "192.168.1.0/24"
        },
        "AZ2PublicSubnet1CidrBlock" : {
            "Description" : "The CIDR block for the first public subnet in AZ 2.",
            "Type"        : "String",
            "AllowedPattern" : "(?:^$|[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\/[0-9]{1,2})",
            "ConstraintDescription" : "Member must satisfy regular expression pattern: (?:^$|[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\/[0-9]{1,2})",
            "Default"               : "192.168.2.0/24"
        },
        "AZ3PublicSubnet1CidrBlock" : {
            "Description" : "The CIDR block for the first public subnet in AZ 3.",
            "Type"        : "String",
            "AllowedPattern" : "(?:^$|[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\/[0-9]{1,2})",
            "ConstraintDescription" : "Member must satisfy regular expression pattern: (?:^$|[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\/[0-9]{1,2})",
            "Default"               : "192.168.3.0/24"
        },
        "AZ1PrivateSubnet1CidrBlock" : {
            "Description" : "The CIDR block for the first private subnet in AZ 1.",
            "Type"        : "String",
            "AllowedPattern" : "(?:^$|[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\/[0-9]{1,2})",
            "ConstraintDescription" : "Member must satisfy regular expression pattern: (?:^$|[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\/[0-9]{1,2})",
			"Default"               : "192.168.10.0/24"
        },
        "AZ2PrivateSubnet1CidrBlock" : {
            "Description" : "The CIDR block for the first private subnet in AZ 2.",
            "Type"        : "String",
            "AllowedPattern" : "(?:^$|[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\/[0-9]{1,2})",
            "ConstraintDescription" : "Member must satisfy regular expression pattern: (?:^$|[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\/[0-9]{1,2})",
			"Default"               : "192.168.20.0/24"
        },
        "AZ3PrivateSubnet1CidrBlock" : {
            "Description" : "The CIDR block for the first private subnet in AZ 3.",
            "Type"        : "String",
            "AllowedPattern" : "(?:^$|[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\/[0-9]{1,2})",
            "ConstraintDescription" : "Member must satisfy regular expression pattern: (?:^$|[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\/[0-9]{1,2})",
			"Default"               : "192.168.30.0/24"
        },
        "AvailabilityZone1"          : {
            "Description" : "The first availability zone.",
            "Type"        : "AWS::EC2::AvailabilityZone::Name",
            "ConstraintDescription" : "You must choose an availability zone."
        },
        "AvailabilityZone2"          : {
            "Description" : "The second availability zone.",
            "Type"        : "AWS::EC2::AvailabilityZone::Name",
            "ConstraintDescription" : "You must choose an availability zone."
        },
        "AvailabilityZone3"          : {
            "Description" : "The third availability zone. To not use a third AZ, set this equal to AZ1 or AZ2.",
            "Type"        : "AWS::EC2::AvailabilityZone::Name",
            "ConstraintDescription" : "You must choose an availability zone."
        },
        "EnablePublicDnsHostNames"         : {
            "Description" : "Indicates whether the instances launched in the VPC get public DNS hostnames. If this attribute is true, instances in the VPC get public DNS hostnames, but only if the enableDnsSupport attribute is also set to true. ",
            "Type"        : "String",
            "AllowedValues" : [
                "true",
                "false"
            ],
            "Default"       : "false"
        },
        "EnableDnsSupport"           : {
            "Description" : "Indicates whether the DNS resolution is supported for the VPC. If this attribute is false, the Amazon-provided DNS server in the VPC that resolves public DNS hostnames to IP addresses is not enabled. If this attribute is true, queries to the Amazon provided DNS server at the 169.254.169.253 IP address, or the reserved IP address at the base of the VPC IPv4 network range plus two will succeed.",
            "Type"        : "String",
            "AllowedValues" : [
                "true",
                "false"
            ],
            "Default"       : "false"
        },
        "ManagementSourceIP"         : {
            "Description" : "The IP in CIDR of the source for allowed management",
            "Type"        : "String",
            "AllowedPattern" : "[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\/[0-9]{1,2}",
            "ConstraintDescription" : "Member must satisfy regular expression pattern: [0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\/[0-9]{1,2}",
            "Default"               : "0.0.0.0/0"
        },
        "OrganizationTag"            : {
            "Description" : "The organization this account is associated with",
            "Type"        : "String",
            "AllowedPattern" : "^\\S{2,}$",
            "ConstraintDescription" : "Member must satisfy regular expression pattern: ^\\S{2,}$",
            "Default"               : "bamcis.io"
        },
        "ApplicationTag"             : {
            "Description" : "The application this account is associated with",
            "Type"        : "String",
            "AllowedPattern" : "^\\S{2,}$",
            "ConstraintDescription" : "Member must satisfy regular expression pattern: ^\\S{2,}$"
        },
        "EnvironmentTag"             : {
            "Description" : "The environment this account is associated with",
            "Type"        : "String",
            "AllowedPattern" : "^\\S{2,}$",
            "ConstraintDescription" : "Member must satisfy regular expression pattern: ^\\S{2,}$",
            "Default"               : "dev"
        }
    },


    "Metadata"                 : {
        "AWS::CloudFormation::Interface" : {
            "ParameterGroups" : [
                {
                    "Label" : {
                        "default" : "Network Configuration"
                    },
                    "Parameters" : [
                        "AvailabilityZone1",
                        "AvailabilityZone2",
                        "AvailabilityZone3",
                        "VpcCidrBlock",
                        "EnableIPv6",
                        "AssignIPv6",
                        "EnableDnsSupport",
                        "EnableDnsHostNames",
                        "ManagementSourceIP"
                    ]
                },
                {
                    "Label" : {
                        "default" : "Public Subnets"
                    },
                    "Parameters" : [
                        "AZ1PublicSubnet1CidrBlock",
                        "AZ2PublicSubnet1CidrBlock",
                        "AZ3PublicSubnet1CidrBlock"
                    ]
                },
                {
                    "Label" : {
                        "default" : "Private Subnets"
                    },
                    "Parameters" : [
                        "AZ1PrivateSubnet1CidrBlock",
                        "AZ2PrivateSubnet1CidrBlock",
                        "AZ3PrivateSubnet1CidrBlock"
                    ]
                },                                              
                {
                    "Label" : {
                        "default" : "Tagging"
                    },
                    "Parameters" : [
                        "OrganizationTag",
                        "ApplicationTag",
                        "EnvironmentTag"
                    ]
                }
            ]
        }
    },


    "Conditions"               : {
        "ActuallyEnablePublicDnsHostNames" : {
            "Fn::And" : [
                {
                    "Fn::Equals" : [
                        {
                            "Ref" : "EnablePublicDnsHostNames"
                        },
                        "true"
                    ]
                },
                {
                    "Fn::Equals" : [
                        {
                            "Ref" : "EnableDnsSupport"
                        },
                        "true"
                    ]
                }
            ]
        },
        "UseAZ3"                     : {
            "Fn::Not" : [
                {
                    "Fn::Or" : [
                        {
                            "Fn::Equals" : [
                                {
                                    "Ref" : "AvailabilityZone3"
                                },
                                {
                                    "Ref" : "AvailabilityZone1"
                                }
                            ]
                        },
                        {
                            "Fn::Equals" : [
                                {
                                    "Ref" : "AvailabilityZone3"
                                },
                                {
                                    "Ref" : "AvailabilityZone2"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "CreateAZ1PublicSubnet1"     : {
            "Fn::Not" : [
                {
                    "Fn::Equals" : [
                        {
                            "Ref" : "AZ1PublicSubnet1CidrBlock"
                        },
                        ""
                    ]
                }
            ]
        },
        "CreateAZ2PublicSubnet1"     : {
            "Fn::Not" : [
                {
                    "Fn::Equals" : [
                        {
                            "Ref" : "AZ2PublicSubnet1CidrBlock"
                        },
                        ""
                    ]
                }
            ]
        },
        "CreateAZ3PublicSubnet1"     : {
            "Fn::And" : [
                {
                    "Fn::Not" : [
                        {
                            "Fn::Equals" : [
                                {
                                    "Ref" : "AZ3PublicSubnet1CidrBlock"
                                },
                                ""
                            ]
                        }
                    ]
                },
                {
                    "Condition" : "UseAZ3"
                }
            ]
        },
        "CreateAZ1PrivateSubnet1"    : {
            "Fn::Not" : [
                {
                    "Fn::Equals" : [
                        {
                            "Ref" : "AZ1PrivateSubnet1CidrBlock"
                        },
                        ""
                    ]
                }
            ]
        },
        "CreateAZ2PrivateSubnet1"    : {
            "Fn::Not" : [
                {
                    "Fn::Equals" : [
                        {
                            "Ref" : "AZ2PrivateSubnet1CidrBlock"
                        },
                        ""
                    ]
                }
            ]
        },
        "CreateAZ3PrivateSubnet1"    : {
            "Fn::And" : [
                {
                    "Fn::Not" : [
                        {
                            "Fn::Equals" : [
                                {
                                    "Ref" : "AZ3PrivateSubnet1CidrBlock"
                                },
                                ""
                            ]
                        }
                    ]
                },
                {
                    "Condition" : "UseAZ3"
                }
            ]
        },
        "CreateAnyPublicSubnets"        : {
            "Fn::Or" : [
                {
                    "Condition" : "CreateAZ1PublicSubnet1"
                },
                {
                    "Condition" : "CreateAZ2PublicSubnet1"
                },
                {
                    "Condition" : "CreateAZ3PublicSubnet1"
                }
            ]
        },
        "CreateAnyPrivateSubnets"       : {
            "Fn::Or" : [
                {
                    "Condition" : "CreateAZ1PrivateSubnet1"
                },
                {
                    "Condition" : "CreateAZ2PrivateSubnet1"
                },
                {
                    "Condition" : "CreateAZ3PrivateSubnet1"
                }
            ]
        },
		"CreateAnyPrivateSubnetsAndIPv6"       : {
            "Fn::And" : [
				{
					"Condition" : "CreateAnyPrivateSubnets"
				},
				{
					"Condition" : "UseIPv6"
				}
			]			
        },
		"AZ1PublicAndPrivateSubnetsAndIPv6" : {
			"Fn::And" : [
				{
					"Condition" : "CreateAZ1PublicSubnet1"
				},
				{
					"Condition" : "CreateAZ1PrivateSubnet1"
				},
				{
					"Condition" : "UseIPv6"
				}
			]
		},
		"AZ2PublicAndPrivateSubnetsAndIPv6" : {
			"Fn::And" : [
				{
					"Condition" : "CreateAZ2PublicSubnet1"
				},
				{
					"Condition" : "CreateAZ2PrivateSubnet1"
				},
				{
					"Condition" : "UseIPv6"
				}
			]
		},
		"AZ3PublicAndPrivateSubnetsAndIPv6" : {
			"Fn::And" : [
				{
					"Condition" : "CreateAZ3PublicSubnet1"
				},
				{
					"Condition" : "CreateAZ3PrivateSubnet1"
				},
				{
					"Condition" : "UseIPv6"
				}
			]
		},
        "CreateAnySubnets"              : {
            "Fn::Or" : [
                {
                    "Condition" : "CreateAnyPublicSubnets"
                },
                {
                    "Condition" : "CreateAnyPrivateSubnets"
                }
            ]
        },
		"CreateAZ1PublicPrivateSubnetPair" : {
			"Fn::And" : [
				{
					"Condition" : "CreateAZ1PublicSubnet1"
				},
				{
					"Condition" : "CreateAZ1PrivateSubnet1"
				}
			]
		},
		"CreateAZ2PublicPrivateSubnetPair" : {
			"Fn::And" : [
				{
					"Condition" : "CreateAZ2PublicSubnet1"
				},
				{
					"Condition" : "CreateAZ2PrivateSubnet1"
				}
			]
		},
		"CreateAZ3PublicPrivateSubnetPair" : {
			"Fn::And" : [
				{
					"Condition" : "CreateAZ3PublicSubnet1"
				},
				{
					"Condition" : "CreateAZ3PrivateSubnet1"
				}
			]
		},
		"CreateAtLeast1PublicAndPrivateSubnetPair" : {
			"Fn::Or" : [
				{
					"Condition" : "CreateAZ1PublicPrivateSubnetPair"
				},
				{
					"Condition" : "CreateAZ2PublicPrivateSubnetPair"
				},
				{
					"Condition" : "CreateAZ3PublicPrivateSubnetPair"
				}			
			]
		},
        "UseIPv6"                    : {
            "Fn::Equals" : [
                {
                    "Ref" : "EnableIPv6"
                },
                "true"
            ]
        },
		"UseIPv6AndAnyPublicSubnets" : {
			"Fn::And" : [
				{
					"Condition" : "CreateAnyPublicSubnets"
				},
				{
					"Condition" : "UseIPv6"
				}
			]
		},
        "AutoAssignIPv6"             : {
            "Fn::And" : [
                {
                    "Condition" : "UseIPv6"
                },
                {
                    "Fn::Equals" : [
                        {
                            "Ref" : "AssignIPv6"
                        },
                        "true"
                    ]
                }
            ]
        },
		"CreateGateways" : {
			"Fn::Or" : [
				{
					 "Condition" : "CreateAnyPrivateSubnetsAndIPv6"
				},
				{
					"Condition" : "CreateAnyPublicSubnets"
				}
			]
		}
    },


    "Mappings"                 : {
        "RegionMap" : {
            "us-east-1" : {
                "Arn" : "aws",
                "ELBPrincipalId" : "127311923021",
				"HostedZoneId" : "Z1UJRXOUMOOFQ8"
            },
            "us-east-2" : {
                "Arn" : "aws",
                "ELBPrincipalId" : "033677994240",
				"HostedZoneId" : "ZOJJZC49E0EPZ"
            },
            "us-west-2" : {
                "Arn" : "aws",
                "ELBPrincipalId" : "797873946194",
				"HostedZoneId" : "Z2OJLYMUO9EFXC"
            },
            "us-west-1" : {
                "Arn" : "aws",
                "ELBPrincipalId" : "027434742980",
				"HostedZoneId" : "Z2MUQ32089INYE"
            },
            "ca-central-1" : {
                "Arn" : "aws",
                "ELBPrincipalId" : "985666609251",
				"HostedZoneId" : "Z19DQILCV0OWEC"
            },
            "eu-west-1"    : {
                "Arn" : "aws",
                "ELBPrincipalId" : "156460612806",
				"HostedZoneId" : "ZLY8HYME6SFDD"
            },
            "eu-west-2"    : {
                "Arn" : "aws",
                "ELBPrincipalId" : "652711504416",
				"HostedZoneId" : "ZJ5UAJN8Y3Z2Q"
            },
			"eu-west-3"    : {
                "Arn" : "aws",
                "ELBPrincipalId" : "009996457667",
				"HostedZoneId" : "Z3KY65QIEKYHQQ"
            },
            "eu-central-1" : {
                "Arn" : "aws",
                "ELBPrincipalId" : "054676820928",
				"HostedZoneId" : "Z1U9ULNL0V5AJ3"
            },
            "ap-northeast-1" : {
                "Arn" : "aws",
                "ELBPrincipalId" : "582318560864",
				"HostedZoneId" : "Z1YSHQZHG15GKL"
            },
            "ap-northeast-2" : {
                "Arn" : "aws",
                "ELBPrincipalId" : "600734575887",
				"HostedZoneId" : "Z20JF4UZKIW1U8"
            },
			"ap-northeast-3" : {
                "Arn" : "aws",
                "ELBPrincipalId" : "383597477331",
				"HostedZoneId" : "Z2YQB5RD63NC85"
            },
            "ap-southeast-1" : {
                "Arn" : "aws",
                "ELBPrincipalId" : "114774131450",
				"HostedZoneId" : "ZL327KTPIQFUL"
            },
            "ap-southeast-2" : {
                "Arn" : "aws",
                "ELBPrincipalId" : "783225319266",
				"HostedZoneId" : "Z2RPCDW04V8134"
            },
            "ap-south-1"     : {
                "Arn" : "aws",
                "ELBPrincipalId" : "718504428378",
				"HostedZoneId" : "Z3VO1THU9YC4UR"
            },
            "sa-east-1"      : {
                "Arn" : "aws",
                "ELBPrincipalId" : "507241528517",
				"HostedZoneId" : "ZCMLWB8V5SYIT"
            },
            "us-gov-west-1"  : {
                "Arn" : "aws-us-gov",
                "ELBPrincipalId" : "048591011584",
				"HostedZoneId" : ""
            },
            "us-gov-west-2"  : {
                "Arn" : "aws-us-gov",
                "ELBPrincipalId" : "",
				"HostedZoneId" : ""
            },
            "us-gov-east-1"  : {
                "Arn" : "aws-us-gov",
                "ELBPrincipalId" : "",
				"HostedZoneId" : ""
            },
            "us-gov-east-2"  : {
                "Arn" : "aws-us-gov",
                "ELBPrincipalId" : "",
				"HostedZoneId" : ""
            },
            "cn-north-1"     : {
                "Arn" : "aws-cn",
                "ELBPrincipalId" : "638102146993",
				"HostedZoneId" : ""
            },
			"cn-northwest-1" : {
				"Arn" : "aws-cn",
				"ELBPrincipalId" : "037604701340",
				"HostedZoneId" : ""
			},
			"us-iso-east-1" : {
				"Arn" : "aws-iso",
				"ELBPrincipalId" : "",
				"HostedZoneId" : ""
			},
			"us-isob-east-1" : {
				"Arn" : "aws-iso-b",
				"ELBPrincipalId" : "",
				"HostedZoneId" : ""
			}
        }
    },


    "Resources"                : {
        "VPC" : {
            "Type" : "AWS::EC2::VPC",
            "Properties" : {
                "CidrBlock" : {
                    "Ref" : "VpcCidrBlock"
                },
                "EnableDnsSupport" : {
                    "Ref" : "EnableDnsSupport"
                },
                "EnableDnsHostnames" : {
                    "Fn::If" : [
						"ActuallyEnablePublicDnsHostNames",
                        "true",
                        "false"
                    ]
                },
                "Tags"               : [
                    {
                        "Key" : "Name",
                        "Value" : {
							"Fn::Sub" : "${ApplicationTag}-${AWS::Region}-VPC-${EnvironmentTag}"
                        }
                    },
                    {
                        "Key" : "Environment",
                        "Value" : {
                            "Ref" : "EnvironmentTag"
                        }
                    },
                    {
                        "Key" : "Application",
                        "Value" : {
                            "Ref" : "ApplicationTag"
                        }
                    },
                    {
                        "Key" : "Organization",
                        "Value" : {
                            "Ref" : "OrganizationTag"
                        }
                    }
                ]
            }
        },
        "VPCIPv6" : {
            "Type" : "AWS::EC2::VPCCidrBlock",
            "Properties" : {
                "AmazonProvidedIpv6CidrBlock" : true,
                "VpcId"                       : {
                    "Ref" : "VPC"
                }
            }
        },
        "AZ1PublicSubnet1" : {
            "Type" : "AWS::EC2::Subnet",
            "Condition" : "CreateAZ1PublicSubnet1",
            "Properties" : {
                "AvailabilityZone" : {
                    "Ref" : "AvailabilityZone1"
                },
                "CidrBlock"        : {
                    "Ref" : "AZ1PublicSubnet1CidrBlock"
                },
                "VpcId"            : {
                    "Ref" : "VPC"
                },
                "MapPublicIpOnLaunch" : {
                    "Fn::If" : [
                        "AutoAssignIPv6",
                        {
                            "Ref" : "AWS::NoValue"
                        },
                        "true"
                    ]
                },
                "Ipv6CidrBlock"       : {
                    "Fn::If" : [
                        "UseIPv6",
                        {
                            "Fn::Join" : [
                                "",
                                [
                                    {
                                        "Fn::Select" : [
                                            0,
                                            {
                                                "Fn::Split" : [
                                                    "00::/56",
                                                    {
                                                        "Fn::Select" : [
                                                            0,
                                                            {
                                                                "Fn::GetAtt" : [
                                                                    "VPC",
                                                                    "Ipv6CidrBlocks"
                                                                ]
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    "00::/64"
                                ]
                            ]
                        },
                        {
                            "Ref" : "AWS::NoValue"
                        }
                    ]
                },
                "AssignIpv6AddressOnCreation" : {
                    "Fn::If" : [
                        "AutoAssignIPv6",
                        "true",
                        {
                            "Ref" : "AWS::NoValue"
                        }
                    ]
                },
                "Tags"                        : [
                    {
                        "Key" : "Name",
                        "Value" : {
							"Fn::Sub" : "${ApplicationTag}-${AvailabilityZone1}-PublicSubnet1-${EnvironmentTag}"
                        }
                    },
                    {
                        "Key" : "Environment",
                        "Value" : {
                            "Ref" : "EnvironmentTag"
                        }
                    },
                    {
                        "Key" : "Application",
                        "Value" : {
                            "Ref" : "ApplicationTag"
                        }
                    },
                    {
                        "Key" : "Organization",
                        "Value" : {
                            "Ref" : "OrganizationTag"
                        }
                    }
                ]
            },
            "DependsOn"  : [
                "VPCIPv6"
            ]
        },
        "AZ2PublicSubnet1" : {
            "Type" : "AWS::EC2::Subnet",
            "Condition" : "CreateAZ2PublicSubnet1",
            "Properties" : {
                "AvailabilityZone" : {
                    "Ref" : "AvailabilityZone2"
                },
                "CidrBlock"        : {
                    "Ref" : "AZ2PublicSubnet1CidrBlock"
                },
                "VpcId"            : {
                    "Ref" : "VPC"
                },
                "MapPublicIpOnLaunch" : {
                    "Fn::If" : [
                        "AutoAssignIPv6",
                        {
                            "Ref" : "AWS::NoValue"
                        },
                        "true"
                    ]
                },
                "Ipv6CidrBlock"       : {
                    "Fn::If" : [
                        "UseIPv6",
                        {
                            "Fn::Join" : [
                                "",
                                [
                                    {
                                        "Fn::Select" : [
                                            0,
                                            {
                                                "Fn::Split" : [
                                                    "00::/56",
                                                    {
                                                        "Fn::Select" : [
                                                            0,
                                                            {
                                                                "Fn::GetAtt" : [
                                                                    "VPC",
                                                                    "Ipv6CidrBlocks"
                                                                ]
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    "85::/64"
                                ]
                            ]
                        },
                        {
                            "Ref" : "AWS::NoValue"
                        }
                    ]
                },
                "AssignIpv6AddressOnCreation" : {
                    "Fn::If" : [
                        "AutoAssignIPv6",
                        "true",
                        {
                            "Ref" : "AWS::NoValue"
                        }
                    ]
                },
                "Tags"                        : [
                    {
                        "Key" : "Name",
                        "Value" : {
							"Fn::Sub" : "${ApplicationTag}-${AvailabilityZone2}-PublicSubnet1-${EnvironmentTag}"
                        }
                    },
                    {
                        "Key" : "Environment",
                        "Value" : {
                            "Ref" : "EnvironmentTag"
                        }
                    },
                    {
                        "Key" : "Application",
                        "Value" : {
                            "Ref" : "ApplicationTag"
                        }
                    },
                    {
                        "Key" : "Organization",
                        "Value" : {
                            "Ref" : "OrganizationTag"
                        }
                    }
                ]
            },
            "DependsOn"  : [
                "VPCIPv6"
            ]
        },
        "AZ3PublicSubnet1" : {
            "Type" : "AWS::EC2::Subnet",
            "Condition" : "CreateAZ3PublicSubnet1",
            "Properties" : {
                "AvailabilityZone" : {
                    "Ref" : "AvailabilityZone3"
                },
                "CidrBlock"        : {
                    "Ref" : "AZ3PublicSubnet1CidrBlock"
                },
                "VpcId"            : {
                    "Ref" : "VPC"
                },
                "MapPublicIpOnLaunch" : {
                    "Fn::If" : [
                        "AutoAssignIPv6",
                        {
                            "Ref" : "AWS::NoValue"
                        },
                        "true"
                    ]
                },
                "Ipv6CidrBlock"       : {
                    "Fn::If" : [
                        "UseIPv6",
                        {
                            "Fn::Join" : [
                                "",
                                [
                                    {
                                        "Fn::Select" : [
                                            0,
                                            {
                                                "Fn::Split" : [
                                                    "00::/56",
                                                    {
                                                        "Fn::Select" : [
                                                            0,
                                                            {
                                                                "Fn::GetAtt" : [
                                                                    "VPC",
                                                                    "Ipv6CidrBlocks"
                                                                ]
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    "AA::/64"
                                ]
                            ]
                        },
                        {
                            "Ref" : "AWS::NoValue"
                        }
                    ]
                },
                "AssignIpv6AddressOnCreation" : {
                    "Fn::If" : [
                        "AutoAssignIPv6",
                        "true",
                        {
                            "Ref" : "AWS::NoValue"
                        }
                    ]
                },
                "Tags"                        : [
                    {
                        "Key" : "Name",
                        "Value" : {
							"Fn::Sub" : "${ApplicationTag}-${AvailabilityZone3}-PublicSubnet1-${EnvironmentTag}"
                        }
                    },
                    {
                        "Key" : "Environment",
                        "Value" : {
                            "Ref" : "EnvironmentTag"
                        }
                    },
                    {
                        "Key" : "Application",
                        "Value" : {
                            "Ref" : "ApplicationTag"
                        }
                    },
                    {
                        "Key" : "Organization",
                        "Value" : {
                            "Ref" : "OrganizationTag"
                        }
                    }
                ]
            },
            "DependsOn"  : [
                "VPCIPv6"
            ]
        },
        "AZ1PrivateSubnet1" : {
            "Type" : "AWS::EC2::Subnet",
            "Condition" : "CreateAZ1PrivateSubnet1",
            "Properties" : {
                "AvailabilityZone" : {
                    "Ref" : "AvailabilityZone1"
                },
                "CidrBlock"        : {
                    "Ref" : "AZ1PrivateSubnet1CidrBlock"
                },
                "VpcId"            : {
                    "Ref" : "VPC"
                },
                "MapPublicIpOnLaunch" : {
                    "Fn::If" : [
                        "AutoAssignIPv6",
                        {
                            "Ref" : "AWS::NoValue"
                        },
                        "false"
                    ]
                },
                "Ipv6CidrBlock"       : {
                    "Fn::If" : [
                        "UseIPv6",
                        {
                            "Fn::Join" : [
                                "",
                                [
                                    {
                                        "Fn::Select" : [
                                            0,
                                            {
                                                "Fn::Split" : [
                                                    "00::/56",
                                                    {
                                                        "Fn::Select" : [
                                                            0,
                                                            {
                                                                "Fn::GetAtt" : [
                                                                    "VPC",
                                                                    "Ipv6CidrBlocks"
                                                                ]
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    "01::/64"
                                ]
                            ]
                        },
                        {
                            "Ref" : "AWS::NoValue"
                        }
                    ]
                },
                "AssignIpv6AddressOnCreation" : {
                    "Fn::If" : [
                        "AutoAssignIPv6",
                        "true",
                        {
                            "Ref" : "AWS::NoValue"
                        }
                    ]
                },
                "Tags"                        : [
                    {
                        "Key" : "Name",
                        "Value" : {
							"Fn::Sub" : "${ApplicationTag}-${AvailabilityZone1}-PrivateSubnet1-${EnvironmentTag}"
                        }
                    },
                    {
                        "Key" : "Environment",
                        "Value" : {
                            "Ref" : "EnvironmentTag"
                        }
                    },
                    {
                        "Key" : "Application",
                        "Value" : {
                            "Ref" : "ApplicationTag"
                        }
                    },
                    {
                        "Key" : "Organization",
                        "Value" : {
                            "Ref" : "OrganizationTag"
                        }
                    }
                ]
            },
            "DependsOn"  : [
                "VPCIPv6"
            ]
        },
        "AZ2PrivateSubnet1" : {
            "Type" : "AWS::EC2::Subnet",
            "Condition" : "CreateAZ2PrivateSubnet1",
            "Properties" : {
                "AvailabilityZone" : {
                    "Ref" : "AvailabilityZone2"
                },
                "CidrBlock"        : {
                    "Ref" : "AZ2PrivateSubnet1CidrBlock"
                },
                "VpcId"            : {
                    "Ref" : "VPC"
                },
                "MapPublicIpOnLaunch" : {
                    "Fn::If" : [
                        "AutoAssignIPv6",
                        {
                            "Ref" : "AWS::NoValue"
                        },
                        "false"
                    ]
                },
                "Ipv6CidrBlock"       : {
                    "Fn::If" : [
                        "UseIPv6",
                        {
                            "Fn::Join" : [
                                "",
                                [
                                    {
                                        "Fn::Select" : [
                                            0,
                                            {
                                                "Fn::Split" : [
                                                    "00::/56",
                                                    {
                                                        "Fn::Select" : [
                                                            0,
                                                            {
                                                                "Fn::GetAtt" : [
                                                                    "VPC",
                                                                    "Ipv6CidrBlocks"
                                                                ]
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    "86::/64"
                                ]
                            ]
                        },
                        {
                            "Ref" : "AWS::NoValue"
                        }
                    ]
                },
                "AssignIpv6AddressOnCreation" : {
                    "Fn::If" : [
                        "AutoAssignIPv6",
                        "true",
                        {
                            "Ref" : "AWS::NoValue"
                        }
                    ]
                },
                "Tags"                        : [
                    {
                        "Key" : "Name",
                        "Value" : {
							"Fn::Sub" : "${ApplicationTag}-${AvailabilityZone2}-PrivateSubnet1-${EnvironmentTag}"
                        }
                    },
                    {
                        "Key" : "Environment",
                        "Value" : {
                            "Ref" : "EnvironmentTag"
                        }
                    },
                    {
                        "Key" : "Application",
                        "Value" : {
                            "Ref" : "ApplicationTag"
                        }
                    },
                    {
                        "Key" : "Organization",
                        "Value" : {
                            "Ref" : "OrganizationTag"
                        }
                    }
                ]
            },
            "DependsOn"  : [
                "VPCIPv6"
            ]
        },
        "AZ3PrivateSubnet1" : {
            "Type" : "AWS::EC2::Subnet",
            "Condition" : "CreateAZ3PrivateSubnet1",
            "Properties" : {
                "AvailabilityZone" : {
                    "Ref" : "AvailabilityZone3"
                },
                "CidrBlock"        : {
                    "Ref" : "AZ3PrivateSubnet1CidrBlock"
                },
                "VpcId"            : {
                    "Ref" : "VPC"
                },
                "MapPublicIpOnLaunch" : {
                    "Fn::If" : [
                        "AutoAssignIPv6",
                        {
                            "Ref" : "AWS::NoValue"
                        },
                        "false"
                    ]
                },
                "Ipv6CidrBlock"       : {
                    "Fn::If" : [
                        "UseIPv6",
                        {
                            "Fn::Join" : [
                                "",
                                [
                                    {
                                        "Fn::Select" : [
                                            0,
                                            {
                                                "Fn::Split" : [
                                                    "00::/56",
                                                    {
                                                        "Fn::Select" : [
                                                            0,
                                                            {
                                                                "Fn::GetAtt" : [
                                                                    "VPC",
                                                                    "Ipv6CidrBlocks"
                                                                ]
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    "AB::/64"
                                ]
                            ]
                        },
                        {
                            "Ref" : "AWS::NoValue"
                        }
                    ]
                },
                "AssignIpv6AddressOnCreation" : {
                    "Fn::If" : [
                        "AutoAssignIPv6",
                        "true",
                        {
                            "Ref" : "AWS::NoValue"
                        }
                    ]
                },
                "Tags"                        : [
                    {
                        "Key" : "Name",
                        "Value" : {
							"Fn::Sub" : "${ApplicationTag}-${AvailabilityZone3}-PrivateSubnet1-${EnvironmentTag}"
                        }
                    },
                    {
                        "Key" : "Environment",
                        "Value" : {
                            "Ref" : "EnvironmentTag"
                        }
                    },
                    {
                        "Key" : "Application",
                        "Value" : {
                            "Ref" : "ApplicationTag"
                        }
                    },
                    {
                        "Key" : "Organization",
                        "Value" : {
                            "Ref" : "OrganizationTag"
                        }
                    }
                ]
            },
            "DependsOn"  : [
                "VPCIPv6"
            ]
        },
        "InternetGateway"   : {
            "Type" : "AWS::EC2::InternetGateway",
			"Condition" : "CreateAnyPublicSubnets",
            "Properties" : {
                "Tags" : [
                    {
                        "Key" : "Name",
                        "Value" : {
							"Fn::Sub" : "${ApplicationTag}-${AWS::Region}-IGW-${EnvironmentTag}"
                        }
                    },
                    {
                        "Key" : "Environment",
                        "Value" : {
                            "Ref" : "EnvironmentTag"
                        }
                    },
                    {
                        "Key" : "Application",
                        "Value" : {
                            "Ref" : "ApplicationTag"
                        }
                    },
                    {
                        "Key" : "Organization",
                        "Value" : {
                            "Ref" : "OrganizationTag"
                        }
                    }
                ]
            },
            "DependsOn"  : "VPC"
        },
        "AttachGateway"     : {
            "Type" : "AWS::EC2::VPCGatewayAttachment",
			"Condition" : "CreateAnyPublicSubnets",
            "Properties" : {
                "InternetGatewayId" : {
                    "Ref" : "InternetGateway"
                },
                "VpcId"             : {
                    "Ref" : "VPC"
                }
            },
            "DependsOn"  : "InternetGateway"
        },
        "PublicRouteTable"  : {
            "Type" : "AWS::EC2::RouteTable",
			"Condition" : "CreateAnyPublicSubnets",
            "Properties" : {
                "VpcId" : {
                    "Ref" : "VPC"
                },
                "Tags"  : [
                    {
                        "Key" : "Name",
                        "Value" : {
							"Fn::Sub" : "${ApplicationTag}-${AWS::Region}-PublicRouteTable-${EnvironmentTag}"
                        }
                    },
                    {
                        "Key" : "Environment",
                        "Value" : {
                            "Ref" : "EnvironmentTag"
                        }
                    },
                    {
                        "Key" : "Application",
                        "Value" : {
                            "Ref" : "ApplicationTag"
                        }
                    },
                    {
                        "Key" : "Organization",
                        "Value" : {
                            "Ref" : "OrganizationTag"
                        }
                    }
                ]
            }
        },
        "PublicRoute"       : {
            "Type" : "AWS::EC2::Route",
			"Condition" : "CreateAnyPublicSubnets",
            "DependsOn" : [
                "AttachGateway"
            ],
            "Properties" : {
                "DestinationCidrBlock" : "0.0.0.0/0",
                "GatewayId"            : {
                    "Ref" : "InternetGateway"
                },
                "RouteTableId"         : {
                    "Ref" : "PublicRouteTable"
                }
            }
        },
        "PublicRouteIPv6"   : {
            "Type" : "AWS::EC2::Route",
            "Condition" : "UseIPv6AndAnyPublicSubnets",
            "DependsOn" : [
                "AttachGateway"
            ],
            "Properties" : {
                "DestinationIpv6CidrBlock" : "::/0",
                "GatewayId"                : {
                    "Ref" : "InternetGateway"
                },
                "RouteTableId"             : {
                    "Ref" : "PublicRouteTable"
                }
            }
        },
        "PrivateRouteTable1" : {
            "Type" : "AWS::EC2::RouteTable",
			"Condition" : "CreateAZ1PublicPrivateSubnetPair",
            "Properties" : {
                "VpcId" : {
                    "Ref" : "VPC"
                },
                "Tags"  : [
                    {
                        "Key" : "Name",
                        "Value" : {
							"Fn::Sub" : "${ApplicationTag}-${AvailabilityZone1}-PrivateRouteTable-${EnvironmentTag}"
                        }
                    },
                    {
                        "Key" : "Environment",
                        "Value" : {
                            "Ref" : "EnvironmentTag"
                        }
                    },
                    {
                        "Key" : "Application",
                        "Value" : {
                            "Ref" : "ApplicationTag"
                        }
                    },
                    {
                        "Key" : "Organization",
                        "Value" : {
                            "Ref" : "OrganizationTag"
                        }
                    }
                ]
            }
        },
        "PrivateRouteTable2" : {
            "Type" : "AWS::EC2::RouteTable",
			"Condition" : "CreateAZ2PublicPrivateSubnetPair",
            "Properties" : {
                "VpcId" : {
                    "Ref" : "VPC"
                },
                "Tags"  : [
                    {
                        "Key" : "Name",
                        "Value" : {
							"Fn::Sub" : "${ApplicationTag}-${AvailabilityZone2}-PrivateRouteTable-${EnvironmentTag}"
                        }
                    },
                    {
                        "Key" : "Environment",
                        "Value" : {
                            "Ref" : "EnvironmentTag"
                        }
                    },
                    {
                        "Key" : "Application",
                        "Value" : {
                            "Ref" : "ApplicationTag"
                        }
                    },
                    {
                        "Key" : "Organization",
                        "Value" : {
                            "Ref" : "OrganizationTag"
                        }
                    }
                ]
            }
        },
        "PrivateRouteTable3" : {
            "Type" : "AWS::EC2::RouteTable",
			"Condition" : "CreateAZ3PublicPrivateSubnetPair",
            "Properties" : {
                "VpcId" : {
                    "Ref" : "VPC"
                },
                "Tags"  : [
                    {
                        "Key" : "Name",
                        "Value" : {
							"Fn::Sub" : "${ApplicationTag}-${AvailabilityZone3}-PrivateRouteTable-${EnvironmentTag}"
                        }
                    },
                    {
                        "Key" : "Environment",
                        "Value" : {
                            "Ref" : "EnvironmentTag"
                        }
                    },
                    {
                        "Key" : "Application",
                        "Value" : {
                            "Ref" : "ApplicationTag"
                        }
                    },
                    {
                        "Key" : "Organization",
                        "Value" : {
                            "Ref" : "OrganizationTag"
                        }
                    }
                ]
            }
        },
        "PrivateRoute1"      : {
            "Type" : "AWS::EC2::Route",
            "Condition" : "CreateAZ1PublicPrivateSubnetPair",
            "Properties" : {
                "DestinationCidrBlock" : "0.0.0.0/0",
                "NatGatewayId"         : {
                    "Ref" : "NATGateway1"
                },
                "RouteTableId"         : {
                    "Ref" : "PrivateRouteTable1"
                }
            }
        },
        "PrivateRoute2"      : {
            "Type" : "AWS::EC2::Route",
            "Condition" : "CreateAZ2PublicPrivateSubnetPair",
            "Properties" : {
                "DestinationCidrBlock" : "0.0.0.0/0",
                "NatGatewayId"         : {
                    "Ref" : "NATGateway2"
                },
                "RouteTableId"         : {
                    "Ref" : "PrivateRouteTable2"
                }
            }
        },
        "PrivateRoute3"      : {
            "Type" : "AWS::EC2::Route",
            "Condition" : "CreateAZ3PublicPrivateSubnetPair",
            "Properties" : {
                "DestinationCidrBlock" : "0.0.0.0/0",
                "NatGatewayId"         : {
                    "Ref" : "NATGateway3"
                },
                "RouteTableId"         : {
                    "Ref" : "PrivateRouteTable3"
                }
            }
        },
        "PrivateRoute1IPv6"  : {
            "Type" : "AWS::EC2::Route",
            "Condition" : "AZ1PublicAndPrivateSubnetsAndIPv6",
            "Properties" : {
                "DestinationIpv6CidrBlock" : "::/0",
                "EgressOnlyInternetGatewayId" : {
                    "Ref" : "EgressOnlyGateway"
                },
                "RouteTableId"                : {
                    "Ref" : "PrivateRouteTable1"
                }
            }
        },
        "PrivateRoute2IPv6"  : {
            "Type" : "AWS::EC2::Route",
            "Condition" : "AZ2PublicAndPrivateSubnetsAndIPv6",
            "Properties" : {
                "DestinationIpv6CidrBlock" : "::/0",
                "EgressOnlyInternetGatewayId" : {
                    "Ref" : "EgressOnlyGateway"
                },
                "RouteTableId"                : {
                    "Ref" : "PrivateRouteTable2"
                }
            }
        },
        "PrivateRoute3IPv6"  : {
            "Type" : "AWS::EC2::Route",
           "Condition" : "AZ3PublicAndPrivateSubnetsAndIPv6",
            "Properties" : {
                "DestinationIpv6CidrBlock" : "::/0",
                "EgressOnlyInternetGatewayId" : {
                    "Ref" : "EgressOnlyGateway"
                },
                "RouteTableId"                : {
                    "Ref" : "PrivateRouteTable3"
                }
            }
        },
        "AZ1PublicSubnet1RouteTableAssociation" : {
            "Type" : "AWS::EC2::SubnetRouteTableAssociation",
            "Condition" : "CreateAZ1PublicSubnet1",
            "Properties" : {
                "SubnetId" : {
                    "Ref" : "AZ1PublicSubnet1"
                },
                "RouteTableId" : {
                    "Ref" : "PublicRouteTable"
                }
            },
            "DependsOn"  : [
                "PublicRoute"
            ]
        },
        "AZ2PublicSubnet1RouteTableAssociation" : {
            "Type" : "AWS::EC2::SubnetRouteTableAssociation",
            "Condition" : "CreateAZ2PublicSubnet1",
            "Properties" : {
                "SubnetId" : {
                    "Ref" : "AZ2PublicSubnet1"
                },
                "RouteTableId" : {
                    "Ref" : "PublicRouteTable"
                }
            },
            "DependsOn"  : [
                "PublicRoute"
            ]
        },
        "AZ3PublicSubnet1RouteTableAssociation" : {
            "Type" : "AWS::EC2::SubnetRouteTableAssociation",
            "Condition" : "CreateAZ3PublicSubnet1",
            "Properties" : {
                "SubnetId" : {
                    "Ref" : "AZ3PublicSubnet1"
                },
                "RouteTableId" : {
                    "Ref" : "PublicRouteTable"
                }
            },
            "DependsOn"  : [
                "PublicRoute"
            ]
        },
        "AZ1PrivateSubnet1RouteTableAssociation" : {
            "Type" : "AWS::EC2::SubnetRouteTableAssociation",
            "Condition" : "CreateAZ1PublicPrivateSubnetPair",
            "Properties" : {
                "SubnetId" : {
                    "Ref" : "AZ1PrivateSubnet1"
                },
                "RouteTableId" : {
                    "Ref" : "PrivateRouteTable1"
                }
            }
        },
        "AZ2PrivateSubnet1RouteTableAssociation" : {
            "Type" : "AWS::EC2::SubnetRouteTableAssociation",
            "Condition" : "CreateAZ2PublicPrivateSubnetPair",
            "Properties" : {
                "SubnetId" : {
                    "Ref" : "AZ2PrivateSubnet1"
                },
                "RouteTableId" : {
                    "Ref" : "PrivateRouteTable2"
                }
            }
        },
        "AZ3PrivateSubnet1RouteTableAssociation" : {
            "Type" : "AWS::EC2::SubnetRouteTableAssociation",
            "Condition" : "CreateAZ3PublicPrivateSubnetPair",
            "Properties" : {
                "SubnetId" : {
                    "Ref" : "AZ3PrivateSubnet1"
                },
                "RouteTableId" : {
                    "Ref" : "PrivateRouteTable3"
                }
            }
        },
        "ElasticIp1"                             : {
            "Type" : "AWS::EC2::EIP",
            "Condition" : "CreateAZ1PublicPrivateSubnetPair",
            "Properties" : {
                "Domain" : "vpc"
            }
        },
        "NATGateway1"                            : {
            "Type" : "AWS::EC2::NatGateway",
            "Condition" : "CreateAZ1PublicPrivateSubnetPair",
            "Properties" : {
                "AllocationId" : {
                    "Fn::GetAtt" : [
                        "ElasticIp1",
                        "AllocationId"
                    ]
                },
                "SubnetId"     : {
                    "Ref" : "AZ1PublicSubnet1"
                }
            }
        },
        "ElasticIp2"                             : {
            "Type" : "AWS::EC2::EIP",
            "Condition" : "CreateAZ2PublicPrivateSubnetPair",
            "Properties" : {
                "Domain" : "vpc"
            }
        },
        "NATGateway2"                            : {
            "Type" : "AWS::EC2::NatGateway",
            "Condition" : "CreateAZ2PublicPrivateSubnetPair",
            "Properties" : {
                "AllocationId" : {
                    "Fn::GetAtt" : [
                        "ElasticIp2",
                        "AllocationId"
                    ]
                },
                "SubnetId"     : {
                    "Ref" : "AZ2PublicSubnet1"
                }
            }
        },
        "ElasticIp3"                             : {
            "Type" : "AWS::EC2::EIP",
            "Condition" : "CreateAZ3PublicPrivateSubnetPair",
            "Properties" : {
                "Domain" : "vpc"
            }
        },
        "NATGateway3"                            : {
            "Type" : "AWS::EC2::NatGateway",
            "Condition" : "CreateAZ3PublicPrivateSubnetPair",
            "Properties" : {
                "AllocationId" : {
                    "Fn::GetAtt" : [
                        "ElasticIp3",
                        "AllocationId"
                    ]
                },
                "SubnetId"     : {
                    "Ref" : "AZ3PublicSubnet1"
                }
            }
        },
        "EgressOnlyGateway"                      : {
            "Type" : "AWS::EC2::EgressOnlyInternetGateway",
            "Condition" : "CreateAnyPrivateSubnetsAndIPv6",
            "Properties" : {
                "VpcId" : {
                    "Ref" : "VPC"
                }
            }
        },
        "BastionSecurityGroup"                   : {
            "Type" : "AWS::EC2::SecurityGroup",
            "Properties" : {
                "VpcId" : {
                    "Ref" : "VPC"
                },
				"GroupName" : {
					"Fn::Sub" : "SG-${ApplicationTag}-${AWS::Region}-BastionHost-${EnvironmentTag}"
				},
                "GroupDescription" : "Security group for the Bastion Instance",
                "SecurityGroupIngress" : [
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "22",
                        "ToPort"     : "22",
                        "CidrIp"     : {
                            "Ref" : "ManagementSourceIP"
                        }
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "3389",
                        "ToPort"     : "3389",
                        "CidrIp"     : {
                            "Ref" : "ManagementSourceIP"
                        }
                    }
                ],
                "Tags"                 : [
                    {
                        "Key" : "Name",
                        "Value" : {
							"Fn::Sub" : "SG-${ApplicationTag}-${AWS::Region}-BastionHost-${EnvironmentTag}"
                        }
                    },
                    {
                        "Key" : "Environment",
                        "Value" : {
                            "Ref" : "EnvironmentTag"
                        }
                    },
                    {
                        "Key" : "Application",
                        "Value" : {
                            "Ref" : "ApplicationTag"
                        }
                    },
                    {
                        "Key" : "Organization",
                        "Value" : {
                            "Ref" : "OrganizationTag"
                        }
                    }
                ]
            }
        },
        "SSHSecurityGroup"                       : {
            "Type" : "AWS::EC2::SecurityGroup",
            "Properties" : {
                "VpcId" : {
                    "Ref" : "VPC"
                },
				"GroupName" : {
					"Fn::Sub" : "SG-${ApplicationTag}-${AWS::Region}-SSHFromBastionHost-${EnvironmentTag}"
				},
                "GroupDescription" : "Enable SSH access via port 22",
                "SecurityGroupIngress" : [
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "22",
                        "ToPort"     : "22",
                        "SourceSecurityGroupId" : {
                            "Ref" : "BastionSecurityGroup"
                        }
                    }
                ],
                "Tags"                 : [
                    {
                        "Key" : "Name",
                        "Value" : {
							"Fn::Sub" : "SG-${ApplicationTag}-${AWS::Region}-SSHFromBastionHost-${EnvironmentTag}"
                        }
                    },
                    {
                        "Key" : "Environment",
                        "Value" : {
                            "Ref" : "EnvironmentTag"
                        }
                    },
                    {
                        "Key" : "Application",
                        "Value" : {
                            "Ref" : "ApplicationTag"
                        }
                    },                   
                    {
                        "Key" : "Organization",
                        "Value" : {
                            "Ref" : "OrganizationTag"
                        }
                    }
                ]
            }
        },
        "WindowsRemoteManagementSecurityGroup"   : {
            "Type" : "AWS::EC2::SecurityGroup",
            "Properties" : {
                "VpcId" : {
                    "Ref" : "VPC"
                },
				"GroupName" : {
					"Fn::Sub" : "SG-${ApplicationTag}-${AWS::Region}-WindowsRemoteManagementFromBastionHost-${EnvironmentTag}"
                },
                "GroupDescription" : "Allows Remote RPC, WinRM, ICMP, and RDP from the Bastion Host.",
                "SecurityGroupIngress" : [
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "135",
                        "ToPort"     : "135",
                        "SourceSecurityGroupId" : {
                            "Ref" : "BastionSecurityGroup"
                        }
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "5985",
                        "ToPort"     : "5986",
                        "SourceSecurityGroupId" : {
                            "Ref" : "BastionSecurityGroup"
                        }
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "49152",
                        "ToPort"     : "65535",
                        "SourceSecurityGroupId" : {
                            "Ref" : "BastionSecurityGroup"
                        }
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "445",
                        "ToPort"     : "445",
                        "SourceSecurityGroupId" : {
                            "Ref" : "BastionSecurityGroup"
                        }
                    },
                    {
                        "IpProtocol" : "icmp",
                        "FromPort"   : "-1",
                        "ToPort"     : "-1",
                        "SourceSecurityGroupId" : {
                            "Ref" : "BastionSecurityGroup"
                        }
                    },
                    {
                        "IpProtocol" : "udp",
                        "FromPort"   : "137",
                        "ToPort"     : "138",
                        "SourceSecurityGroupId" : {
                            "Ref" : "BastionSecurityGroup"
                        }
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "139",
                        "ToPort"     : "139",
                        "SourceSecurityGroupId" : {
                            "Ref" : "BastionSecurityGroup"
                        }
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "3389",
                        "ToPort"     : "3389",
                        "SourceSecurityGroupId" : {
                            "Ref" : "BastionSecurityGroup"
                        }
                    }
                ],
                "Tags"                 : [
                    {
                        "Key" : "Name",
                        "Value" : {
							"Fn::Sub" : "SG-${ApplicationTag}-${AWS::Region}-WindowsRemoteManagementFromBastionHost-${EnvironmentTag}"
                        }
                    },
                    {
                        "Key" : "Environment",
                        "Value" : {
                            "Ref" : "EnvironmentTag"
                        }
                    },
                    {
                        "Key" : "Application",
                        "Value" : {
                            "Ref" : "ApplicationTag"
                        }
                    },
                    {
                        "Key" : "Organization",
                        "Value" : {
                            "Ref" : "OrganizationTag"
                        }
                    }
                ]
            }
        }
    },

    "Outputs"                  : {
        "VpcArn" : {
            "Value" : {
				"Fn::Sub" : [
					"arn:${Prefix}:ec2:${AWS::Region}:${AWS::AccountId}:vpc/${VPC}",
					{
						"Prefix" : {
                            "Fn::FindInMap" : [
                                "RegionMap",
                                {
                                    "Ref" : "AWS::Region"
                                },
                                "Arn"
                            ]
                        }
					}
				]
            }
        },
		"VpcId" : {
			"Value" : {
				"Ref" : "VPC"
			}
		},
        "SubnetArns" : {
            "Value" : {
                "Fn::If" : [
                    "CreateAnySubnets",
                    {
                        "Fn::Join" : [
                            ",",
                            [
                                {
                                    "Fn::If" : [
                                        "CreateAZ1PublicSubnet1",
                                        {
											"Fn::Sub" : [
												"arn:${Prefix}:ec2:${AWS::Region}:${AWS::AccountId}:subnet/${AZ1PublicSubnet1}",
												{
													"Prefix" : {
                                                        "Fn::FindInMap" : [
                                                            "RegionMap",
                                                            {
                                                                "Ref" : "AWS::Region"
                                                            },
                                                            "Arn"
                                                        ]
                                                    }
												}
											]
										},
										{
											"Ref" : "AWS::NoValue"
										}
									]     
                                },
								{
									"Fn::If" : [
										"CreateAZ2PublicSubnet1",
                                        {
											"Fn::Sub" : [
												"arn:${Prefix}:ec2:${AWS::Region}:${AWS::AccountId}:subnet/${AZ2PublicSubnet1}",
												{
													"Prefix" : {
                                                        "Fn::FindInMap" : [
                                                            "RegionMap",
                                                            {
                                                                "Ref" : "AWS::Region"
                                                            },
                                                            "Arn"
                                                        ]
                                                    }
												}
											]
										},
										{
											"Ref" : "AWS::NoValue"
										}
									]     
                                },
                                {
                                    "Fn::If" : [
                                        "CreateAZ3PublicSubnet1",
                                        {
											"Fn::Sub" : [
												"arn:${Prefix}:ec2:${AWS::Region}:${AWS::AccountId}:subnet/${AZ3PublicSubnet1}",
												{
													"Prefix" : {
                                                        "Fn::FindInMap" : [
                                                            "RegionMap",
                                                            {
                                                                "Ref" : "AWS::Region"
                                                            },
                                                            "Arn"
                                                        ]
                                                    }
												}
											]
										},
										{
											"Ref" : "AWS::NoValue"
										}
									]     
                                },
                                {
                                    "Fn::If" : [
                                        "CreateAZ1PrivateSubnet1",
                                        {
											"Fn::Sub" : [
												"arn:${Prefix}:ec2:${AWS::Region}:${AWS::AccountId}:subnet/${AZ1PrivateSubnet1}",
												{
													"Prefix" : {
                                                        "Fn::FindInMap" : [
                                                            "RegionMap",
                                                            {
                                                                "Ref" : "AWS::Region"
                                                            },
                                                            "Arn"
                                                        ]
                                                    }
												}
											]
										},
										{
											"Ref" : "AWS::NoValue"
										}
									]     
                                },
                                {
                                    "Fn::If" : [
                                        "CreateAZ2PrivateSubnet1",
                                        {
											"Fn::Sub" : [
												"arn:${Prefix}:ec2:${AWS::Region}:${AWS::AccountId}:subnet/${AZ2PrivateSubnet1}",
												{
													"Prefix" : {
                                                        "Fn::FindInMap" : [
                                                            "RegionMap",
                                                            {
                                                                "Ref" : "AWS::Region"
                                                            },
                                                            "Arn"
                                                        ]
                                                    }
												}
											]
										},
										{
											"Ref" : "AWS::NoValue"
										}
									]     
                                },
                                {
                                    "Fn::If" : [
                                        "CreateAZ3PrivateSubnet1",
                                        {
											"Fn::Sub" : [
												"arn:${Prefix}:ec2:${AWS::Region}:${AWS::AccountId}:subnet/${AZ3PrivateSubnet1}",
												{
													"Prefix" : {
                                                        "Fn::FindInMap" : [
                                                            "RegionMap",
                                                            {
                                                                "Ref" : "AWS::Region"
                                                            },
                                                            "Arn"
                                                        ]
                                                    }
												}
											]
										},
										{
											"Ref" : "AWS::NoValue"
										}
									]     
                                }
                            ]
                        ]
                    },
                    ""
                ]
            }
        },
		"SubnetIds" : {
			"Value" : {
				"Fn::If" : [
                    "CreateAnySubnets",
                    {
                        "Fn::Join" : [
                            ",",
                            [
                                {
                                    "Fn::If" : [
                                        "CreateAZ1PublicSubnet1",
                                        {
											"Ref" : "AZ1PublicSubnet1"
										},
										{
											"Ref" : "AWS::NoValue"
										}
									]     
                                },
								{
									"Fn::If" : [
										"CreateAZ2PublicSubnet1",
                                        {
											"Ref" : "AZ2PublicSubnet1"
										},
										{
											"Ref" : "AWS::NoValue"
										}
									]     
                                },
                                {
                                    "Fn::If" : [
                                        "CreateAZ3PublicSubnet1",
                                        {
											"Ref" : "AZ3PublicSubnet1"
										},
										{
											"Ref" : "AWS::NoValue"
										}
									]     
                                },
                                {
                                    "Fn::If" : [
                                        "CreateAZ1PrivateSubnet1",
                                        {
											"Ref" : "AZ1PrivateSubnet1"
										},
										{
											"Ref" : "AWS::NoValue"
										}
									]     
                                },
                                {
                                    "Fn::If" : [
                                        "CreateAZ2PrivateSubnet1",
                                        {
											"Ref" : "AZ2PrivateSubnet1"
										},
										{
											"Ref" : "AWS::NoValue"
										}
									]     
                                },
                                {
                                    "Fn::If" : [
                                        "CreateAZ3PrivateSubnet1",
                                        {
											"Ref" : "AZ3PrivateSubnet1"
										},
										{
											"Ref" : "AWS::NoValue"
										}
									]     
                                }
                            ]
                        ]
                    },
                    ""
                ]
			}
		},
		"AZ1PrivateSubnet1Id": {
			"Condition" : "CreateAZ1PrivateSubnet1",
			"Value" : {
				"Ref" : "AZ1PrivateSubnet1"
			}
		},
		"AZ2PrivateSubnet1Id": {
			"Condition" : "CreateAZ2PrivateSubnet1",
			"Value" : {
				"Ref" : "AZ2PrivateSubnet1"
			}
		},
		"AZ3PrivateSubnet1Id": {
		   "Condition" : "CreateAZ3PrivateSubnet1",
			"Value" : {
				"Ref" : "AZ3PrivateSubnet1"
			}
		},
        "InternetGatewayArns" : {
            "Value" : {
				"Fn::If" : [
					"CreateGateways",
					{
						"Fn::Join" : [
							",",
							[
								{
									"Fn::If" : [
										"CreateAnySubnets",
										{
											"Fn::Sub" : [
												"arn:${Prefix}:ec2:${AWS::Region}:${AWS::AccountId}:internet-gateway/${InternetGateway}",
												{
													"Prefix" : {
														"Fn::FindInMap" : [
															"RegionMap",
															{
																"Ref" : "AWS::Region"
															},
															"Arn"
														]
													}
												}
											]
										},
										{
											"Ref" : "AWS::NoValue"
										}
									]
								},                       
								{
									"Fn::If" : [
										"CreateAnyPrivateSubnetsAndIPv6",
										{
											"Fn::Sub" : [
												"arn:${Prefix}:ec2:${AWS::Region}:${AWS::AccountId}:egress-only-internet-gateway/${EgressOnlyGateway}",
												{
													"Prefix" : {
														"Fn::FindInMap" : [
															"RegionMap",
															{
																"Ref" : "AWS::Region"
															},
															"Arn"
														]
													}
												}
											]
										},
										{
											"Ref" : "AWS::NoValue"
										}
									]
								}
							]
						]
					},
					""
				]
            }
        },
        "RouteTableArns"      : {
            "Value" : {
				"Fn::If" : [
					"CreateAnyPublicSubnets",
					{
						"Fn::Join" : [
							",",
							[
								{
									"Fn::Sub" : [
										"arn:${Prefix}:ec2:${AWS::Region}:${AWS::AccountId}:route-table/${PublicRouteTable}",
										{
											"Prefix" : {
												"Fn::FindInMap" : [
													"RegionMap",
													{
														"Ref" : "AWS::Region"
													},
													"Arn"
												]
											}
										}
									]
								},
								{
									"Fn::If" : [
										"CreateAZ1PublicPrivateSubnetPair",
										{
											"Fn::Sub" : [
												"arn:${Prefix}:ec2:${AWS::Region}:${AWS::AccountId}:route-table/${PrivateRouteTable1}",
												{
													"Prefix" : {
														"Fn::FindInMap" : [
															"RegionMap",
															{
																"Ref" : "AWS::Region"
															},
															"Arn"
														]
													}
												}
											]
										},
										{
											"Ref" : "AWS::NoValue"
										}
									]
								},
								{
									"Fn::If" : [
										"CreateAZ2PublicPrivateSubnetPair",
										{
											"Fn::Sub" : [
												"arn:${Prefix}:ec2:${AWS::Region}:${AWS::AccountId}:route-table/${PrivateRouteTable2}",
												{
													"Prefix" : {
														"Fn::FindInMap" : [
															"RegionMap",
															{
																"Ref" : "AWS::Region"
															},
															"Arn"
														]
													}
												}
											]
										},
										{
											"Ref" : "AWS::NoValue"
										}
									]
								},
								{
									"Fn::If" : [
										"CreateAZ3PublicPrivateSubnetPair",
										{
											"Fn::Sub" : [
												"arn:${Prefix}:ec2:${AWS::Region}:${AWS::AccountId}:route-table/${PrivateRouteTable3}",
												{
													"Prefix" : {
														"Fn::FindInMap" : [
															"RegionMap",
															{
																"Ref" : "AWS::Region"
															},
															"Arn"
														]
													}
												}
											]
										},
										{
											"Ref" : "AWS::NoValue"
										}
									]
								}
							]
						]
					},
					""
				]
            }
        },
		"RouteTableIds" : {
			"Value" : {
				"Fn::If" : [
					"CreateAnyPublicSubnets",
					{
						"Fn::Join" : [
							",",
							[
								{
									"Ref" : "PublicRouteTable"
								},
								{
									"Fn::If" : [
										"CreateAZ1PublicPrivateSubnetPair",
										{
											"Ref" : "PrivateRouteTable1"
										},
										{
											"Ref" : "AWS::NoValue"
										}
									]
								},
								{
									"Fn::If" : [
										"CreateAZ2PublicPrivateSubnetPair",
										{
											"Ref" : "PrivateRouteTable2"
										},
										{
											"Ref" : "AWS::NoValue"
										}
									]
								},
								{
									"Fn::If" : [
										"CreateAZ3PublicPrivateSubnetPair",
										{
											"Ref" : "PrivateRouteTable3"
										},
										{
											"Ref" : "AWS::NoValue"
										}
									]
								}
							]
						]
					},
					""
				]
            }		 
		},
        "NatGatewayArns"      : {
            "Value" : {
                "Fn::If" : [
                    "CreateAtLeast1PublicAndPrivateSubnetPair",
                    {
                        "Fn::Join" : [
                            ",",
                            [
                                {
                                    "Fn::If" : [
                                        "CreateAZ1PublicPrivateSubnetPair",
                                        {
											"Fn::Sub" : [
												"arn:${Prefix}:ec2:${AWS::Region}:${AWS::AccountId}:nat-gateway/${NATGateway1}",
												{
													"Prefix" : {
														"Fn::FindInMap" : [
															"RegionMap",
															{
																"Ref" : "AWS::Region"
															},
															"Arn"
														]
													}
												}
											]
                                        },
                                        {
                                            "Ref" : "AWS::NoValue"
                                        }
                                    ]
                                },
                                {
                                    "Fn::If" : [
                                        "CreateAZ2PublicPrivateSubnetPair",
                                        {
											"Fn::Sub" : [
												"arn:${Prefix}:ec2:${AWS::Region}:${AWS::AccountId}:nat-gateway/${NATGateway2}",
												{
													"Prefix" : {
														"Fn::FindInMap" : [
															"RegionMap",
															{
																"Ref" : "AWS::Region"
															},
															"Arn"
														]
													}
												}
											]
                                        },
                                        {
                                            "Ref" : "AWS::NoValue"
                                        }
                                    ]
                                },
                                {
                                    "Fn::If" : [
                                        "CreateAZ3PublicPrivateSubnetPair",
                                        {
											"Fn::Sub" : [
												"arn:${Prefix}:ec2:${AWS::Region}:${AWS::AccountId}:nat-gateway/${NATGateway3}",
												{
													"Prefix" : {
														"Fn::FindInMap" : [
															"RegionMap",
															{
																"Ref" : "AWS::Region"
															},
															"Arn"
														]
													}
												}
											]
                                        },
                                        {
                                            "Ref" : "AWS::NoValue"
                                        }
                                    ]
                                }
                            ]
                        ]
                    },
                    ""
                ]
            }
        },
        "SecurityGroupArns"   : {
            "Value" : {
                "Fn::Join" : [
                    ",",
                    [
						{
							"Fn::Sub" : [
								"arn:${Prefix}:ec2:${AWS::Region}:${AWS::AccountId}:security-group/${Id}",
								{
									"Prefix" : {
										"Fn::FindInMap" : [
											"RegionMap",
											{
												"Ref" : "AWS::Region"
											},
											"Arn"
										]
									},
									"Id" : {
										"Fn::GetAtt" : [
                                            "BastionSecurityGroup",
                                            "GroupId"
                                        ]
									}
								}
							]
						},                      
                        {
							"Fn::Sub" : [
								"arn:${Prefix}:ec2:${AWS::Region}:${AWS::AccountId}:security-group/${Id}",
								{
									"Prefix" : {
										"Fn::FindInMap" : [
											"RegionMap",
											{
												"Ref" : "AWS::Region"
											},
											"Arn"
										]
									},
									"Id" : {
										"Fn::GetAtt" : [
                                            "SSHSecurityGroup",
                                            "GroupId"
                                        ]
									}
								}
							]
                        },
                        {
							"Fn::Sub" : [
								"arn:${Prefix}:ec2:${AWS::Region}:${AWS::AccountId}:security-group/${Id}",
								{
									"Prefix" : {
										"Fn::FindInMap" : [
											"RegionMap",
											{
												"Ref" : "AWS::Region"
											},
											"Arn"
										]
									},
									"Id" : {
										"Fn::GetAtt" : [
                                            "WindowsRemoteManagementSecurityGroup",
                                            "GroupId"
                                        ]
									}
								}
							]
                        }
                    ]
                ]
            }
        }
    }
}