{
	"AWSTemplateFormatVersion" : "2010-09-09",

	"Description" : "Creates a database and table for CloudTrail Logs. The setup assumes multiple accounts are aggregated in a single bucket",

	"Parameters" : {
		"SourceS3Location" : {
			"Type" : "String",
			"Description" : "The S3 location that contains the CloudTrail log files.",
			"Default" : "s3://<bucket>/<prefix>",
			"AllowedPattern" : "[sS]3://.*"
		},

		"NewS3BucketName" : {
			"Type" : "String",
			"Description" : "The name of the bucket where the partitioned CloudTrail logs will be placed. This bucket will be created.",
			"AllowedPattern" : "^[a-z](?:(?:\\.(?!\\.))|-|[a-zA-Z0-9]){1,61}[a-z]$",
            "ConstraintDescription" : "Member must satisfy regular expression pattern: ^[a-z](?:(?:\\.(?!\\.))|-|[a-zA-Z0-9]){1,61}[a-z]$"		
		},

		"ETLScriptLocation" : {
			"Type" : "String",
			"Description" : "Specify an s3 location where the python script for processing the CloudTrail logs exists in the s3://bucket/path/object.py format. If you leave this blank, the default s3 location for glue is used.",
			"AllowedPattern" : "(?:^$|^s3://[a-z](?:(?:\\.(?!\\.))|-|[a-zA-Z0-9]){1,61}[a-z]/.*$)"
		}
	},

	"Conditions"               : {
		"SpecifiedScriptLocation" : {
			"Fn::Not" : [
				{
					"Fn::Equals" : [
						{
							"Ref" : "ETLScriptLocation"
						},
						""
					]
				}
			]
		}
    },

	"Resources" : {
		"S3Bucket" : {
			"Type" : "AWS::S3::Bucket",
			"Properties" : {
				"BucketName" : {
					"Ref" : "NewS3BucketName"
				}
			}
		},
		"BucketPolicy" : {
			"Type" : "AWS::S3::BucketPolicy",
			"Properties" : {
				"Bucket" : {
					"Ref" : "S3Bucket"
				},
				"PolicyDocument" : {
					"Version" : "2012-10-17",
					"Id" : "1",
					"Statement" : [
						{
							"Effect": "Deny",
							"NotPrincipal" : {
								"AWS" : [
									{
										"Fn::GetAtt" : [ "GlueServiceRole", "Arn" ]
									}
								]
							},
							"Action" : [
								"s3:PutObject"
							],
							"Resource" : {
								"Fn::Sub" : "arn:${AWS::Partition}:s3:::${S3Bucket}/*"
							}
						}
					]
				}
			}
		},

		"GlueServiceRole" : {
            "Type" : "AWS::IAM::Role",
            "Properties" : {
                "AssumeRolePolicyDocument" : {
                    "Version" : "2012-10-17",
                    "Statement" : [
                        {
                            "Effect" : "Allow",
                            "Action" : [
                                "sts:AssumeRole"
                            ],
                            "Principal" : {
                                "Service" : [
                                    "glue.amazonaws.com"
                                ]
                            }
                        }
                    ]
                },
                "ManagedPolicyArns"        : [
                    "arn:aws:iam::aws:policy/service-role/AWSGlueServiceRole"
                ]
            }
        },
        "GlueS3Policy"    : {
            "Type" : "AWS::IAM::ManagedPolicy",
            "Properties" : {
                "PolicyDocument" : {
                    "Version" : "2012-10-17",
                    "Statement" : [
                        {
                            "Effect" : "Allow",
                            "Action" : [
                                "s3:GetObject"
                            ],
                            "Resource" : [
                                {
									"Fn::If" : [
										"SpecifiedScriptLocation",
										{
											"Fn::Sub" : [ "arn:${AWS::Partition}:s3:::${Bucket}/*",
												{
													"Bucket" : {
														"Fn::Select" : [ 2, {
																"Fn::Split" : [
																	"/",
																	{
																		"Ref" : "ETLScriptLocation"
																	}
																]
															}
														]
													}
												}
											]
										},
										{
											"Fn::Sub" : "arn:${AWS::Partition}:s3:::aws-glue-scripts-${AWS::AccountId}-${AWS::Region}/admin/cloudtrail_partition.py"
										}
									]								                                  
                                }
                            ]
                        },						
						{
                            "Effect" : "Allow",
                            "Action" : [
                                "s3:GetObject"
                            ],
                            "Resource" : [
                                {
									"Fn::Sub" :  "arn:aws:s3:::${SourceS3Location}/*"								                                  
                                }
                            ]
                        },
                        {
                            "Effect" : "Allow",
                            "Action" : [
                                "s3:ListBucket"
                            ],
                            "Resource" : [
                                {
									"Fn::Sub" :  "arn:aws:s3:::${SourceS3Location}"								                                  
                                }
                            ]
                        },
						 {
                            "Effect" : "Allow",
                            "Action" : [
								"s3:PutObject",
								"s3:DeleteObject",
								"s3:GetObject"
                            ],
                            "Resource" : [
                                {
									"Fn::Sub" :  "arn:aws:s3:::${S3Bucket}/*"								                                  
                                }
                            ]
                        },
                        {
                            "Effect" : "Allow",
                            "Action" : [
                                "s3:ListBucket"
                            ],
                            "Resource" : [
                                {
									"Fn::Sub" :  "arn:aws:s3:::${S3Bucket}"								                                  
                                }
                            ]
                        }
                    ]
                },
                "Roles"          : [
                    {
                        "Ref" : "GlueServiceRole"
                    }
                ]
            }
        },
		"GlueKMSPolicy"    : {
            "Type" : "AWS::IAM::ManagedPolicy",
            "Properties" : {
                "PolicyDocument" : {
                    "Version" : "2012-10-17",
                    "Statement" : [
                        {  
						 "Effect":"Allow",
						 "Action":[  
							"kms:Decrypt"
						 ],
						 "Resource":[  
							{
								"Fn::Sub" : "arn:aws:kms:*:${AWS::AccountId}:key/*"
							}
						 ]
					  }
                    ]
                },
                "Roles"          : [
                    {
                        "Ref" : "GlueServiceRole"
                    }
                ]
            }
        },

		"Database" : {
			"Type" : "AWS::Glue::Database",
			"Properties" : {
				"CatalogId" : {
					"Ref" : "AWS::AccountId"
				},
				"DatabaseInput" : {
					"Name" : "cloudtrail",
					"Description" : "Contains CloudTrail Logs"
				}
			}
		},

		"FlatTable" : {
			"Type" : "AWS::Glue::Table",
			"Properties" : {
				"CatalogId" : {
					"Ref" : "AWS::AccountId"
				},
				"DatabaseName" : {
					"Ref" : "Database"
				},
				"TableInput" : {
					"Description" : "Table containing CloudTrail Logs",
					"Name" : "cloudtrail_logs",
					"TableType" : "EXTERNAL_TABLE",
					"Parameters" : {
						"classification" : "cloudtrail"
					},
					"StorageDescriptor" : {
						"InputFormat" : "com.amazon.emr.cloudtrail.CloudTrailInputFormat",
						"OutputFormat" : "org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat",
						"SerdeInfo" : {
							"Name" : "CloudTrail SerDe",
							"SerializationLibrary" : "com.amazon.emr.hive.serde.CloudTrailSerde",
							"Parameters" : {}
						},
						"Parameters" : {
							"classification" : "cloudtrail"
						},
						"Location" : {
							"Ref" : "SourceS3Location"
						},
						"Compressed" : true,
						"Columns" : [
							{
								"Name" : "eventVersion",
								"Type" : "string"
							},
							{
								"Name" : "userIdentity",
								"Type" : {
									"Fn::Join" : [
										"",
										[
											"struct<",
											"type:string,",
											"principalId:string,",
											"arn:string,",
											"accountId:string,",
											"invokedBy:string,",
											"accessKeyId:string,",
											"userName:string,",
											"sessionContext:struct<",
												"attributes:struct<",
													"mfaAuthenticated:string,",
													"creationDate:string>,",
												"sessionIssuer:struct<",
													"type:string,",
													"principalId:string,",
													"arn:string,",
													"accountId:string,",
													"userName:string>>>"
										]
									]
								}								
							},
							{
								"Name" : "eventTime",
								"Type" : "string"
							},
							{
								"Name" : "eventSource",
								"Type" : "string"
							},
							{
								"Name" : "eventName",
								"Type" : "string"
							},
							{
								"Name" : "awsRegion",
								"Type" : "string"
							},
							{
								"Name" : "sourceIpAddress",
								"Type" : "string"
							},
							{
								"Name" : "userAgent",
								"Type" : "string"
							},
							{
								"Name" : "errorCode",
								"Type" : "string"
							},
							{
								"Name" : "errorMessage",
								"Type" : "string"
							},
							{
								"Name" : "requestParameters",
								"Type" : "string"
							},
							{
								"Name" : "responseElements",
								"Type" : "string"
							},
							{
								"Name" : "additionalEventData",
								"Type" : "string"
							},
							{
								"Name" : "requestId",
								"Type" : "string"
							},
							{
								"Name" : "eventId",
								"Type" : "string"
							},
							{
								"Name" : "resources",
								"Type" : {
									"Fn::Join" : [
										"",
										[
											"array<",
												"struct<",
													"arn:string,",
													"accoundId:string,",
													"type:string",
												">>"
										]
									]
								}
							},
							{
								"Name" : "eventType",
								"Type" : "string"
							},
							{
								"Name" : "apiVersion",
								"Type" : "string"
							},
							{
								"Name" : "readOnly",
								"Type" : "string"
							},
							{
								"Name" : "recipientAccountId",
								"Type" : "string"
							},
							{
								"Name" : "serviceEventDetails",
								"Type" : "string"
							},
							{
								"Name" : "sharedEventID",
								"Type" : "string"
							},
							{
								"Name" : "vpcEndpointId",
								"Type" : "string"
							}
						]
					}
				}
			}
		},

		"PartitionedTable" : {
			"Type" : "AWS::Glue::Table",
			"Properties" : {
				"CatalogId" : {
					"Ref" : "AWS::AccountId"
				},
				"DatabaseName" : {
					"Ref" : "Database"
				},
				"TableInput" : {
					"Description" : "Table containing CloudTrail Logs",
					"Name" : "cloudtrail_logs_partitioned",
					"TableType" : "EXTERNAL_TABLE",
					"PartitionKeys" : [
						{
							"Name" : "accountId",
							"Type" : "string"
						},
						{
							"Name" : "region",
							"Type" : "string"
						},
						{
							"Name" : "year",
							"Type" : "int"
						},
						{
							"Name" : "month",
							"Type" : "int"
						},
						{
							"Name" : "day",
							"Type" : "int"
						}
					],
					"StorageDescriptor" : {
						"InputFormat" : "com.amazon.emr.cloudtrail.CloudTrailInputFormat",
						"OutputFormat" : "org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat",
						"Parameters" : {
							"classification" : "cloudtrail"
						},
						"SerdeInfo" : {
							"Name" : "CloudTrail SerDe",
							"SerializationLibrary" : "com.amazon.emr.hive.serde.CloudTrailSerde"
						},
						"Location" : {
							"Fn::Sub" : "s3://${S3Bucket}"
						},
						"Columns" : [
							{
								"Name" : "eventVersion",
								"Type" : "string"
							},
							{
								"Name" : "userIdentity",
								"Type" : {
									"Fn::Join" : [
										"",
										[
											"struct<",
												"type:string,",
												"principalId:string,",
												"arn:string,",
												"accountId:string,",
												"invokedBy:string,",
												"accessKeyId:string,",
												"userName:string,",
												"sessionContext:struct<",
													"attributes:struct<",
														"mfaAuthenticated:string,",
														"creationDate:string>,",
													"sessionIssuer:struct<",
														"type:string,",
														"principalId:string,",
														"arn:string,",
														"accountId:string,",
														"userName:string",
													">",
												">",
											">"
										]
									]
								}								
							},
							{
								"Name" : "eventTime",
								"Type" : "string"
							},
							{
								"Name" : "eventSource",
								"Type" : "string"
							},
							{
								"Name" : "eventName",
								"Type" : "string"
							},
							{
								"Name" : "awsRegion",
								"Type" : "string"
							},
							{
								"Name" : "sourceIpAddress",
								"Type" : "string"
							},
							{
								"Name" : "userAgent",
								"Type" : "string"
							},
							{
								"Name" : "errorCode",
								"Type" : "string"
							},
							{
								"Name" : "errorMessage",
								"Type" : "string"
							},
							{
								"Name" : "requestParameters",
								"Type" : "string"
							},
							{
								"Name" : "responseElements",
								"Type" : "string"
							},
							{
								"Name" : "additionalEventData",
								"Type" : "string"
							},
							{
								"Name" : "requestId",
								"Type" : "string"
							},
							{
								"Name" : "eventId",
								"Type" : "string"
							},
							{
								"Name" : "resources",
								"Type" : {
									"Fn::Join" : [
										"",
										[
											"array<",
												"struct<",
													"arn: string,",
													"accoundId: string,",
													"type: string",
												">>"
										]
									]
								}
							},
							{
								"Name" : "eventType",
								"Type" : "string"
							},
							{
								"Name" : "apiVersion",
								"Type" : "string"
							},
							{
								"Name" : "readOnly",
								"Type" : "string"
							},
							{
								"Name" : "recipientAccountId",
								"Type" : "string"
							},
							{
								"Name" : "serviceEventDetails",
								"Type" : "string"
							},
							{
								"Name" : "sharedEventID",
								"Type" : "string"
							},
							{
								"Name" : "vpcEndpointId",
								"Type" : "string"
							}
						]
					}
				}
			}
		},

		"GlueJob" : {
			"Type" : "AWS::Glue::Job",
			"Properties" : {
				"Name" : "CloudTrail Logs Partitioning",
				"Role" : {
                    "Ref" : "GlueServiceRole"
                },
                "DefaultArguments" : {
                    "--job-bookmark-option" : "job-bookmark-enable",
                    "--enable-metrics"      : "",
                    "--TempDir"             : {
                        "Fn::Sub" : "s3://aws-glue-temporary-${AWS::AccountId}-${AWS::Region}"
                    }
                },
                "ExecutionProperty" : {
                    "MaxConcurrentRuns" : 10
                },
                "MaxRetries"        : 0,
                "Description"       : "Performs an ETL on the raw CloudTrail logs to partition them and converts them to parquet.",
                "Command"           : {
                    "Name" : "glueetl",
                    "ScriptLocation" : {
						"Fn::If" : [
							"SpecifiedScriptLocation",
							{
								"Ref" : "ETLScriptLocation"
							},
							{
								"Fn::Sub" : "s3://aws-glue-scripts-${AWS::AccountId}-${AWS::Region}/admin/cloudtrail_partition.py"
							}
						]                 
                    }
                }
			}
		}
	},

	"Outputs" : {
	}
}
