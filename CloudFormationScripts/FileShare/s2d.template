{
	"AWSTemplateFormatVersion" : "2010-09-09",

	"Description" : "A 2 or 3 node Storage Spaces Direct (S2D) failover cluster with either a SOFS of General Use File Share.",

	"Parameters" : {
		"ConfigBucketName" : {
			"Description" : "The name of the bucket containing the configuration scripts",
			"Type" : "String",
			"AllowedPattern" : "^[a-z](?:(?:\\.(?!\\.))|-|[a-zA-Z0-9]){1,61}[a-z]$",
            "ConstraintDescription" : "Member must satisfy regular expression pattern: ^[a-z](?:(?:\\.(?!\\.))|-|[a-zA-Z0-9]){1,61}[a-z]$"
		},
		"ConfigS3KeyPrefix" : {
			"Description": "S3 key prefix for the configuration files assets. Key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).",
			"AllowedPattern": "^[0-9a-zA-Z-/]*$",
            "ConstraintDescription": "Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).",
            "Default": "s2d/fileserver/",    
            "Type": "String"
		},

		"DomainUserPasswordSSMParameterKey" : {
			"Description" : "The name of the SSM Parameter Store parameter that contains the domain user password.",
			"Type" : "String",
			"MinLength" : 1,
			"NoEcho" : "true"
		},
		"DomainUsername" : {
			"Description" : "The account username that will be used to join the nodes to the domain and configure the failover cluster. Must have admin rights on the nodes and the ability to create computer objects in AD.",
			"Type" : "String",
			"MinLength" : 1,
			"Default" : "administrator"
		},
		"DomainName" : {
			"Description" : "The FQDN of the domain being joined. The servers must be able to resolve this name via DNS.",
			"Type" : "String",
			"MinLength" : 3
		},

		"OSImage" : {
			"Description" : "The OS for the WSFC nodes.",
			"Type" : "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
			"AllowedValues" : [
				"/aws/service/ami-windows-latest/Windows_Server-2016-English-Core-Base",
				"/aws/service/ami-windows-latest/Windows_Server-1803-English-Core-Base",
				"/aws/service/ami-windows-latest/Windows_Server-1809-English-Core-Base",
				"/aws/service/ami-windows-latest/Windows_Server-2019-English-Core-Base",
				"/aws/service/ami-windows-latest/Windows_Server-1709-English-Core-Base",
				"/aws/service/ami-windows-latest/Windows_Server-2016-English-Full-Base",
				"/aws/service/ami-windows-latest/Windows_Server-2019-English-Full-Base"
			],
			"Default" : "/aws/service/ami-windows-latest/Windows_Server-2019-English-Core-Base"
		},
        "WSFCInstanceType" : {
            "Description" : "The EC2 instance type for the WSFC nodes.",
            "Type"        : "String",
            "AllowedValues" : [ 
				"t3.nano",
				"t3.micro",
				"t3.small",
				"t3.medium",
				"t3.large",
				"t3.xlarge",
				"t3.2xlarge",

				"t3a.nano",
				"t3a.micro",
				"t3a.small",
				"t3a.medium",
				"t3a.large",
				"t3a.xlarge",
				"t3a.2xlarge",

                "m4.large",
                "m4.xlarge",
                "m4.2xlarge",
                "m4.4xlarge",
                "m4.10xlarge",
                
				"m5.large",
				"m5.xlarge",
				"m5.2xlarge",
				"m5.4xlarge",
				"m5.12xlarge",
				"m5.24xlarge",

				"m5d.large",
				"m5d.xlarge",
				"m5d.2xlarge",
				"m5d.4xlarge",
				"m5d.12xlarge",
				"m5d.24xlarge",

				"m5a.large",
				"m5a.xlarge",
				"m5a.2xlarge",
				"m5a.4xlarge",
				"m5a.12xlarge",
				"m5a.24xlarge",

                "c4.large",
                "c4.xlarge",
                "c4.2xlarge",
                "c4.4xlarge",
                "c4.8xlarge",

				"c5.large",
                "c5.xlarge",
                "c5.2xlarge",
                "c5.4xlarge",
                "c5.9xlarge",
				"c5.18xlarge",

				"c5d.large",
                "c5d.xlarge",
                "c5d.2xlarge",
                "c5d.4xlarge",
                "c5d.9xlarge",
				"c5d.18xlarge",

				"c5n.large",
                "c5n.xlarge",
                "c5n.2xlarge",
                "c5n.4xlarge",
                "c5n.9xlarge",
				"c5n.18xlarge",

				"r4.large",
                "r4.xlarge",
                "r4.2xlarge",
                "r4.4xlarge",
                "r4.8xlarge",
				"r4.16xlarge",

                "r5.large",
                "r5.xlarge",
                "r5.2xlarge",
                "r5.4xlarge",
                "r5.12xlarge",
				"r5.24xlarge",

				"r5d.large",
                "r5d.xlarge",
                "r5d.2xlarge",
                "r5d.4xlarge",
                "r5d.12xlarge",
				"r5d.24xlarge",

				"r5a.large",
                "r5a.xlarge",
                "r5a.2xlarge",
                "r5a.4xlarge",
                "r5a.12xlarge",
				"r5a.24xlarge",

				"i3.large",
				"i3.xlarge",
				"i3.2xlarge",
				"i3.4xlarge",
				"i3.8xlarge",
				"i3.16xlarge"
            ],
            "Default"       : "m5.large",
            "ConstraintDescription" : "Must be a valid EC2 instance type"
        },
		"KeyPairName": {
            "Description": "Public/private key pairs allow you to securely connect to your instance after it launches",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },

		"CachePageSizeKBytes" : {
			"Description" : "Specifies the page size used by S2D cache. This parameter is useful to control the memory footprint used to manage the pages. To reduce the memory overhead on systems with considerably large amounts of storage the page size can be increased to 32 kilobytes (KB) or even 64 KB. The default value is 16 KB, which represents a good tradeoff on most systems.",
			"Type" : "Number",
			"Default" : 16,
			"AllowedValues" : [
				16,
				32,
				64
			]
		},
		"CSVCacheSizeMBytes" : {
			"Description" : "Specifies the CSV cache size. You can optionally enable the cluster shared volume (CSV) cache to use system memory (RAM) as a write-through block-level cache of read operations that aren't already cached by the Windows cache manager. Set to 0 to not enable the cache.",
			"Type" : "Number",
			"Default" : 2048,
			"MinValue" : 0
		},
		"FileSystem" : {
			"Description" : "The file system to format the S2D volume with.",
			"Type" : "String",
			"AllowedValues" : [
				"CSVFS_ReFS",
				"CSVFS_NTFS"
			],
			"Default" : "CSVFS_ReFS"
		},
		"FileShareType" : {
			"Description" : "The type of the file share",
			"Type" : "String",
			"AllowedValues" : [
				"SOFS",
				"GeneralUse"
			],
			"Default" : "GeneralUse"
		},
		"EnableJumboFrames" : {
			"Description" : "Specifies if jumbo frames should be enabled on the failover cluster nodes.",
			"Type" : "String",
			"AllowedValues" : [
				"true",
				"false"
			],
			"Default" : "true"
		},

		"OSVolumeSize": {
            "Default": "30",
            "Description": "Volume size for the OS volume",
            "MaxValue": "16000",
            "MinValue": "20",
            "Type": "Number"
        },
        "OSVolumeType": {
            "AllowedValues": [
                "gp2",
                "io1"
            ],
            "Default": "gp2",
            "Description": "Volume type for the OS volume",
            "Type": "String"
        },
        "OSVolumeIops": {
            "Default": "1000",
            "Description": "Iops for the OS volume (only used when volume type is io1)",
            "MaxValue": "20000",
            "MinValue": "100",
            "Type": "Number"
        },

		"FileShareVolumeSize": {
            "Default": "100",
            "Description": "Volume size for each EBS volume that will be pooled as part of the file share. There will be 2 or 4 volumes per node.",
            "MaxValue": "16000",
            "MinValue": "100",
            "Type": "Number"
        },
        "FileShareVolumeType": {
            "AllowedValues": [
                "gp2",
                "io1"
            ],
            "Default": "gp2",
            "Description": "Volume type for the file share",
            "Type": "String"
        },
        "FileShareVolumeIops": {
            "Default": "1000",
            "Description": "Iops for the file share (only used when volume type is io1)",
            "MaxValue": "20000",
            "MinValue": "100",
            "Type": "Number"
        },
		"DataDisksPerNode" : {
			"Description" : "S2D requires at least 2 disks per node, and optimally 4.",
			"Type" : "Number",
			"AllowedValues" : [
				2,
				4
			],
			"Default" : 2
		},

		"ClusterSize" : {
			"Description" : "The number of nodes in the failover cluster.",
			"Type" : "Number",
			"AllowedValues" : [
				2,
				3
			],
			"Default" : 3
		},
		"WSFCNetBIOSName" : {
			"Description" : "The name of the WSFC",
			"Type" : "String",
			"MinLength" : 1,
			"MaxLength" : 15,
			"Default" : "WSFC1"
		},
		"StoragePoolFriendlyName" : {
			"Description" : "The name assigned to the S2D storage pool",
			"Type" : "String",
			"MinLength" : 1,
			"Default" : "S2D-StoragePool"
		},
		"VolumeFriendlyName" : {
			"Description" : "The friendly name for the S2D volume.",
			"Type" : "String",
			"Default" : "Volume1",
			"MinLength" : 1
		},
		"FileServerNetBIOSName" : {
			"Description" : "The name of the File Server access point",
			"Type" : "String",
			"MinLength" : 1,
			"MaxLength" : 15,
			"Default" : "S2DFileServer"
		},
		"FileShareName" : {
			"Description" : "The name of the share. It will be created on the root of the S2D volume.",
			"Type" : "String",
			"MinLength" : 1,
			"Default" : "fileshare"
		},

		"WSFCNode1NetBIOSName": {
            "AllowedPattern": "[a-zA-Z0-9\\-]+",
            "Default": "WSFCNode1",
            "Description": "NetBIOS name of the first WSFC Node (up to 15 characters)",
            "MaxLength": "15",
            "Type": "String"
        },
		"WSFCNode2NetBIOSName": {
            "AllowedPattern": "[a-zA-Z0-9\\-]+",
            "Default": "WSFCNode2",
            "Description": "NetBIOS name of the second WSFC Node (up to 15 characters)",
            "MaxLength": "15",
            "Type": "String"
        },
		"WSFCNode3NetBIOSName": {
            "AllowedPattern": "[a-zA-Z0-9\\-]+",
            "Default": "WSFCNode3",
            "Description": "NetBIOS name of the third WSFC Node (up to 15 characters). If this is only a 2 node cluster, this is the NetBIOS name of the server running the file share witness.",
            "MaxLength": "15",
            "Type": "String"
        },

		"WSFCNode1PrivateIP1": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$",
            "Default": "172.31.32.100",
            "Description": "Primary private IP for the first WSFC Node located in Availability Zone 1",
            "Type": "String"
        },
        "WSFCNode1PrivateIP2": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$",
            "Default": "172.31.32.101",
            "Description": "Secondary private IP for WSFC cluster on first WSFC Node",
            "Type": "String"
        },
        "WSFCNode1PrivateIP3": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$",
            "Default": "172.31.32.102",
            "Description": "Third private IP for file share on first WSFC Node",
            "Type": "String"
        },

		"WSFCNode2PrivateIP1": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$",
            "Default": "172.31.80.100",
            "Description": "Primary private IP for the second WSFC Node located in Availability Zone 2",
            "Type": "String"
        },
        "WSFCNode2PrivateIP2": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$",
            "Default": "172.31.80.101",
            "Description": "Secondary private IP for WSFC cluster on second WSFC Node",
            "Type": "String"
        },
        "WSFCNode2PrivateIP3": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$",
            "Default": "172.31.80.102",
            "Description": "Third private IP for file share on second WSFC Node",
            "Type": "String"
        },

		"WSFCNode3PrivateIP1": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$",
            "Default": "172.31.0.100",
            "Description": "Primary private IP for the third WSFC Node located in Availability Zone 2",
            "Type": "String"
        },
        "WSFCNode3PrivateIP2": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$",
            "Default": "172.31.0.101",
            "Description": "Secondary private IP for WSFC cluster on third WSFC Node",
            "Type": "String"
        },
        "WSFCNode3PrivateIP3": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$",
            "Default": "172.31.0.102",
            "Description": "Third private IP for file share on second WSFC Node",
            "Type": "String"
        },

		"VpcId" : {
			"Description" : "The VPC to deploy the servers into",
			"Type" : "AWS::EC2::VPC::Id"
		},
		"Subnet1"        : {
            "Type" : "AWS::EC2::Subnet::Id",
            "Description" : "The first subnet to deploy a WSFC node into",
			"Default" : "subnet-8101c5dd"
        },
        "Subnet2"        : {
            "Type" : "AWS::EC2::Subnet::Id",
            "Description" : "The second subnet to deploy a WSFC node into",
			"Default" : "subnet-3f458311"
        },
		"Subnet3"        : {
            "Type" : "AWS::EC2::Subnet::Id",
            "Description" : "The third subnet to deploy a WSFC node into.",
			"Default" : "subnet-94f13ef3"
        },

		"OrganizationTag"            : {
            "Description" : "The organization this account is associated with",
            "Type"        : "String",
            "AllowedPattern" : "^\\S{2,}$",
            "ConstraintDescription" : "Member must satisfy regular expression pattern: ^\\S{2,}$"
        },
        "ApplicationTag"             : {
            "Description" : "The application this account is associated with",
            "Type"        : "String",
            "AllowedPattern" : "^\\S{2,}$",
            "ConstraintDescription" : "Member must satisfy regular expression pattern: ^\\S{2,}$",
			"Default" : "s2d"
        },
        "EnvironmentTag"             : {
            "Description" : "The environment this account is associated with",
            "Type"        : "String",
            "AllowedPattern" : "^\\S{2,}$",
            "ConstraintDescription" : "Member must satisfy regular expression pattern: ^\\S{2,}$"
        }
	},

	"Metadata"                 : {
        "AWS::CloudFormation::Interface" : {
            "ParameterGroups" : [
				{
                    "Label" : {
                        "default" : "CFN S3 Information"
                    },
                    "Parameters" : [
                        "ConfigBucketName",
                        "ConfigS3KeyPrefix"
                    ]
                },
				{
                    "Label" : {
                        "default" : "Active Directory"
                    },
                    "Parameters" : [
                        "DomainName",
                        "DomainUsername",
                        "DomainUserPasswordSSMParameterKey"
                    ]
                }, 
                {
                    "Label" : {
                        "default" : "Network Configuration"
                    },
                    "Parameters" : [
                        "VpcId",
                        "Subnet1",
                        "Subnet2",
                        "Subnet3"
                    ]
                },
                {
                    "Label" : {
                        "default" : "Instance Configuration"
                    },
                    "Parameters" : [
                        "WSFCInstanceType",
                        "WSFCOSType",
                        "KeyPairName"
                    ]
                },
				{
                    "Label" : {
                        "default" : "OS Disk EBS Configuration"
                    },
                    "Parameters" : [
                        "OSVolumeSize",
                        "OSVolumeType",
                        "OSVolumeIops"
                    ]
                },
				{
                    "Label" : {
                        "default" : "Data Volume EBS Configuration"
                    },
                    "Parameters" : [
						"FileShareVolumeSize",
                        "FileShareVolumeType",
                        "FileShareVolumeIops",
						"DataDisksPerNode"
                    ]
                },				
                {
                    "Label" : {
                        "default" : "Failover Cluster Configuration"
                    },
                    "Parameters" : [
						"FileShareType",
                        "WSFCNetBIOSName",
                        "FileServerNetBIOSName",
						"ClusterSize",
                        "StoragePoolFriendlyName",
						"VolumeFriendlyName",
						"FileSystem",
						"FileShareName",
						"CachePageSizeKBytes",
						"CSVCacheSizeMBytes",
						"EnableJumboFrames"
                    ]
                },
				{
                    "Label" : {
                        "default" : "Node 1 Network Configuration"
                    },
                    "Parameters" : [
						"WSFCNode1NetBIOSName",
                        "WSFCNode1PrivateIP1",
                        "WSFCNode1PrivateIP2",
                        "WSFCNode1PrivateIP3"
                    ]
                }, 
				{
                    "Label" : {
                        "default" : "Node 2 Network Configuration"
                    },
                    "Parameters" : [
						"WSFCNode2NetBIOSName",
                        "WSFCNode2PrivateIP1",
                        "WSFCNode2PrivateIP2",
                        "WSFCNode2PrivateIP3"
                    ]
                }, 
				{
                    "Label" : {
                        "default" : "Node 3 Network Configuration"
                    },
                    "Parameters" : [
						"WSFCNode3NetBIOSName",
                        "WSFCNode3PrivateIP1",
                        "WSFCNode3PrivateIP2",
                        "WSFCNode3PrivateIP3"
                    ]
                }, 
                {
                    "Label" : {
                        "default" : "Tagging"
                    },
                    "Parameters" : [
                        "OrganizationTag",
                        "ApplicationTag",
                        "EnvironmentTag"
                    ]
                }
            ]
        }
    },

	"Conditions" : {
		"Is3Node"                     : {
            "Fn::Equals" : [
				{
					"Ref" : "ClusterSize"
				},
				3
			]
        },
		"IsTwoNode": {
            "Fn::Not": [
                {
                    "Condition" : "Is3Node"
                }
            ]
        },
		"OSVolIsIo1": {
            "Fn::Equals": [
                {
                    "Ref": "OSVolumeType"
                },
                "io1"
            ]
        },
        "FileShareVolIsIo1": {
            "Fn::Equals": [
                {
                    "Ref": "FileShareVolumeType"
                },
                "io1"
            ]
        },
		"RenameNode1" : {
			"Fn::Not" : [
				{
					"Fn::Equals" : [
						{
							"Ref" : "WSFCNode1NetBIOSName"
						},
						""						
					]
				}
			]
		},
		"RenameNode2" : {
			"Fn::Not" : [
				{
					"Fn::Equals" : [
						{
							"Ref" : "WSFCNode2NetBIOSName"
						},
						""						
					]
				}
			]
		},
		"RenameNode3" : {
			"Fn::Not" : [
				{
					"Fn::Equals" : [
						{
							"Ref" : "WSFCNode3NetBIOSName"
						},
						""						
					]
				}
			]
		},
		"UseCSVCache" : {
			"Fn::Not" : [
					{
					"Fn::Equals" : [
						{
							"Ref" : "CSVCacheSizeMBytes"
						},
						0
					]
				}
			]
		},
		"UseSOFS" : {
			"Fn::Equals" : [
				{
					"Ref" : "FileShareType"
				},
				"SOFS"
			]
		},
		"IsUsEast1" : {
			"Fn::Equals"  : [
				{
					"Ref" : "AWS::Region"
				},
				"us-east-1"
			]
		},
		"DisableAutoReplace" : {
			"Fn::Equals" : [
				{
					"Ref" : "DataDisksPerNode"
				},
				2
			]
		},
		"Use4Disks" : {
			"Fn::Not" : [
				{
					"Condition" : "DisableAutoReplace"
				}
			]
		},
		"3NodeAndUse4Disks" : {
			"Fn::And" : [
				{
					"Condition" : "Use4Disks"
				},
				{
					"Condition" : "Is3Node"
				}
			]
		},
		"UsesInstanceStorageCache" : {
			"Fn::Equals" : [
				{
					"Fn::FindInMap" : [
						"InstanceTypeMap",
						{
							"Ref" : "WSFCInstanceType"
						},
						"UsesInstanceStorage"
					]					
				},
				true
			]
		},
		"UseJumboFrames" : {
			"Fn::Equals" : [
				{
					"Ref" : "EnableJumboFrames"
				},
				"true"
			]
		}
	},

	"Rules": {
        "SubnetsInVPC": {
            "Assertions": [
                {
                    "Assert": {
                        "Fn::EachMemberIn": [
                            {
                                "Fn::ValueOfAll": [
                                    "AWS::EC2::Subnet::Id",
                                    "VpcId"
                                ]
                            },
                            {
                                "Fn::RefAll": "AWS::EC2::VPC::Id"
                            }
                        ]
                    },
                    "AssertDescription": "All subnets must in the VPC"
                }
            ]
        }
    },

	"Mappings" : {
		"RegionMap" : {
            "us-east-1" : {
                "ELBPrincipalId" : "127311923021",
				"HostedZoneId" : "Z1UJRXOUMOOFQ8",
				"S3DnsName" : "s3"
            },
            "us-east-2" : {
                "ELBPrincipalId" : "033677994240",
				"HostedZoneId" : "ZOJJZC49E0EPZ",
				"S3DnsName" : "s3"
            },
            "us-west-2" : {
                "ELBPrincipalId" : "797873946194",
				"HostedZoneId" : "Z2OJLYMUO9EFXC",
				"S3DnsName" : "s3"
            },
            "us-west-1" : {
                "ELBPrincipalId" : "027434742980",
				"HostedZoneId" : "Z2MUQ32089INYE",
				"S3DnsName" : "s3"
            },
            "ca-central-1" : {
                "ELBPrincipalId" : "985666609251",
				"HostedZoneId" : "Z19DQILCV0OWEC",
				"S3DnsName" : "s3"
            },
            "eu-west-1"    : {
                "ELBPrincipalId" : "156460612806",
				"HostedZoneId" : "ZLY8HYME6SFDD",
				"S3DnsName" : "s3"
            },
            "eu-west-2"    : {
                "ELBPrincipalId" : "652711504416",
				"HostedZoneId" : "ZJ5UAJN8Y3Z2Q",
				"S3DnsName" : "s3"
            },
			"eu-west-3"    : {
                "ELBPrincipalId" : "009996457667",
				"HostedZoneId" : "Z3KY65QIEKYHQQ",
				"S3DnsName" : "s3"
            },
            "eu-central-1" : {
                "ELBPrincipalId" : "054676820928",
				"HostedZoneId" : "Z1U9ULNL0V5AJ3",
				"S3DnsName" : "s3"
            },
            "ap-northeast-1" : {
                "ELBPrincipalId" : "582318560864",
				"HostedZoneId" : "Z1YSHQZHG15GKL",
				"S3DnsName" : "s3"
            },
            "ap-northeast-2" : {
                "ELBPrincipalId" : "600734575887",
				"HostedZoneId" : "Z20JF4UZKIW1U8",
				"S3DnsName" : "s3"
            },
			"ap-northeast-3" : {
                "ELBPrincipalId" : "383597477331",
				"HostedZoneId" : "Z2YQB5RD63NC85",
				"S3DnsName" : "s3"
            },
            "ap-southeast-1" : {
                "ELBPrincipalId" : "114774131450",
				"HostedZoneId" : "ZL327KTPIQFUL",
				"S3DnsName" : "s3"
            },
            "ap-southeast-2" : {
                "ELBPrincipalId" : "783225319266",
				"HostedZoneId" : "Z2RPCDW04V8134",
				"S3DnsName" : "s3"
            },
            "ap-south-1"     : {
                "ELBPrincipalId" : "718504428378",
				"HostedZoneId" : "Z3VO1THU9YC4UR",
				"S3DnsName" : "s3"
            },
            "sa-east-1"      : {
                "ELBPrincipalId" : "507241528517",
				"HostedZoneId" : "ZCMLWB8V5SYIT",
				"S3DnsName" : "s3"
            },
            "us-gov-west-1"  : {
                "ELBPrincipalId" : "048591011584",
				"HostedZoneId" : "",
				"S3DnsName" : "s3-us-gov-west-1"
            },
            "us-gov-west-2"  : {
                "ELBPrincipalId" : "",
				"HostedZoneId" : "",
				"S3DnsName" : "s3-us-gov-west-2"
            },
            "us-gov-east-1"  : {
                "ELBPrincipalId" : "",
				"HostedZoneId" : "",
				"S3DnsName" : "s3-us-gov-east-1"
            },
            "us-gov-east-2"  : {
                "ELBPrincipalId" : "",
				"HostedZoneId" : "",
				"S3DnsName" : "s3-us-gov-east-2"
            },
            "cn-north-1"     : {
                "ELBPrincipalId" : "638102146993",
				"HostedZoneId" : "",
				"S3DnsName" : "s3"
            },
			"cn-northwest-1" : {
				"Partition" : "aws-cn",
				"ELBPrincipalId" : "037604701340",
				"HostedZoneId" : "",
				"S3DnsName" : "s3"
			},
			"us-iso-east-1" : {
				"Partition" : "aws-iso",
				"ELBPrincipalId" : "",
				"HostedZoneId" : "",
				"S3DnsName" : "s3"
			},
			"us-isob-east-1" : {
				"Partition" : "aws-iso-b",
				"ELBPrincipalId" : "",
				"HostedZoneId" : "",
				"S3DnsName" : "s3"
			}
        },
		"InstanceTypeMap" : {
			"t3.nano" : {
				"UsesInstanceStorage" : false,
				"IsNitroHypervisor" : true
			},
			"t3.micro" : {
				"UsesInstanceStorage" : false,
				"IsNitroHypervisor" : true
			},
			"t3.small" : {
				"UsesInstanceStorage" : false,
				"IsNitroHypervisor" : true
			},
			"t3.medium" : {
				"UsesInstanceStorage" : false,
				"IsNitroHypervisor" : true
			},
			"t3.large" : {
				"UsesInstanceStorage" : false,
				"IsNitroHypervisor" : true
			},
			"t3.xlarge" : {
				"UsesInstanceStorage" : false,
				"IsNitroHypervisor" : true
			},
			"t3.2xlarge" : {
				"UsesInstanceStorage" : false,
				"IsNitroHypervisor" : true
			},

			"t3a.nano" : {
				"UsesInstanceStorage" : false,
				"IsNitroHypervisor" : true
			},
			"t3a.micro" : {
				"UsesInstanceStorage" : false,
				"IsNitroHypervisor" : true
			},
			"t3a.small" : {
				"UsesInstanceStorage" : false,
				"IsNitroHypervisor" : true
			},
			"t3a.medium" : {
				"UsesInstanceStorage" : false,
				"IsNitroHypervisor" : true
			},
			"t3a.large" : {
				"UsesInstanceStorage" : false,
				"IsNitroHypervisor" : true
			},
			"t3a.xlarge" : {
				"UsesInstanceStorage" : false,
				"IsNitroHypervisor" : true
			},
			"t3a.2xlarge" : {
				"UsesInstanceStorage" : false,
				"IsNitroHypervisor" : true
			},

			"m4.large" : {
				"UsesInstanceStorage" : false,
				"IsNitroHypervisor" : false
			},
            "m4.xlarge" : {
				"UsesInstanceStorage" : false,
				"IsNitroHypervisor" : false
			},
            "m4.2xlarge" : {
				"UsesInstanceStorage" : false,
				"IsNitroHypervisor" : false
			},
            "m4.4xlarge" : {
				"UsesInstanceStorage" : false,
				"IsNitroHypervisor" : false
			},
            "m4.10xlarge" : {
				"UsesInstanceStorage" : false,
				"IsNitroHypervisor" : false
			},        
			
			"m5.large" : {
				"UsesInstanceStorage" : false,
				"IsNitroHypervisor" : true
			},
			"m5.xlarge" : {
				"UsesInstanceStorage" : false,
				"IsNitroHypervisor" : true
			},
			"m5.2xlarge" : {
				"UsesInstanceStorage" : false,
				"IsNitroHypervisor" : true
			},
			"m5.4xlarge" : {
				"UsesInstanceStorage" : false,
				"IsNitroHypervisor" : true
			},
			"m5.12xlarge" : {
				"UsesInstanceStorage" : false,
				"IsNitroHypervisor" : true
			},
			"m5.24xlarge" : {
				"UsesInstanceStorage" : false,
				"IsNitroHypervisor" : true
			},

			"m5a.large" : {
				"UsesInstanceStorage" : false,
				"IsNitroHypervisor" : true
			},
			"m5a.xlarge" : {
				"UsesInstanceStorage" : false,
				"IsNitroHypervisor" : true
			},
			"m5a.2xlarge" : {
				"UsesInstanceStorage" : false,
				"IsNitroHypervisor" : true
			},
			"m5a.4xlarge" : {
				"UsesInstanceStorage" : false,
				"IsNitroHypervisor" : true
			},
			"m5a.12xlarge" : {
				"UsesInstanceStorage" : false,
				"IsNitroHypervisor" : true
			},
			"m5a.24xlarge" : {
				"UsesInstanceStorage" : false,
				"IsNitroHypervisor" : true
			},

			"m5d.large" : {
				"UsesInstanceStorage" : true,
				"IsNitroHypervisor" : true
			},
			"m5d.xlarge" : {
				"UsesInstanceStorage" : true,
				"IsNitroHypervisor" : true
			},
			"m5d.2xlarge" : {
				"UsesInstanceStorage" : true,
				"IsNitroHypervisor" : true
			},
			"m5d.4xlarge" : {
				"UsesInstanceStorage" : true,
				"IsNitroHypervisor" : true
			},
			"m5d.12xlarge" : {
				"UsesInstanceStorage" : true,
				"IsNitroHypervisor" : true
			},
			"m5d.24xlarge" : {
				"UsesInstanceStorage" : true,
				"IsNitroHypervisor" : true
			},
            
			"c4.large" : {
				"UsesInstanceStorage" : false,
				"IsNitroHypervisor" : false
			},
            "c4.xlarge" : {
				"UsesInstanceStorage" : false,
				"IsNitroHypervisor" : false
			},
            "c4.2xlarge" : {
				"UsesInstanceStorage" : false,
				"IsNitroHypervisor" : false
			},
            "c4.4xlarge" : {
				"UsesInstanceStorage" : false,
				"IsNitroHypervisor" : false
			},
            "c4.8xlarge" : {
				"UsesInstanceStorage" : false,
				"IsNitroHypervisor" : false
			},

			"c5.large" : {
				"UsesInstanceStorage" : false,
				"IsNitroHypervisor" : true
			},
            "c5.xlarge" : {
				"UsesInstanceStorage" : false,
				"IsNitroHypervisor" : true
			},
            "c5.2xlarge" : {
				"UsesInstanceStorage" : false,
				"IsNitroHypervisor" : true
			},
            "c5.4xlarge" : {
				"UsesInstanceStorage" : false,
				"IsNitroHypervisor" : true
			},
            "c5.9xlarge" : {
				"UsesInstanceStorage" : false,
				"IsNitroHypervisor" : true
			},
			"c5.18xlarge" : {
				"UsesInstanceStorage" : false,
				"IsNitroHypervisor" : true
			},

			"c5d.large" : {
				"UsesInstanceStorage" : true,
				"IsNitroHypervisor" : true
			},
            "c5d.xlarge" : {
				"UsesInstanceStorage" : true,
				"IsNitroHypervisor" : true
			},
            "c5d.2xlarge" : {
				"UsesInstanceStorage" : true,
				"IsNitroHypervisor" : true
			},
            "c5d.4xlarge" : {
				"UsesInstanceStorage" : true,
				"IsNitroHypervisor" : true
			},
            "c5d.9xlarge" : {
				"UsesInstanceStorage" : true,
				"IsNitroHypervisor" : true
			},
			"c5d.18xlarge" : {
				"UsesInstanceStorage" : true,
				"IsNitroHypervisor" : true
			},

			"c5n.large" : {
				"UsesInstanceStorage" : false,
				"IsNitroHypervisor" : true
			},
            "c5n.xlarge" : {
				"UsesInstanceStorage" : false,
				"IsNitroHypervisor" : true
			},
            "c5n.2xlarge" : {
				"UsesInstanceStorage" : false,
				"IsNitroHypervisor" : true
			},
            "c5n.4xlarge" : {
				"UsesInstanceStorage" : false,
				"IsNitroHypervisor" : true
			},
            "c5n.9xlarge" : {
				"UsesInstanceStorage" : false,
				"IsNitroHypervisor" : true
			},
			"c5n.18xlarge" : {
				"UsesInstanceStorage" : false,
				"IsNitroHypervisor" : true
			},

			"r4.large" : {
				"UsesInstanceStorage" : false,
				"IsNitroHypervisor" : false
			},
            "r4.xlarge" : {
				"UsesInstanceStorage" : false,
				"IsNitroHypervisor" : false
			},
            "r4.2xlarge" : {
				"UsesInstanceStorage" : false,
				"IsNitroHypervisor" : false
			},
            "r4.4xlarge" : {
				"UsesInstanceStorage" : false,
				"IsNitroHypervisor" : false
			},
            "r4.8xlarge" : {
				"UsesInstanceStorage" : false,
				"IsNitroHypervisor" : false
			},
			"r4.16xlarge" : {
				"UsesInstanceStorage" : false,
				"IsNitroHypervisor" : false
			},

            "r5.large" : {
				"UsesInstanceStorage" : false,
				"IsNitroHypervisor" : true
			},
            "r5.xlarge" : {
				"UsesInstanceStorage" : false,
				"IsNitroHypervisor" : true
			},
            "r5.2xlarge" : {
				"UsesInstanceStorage" : false,
				"IsNitroHypervisor" : true
			},
            "r5.4xlarge" : {
				"UsesInstanceStorage" : false,
				"IsNitroHypervisor" : true
			},
            "r5.12xlarge" : {
				"UsesInstanceStorage" : false,
				"IsNitroHypervisor" : true
			},
			"r5.24xlarge" : {
				"UsesInstanceStorage" : false,
				"IsNitroHypervisor" : true
			},

			"r5d.large" : {
				"UsesInstanceStorage" : true,
				"IsNitroHypervisor" : true
			},
            "r5d.xlarge" : {
				"UsesInstanceStorage" : true,
				"IsNitroHypervisor" : true
			},
            "r5d.2xlarge" : {
				"UsesInstanceStorage" : true,
				"IsNitroHypervisor" : true
			},
            "r5d.4xlarge" : {
				"UsesInstanceStorage" : true,
				"IsNitroHypervisor" : true
			},
            "r5d.12xlarge" : {
				"UsesInstanceStorage" : true,
				"IsNitroHypervisor" : true
			},
			"r5d.24xlarge" : {
				"UsesInstanceStorage" : true,
				"IsNitroHypervisor" : true
			},

			 "r5a.large" : {
				"UsesInstanceStorage" : false,
				"IsNitroHypervisor" : true
			},
            "r5a.xlarge" : {
				"UsesInstanceStorage" : false,
				"IsNitroHypervisor" : true
			},
            "r5a.2xlarge" : {
				"UsesInstanceStorage" : false,
				"IsNitroHypervisor" : true
			},
            "r5a.4xlarge" : {
				"UsesInstanceStorage" : false,
				"IsNitroHypervisor" : true
			},
            "r5a.12xlarge" : {
				"UsesInstanceStorage" : false,
				"IsNitroHypervisor" : true
			},
			"r5a.24xlarge" : {
				"UsesInstanceStorage" : false,
				"IsNitroHypervisor" : true
			},

			"i3.large" : {
				"UsesInstanceStorage" : false,
				"IsNitroHypervisor" : false
			},
			"i3.xlarge" : {
				"UsesInstanceStorage" : false,
				"IsNitroHypervisor" : false
			},
			"i3.2xlarge" : {
				"UsesInstanceStorage" : false,
				"IsNitroHypervisor" : false
			},
			"i3.4xlarge" : {
				"UsesInstanceStorage" : false,
				"IsNitroHypervisor" : false
			},
			"i3.8xlarge" : {
				"UsesInstanceStorage" : false,
				"IsNitroHypervisor" : false
			},
			"i3.16xlarge" : {
				"UsesInstanceStorage" : false,
				"IsNitroHypervisor" : false
			}
		 }
	},

	"Resources" : {

		"WSFCRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "Path": "/",
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Principal": {
                                "Service": [
                                    "ec2.amazonaws.com"
                                ]
                            },
                            "Effect": "Allow"
                        }
                    ],
                    "Version": "2012-10-17"
                }
            }
        },
        "WSFCProfile": {
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
                "Roles": [
                    {
                        "Ref": "WSFCRole"
                    }
                ],
                "Path": "/"
            }
        },
		"WSFCS3Policy" : {
			"Type" : "AWS::IAM::Policy",
			"Properties" : {
				 "PolicyName" : "EC2S3Policy",
				  "PolicyDocument" : {
                    "Version" : "2012-10-17",
                    "Statement" : [
                        {
                            "Effect" : "Allow",
                            "Action" : [
                                "s3:GetObject"
                            ],
                            "Resource" : [
								{
									"Fn::Sub" : "arn:${AWS::Partition}:s3:::${ConfigBucketName}/*"
								}                                
                            ]
                        }
                    ]
                },
                "Roles"          : [
                    {
                        "Ref" : "WSFCRole"
                    }
                ]
			}
		},
		"WSFCKMSPolicy" : {
			"Type" : "AWS::IAM::Policy",
			"Properties" : {
				 "PolicyName" : "EC2KMSPolicy",
				  "PolicyDocument" : {
                    "Version" : "2012-10-17",
                    "Statement" : [
                        {
                            "Effect" : "Allow",
                            "Action" : [
                                "kms:Decrypt"
                            ],
                            "Resource" : [
								"*"                          
                            ]
                        }
                    ]
                },
                "Roles"          : [
                    {
                        "Ref" : "WSFCRole"
                    }
                ]
			}
		},
		"WSFCEBSPolicy" : {
			"Type" : "AWS::IAM::Policy",
			"Properties" : {
				 "PolicyName" : "EC2EBSPolicy",
				  "PolicyDocument" : {
                    "Version" : "2012-10-17",
                    "Statement" : [
                        {
                            "Effect" : "Allow",
                            "Action" : [
                                "ec2:DescribeVolumes"
                            ],
                            "Resource" : [
								"*"                          
                            ]
                        }
                    ]
                },
                "Roles"          : [
                    {
                        "Ref" : "WSFCRole"
                    }
                ]
			}
		},
		"WSFCEC2Policy" : {
			"Type" : "AWS::IAM::Policy",
			"Properties" : {
				 "PolicyName" : "EC2Policy",
				  "PolicyDocument" : {
                    "Version" : "2012-10-17",
                    "Statement" : [
                        {
                            "Effect" : "Allow",
                            "Action" : [
                                "ec2:DescribeTags"
                            ],
                            "Resource" : [
								"*"                          
                            ]
                        }
                    ]
                },
                "Roles"          : [
                    {
                        "Ref" : "WSFCRole"
                    }
                ]
			}
		},
		"WSFCCFNPolicy" : {
			"Type" : "AWS::IAM::Policy",
			"Properties" : {
				 "PolicyName" : "EC2CFNPolicy",
				  "PolicyDocument" : {
                    "Version" : "2012-10-17",
                    "Statement" : [
                        {
                            "Effect" : "Allow",
                            "Action" : [
                                "cloudformation:DescribeStackResource"
                            ],
                            "Resource" : [
								{
									"Fn::Sub" : "arn:${AWS::Partition}:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/${AWS::StackName}/*"		
								}
                            ]
                        }
                    ]
                },
                "Roles"          : [
                    {
                        "Ref" : "WSFCRole"
                    }
                ]
			}
		},
		"WSFCSSMPolicy" : {
			"Type" : "AWS::IAM::Policy",
			"Properties" : {
				 "PolicyName" : "SSMPolicy",
				  "PolicyDocument" : {
                    "Version" : "2012-10-17",
                    "Statement" : [
                        {
                            "Effect" : "Allow",
                            "Action" : [
                                "ssm:GetParameters"
                            ],
                            "Resource" : [
								{
									"Fn::Sub" : "arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${DomainUserPasswordSSMParameterKey}"
								}
                            ]
                        }
                    ]
                },
                "Roles"          : [
                    {
                        "Ref" : "WSFCRole"
                    }
                ]
			}
		},

		"WSFCWaitHandle": {
            "Type": "AWS::CloudFormation::WaitConditionHandle"
        },
        "WSFCWaitCondition": {
            "Type": "AWS::CloudFormation::WaitCondition",
            "DependsOn": "WSFCNode1",
            "Properties": {
                "Handle": {
                    "Ref": "WSFCWaitHandle"
                },
                "Timeout": "2400",
				"Count" : 2
            }
        },

		"WSFCWaitHandle2": {
            "Type": "AWS::CloudFormation::WaitConditionHandle"
        },
        "WSFCWaitCondition2": {
            "Type": "AWS::CloudFormation::WaitCondition",
            "DependsOn": "WSFCNode2",
            "Properties": {
                "Handle": {
                    "Ref": "WSFCWaitHandle2"
                },
                "Timeout": "2400"
            }
        },

		"WSFCNode1": {
            "Type": "AWS::EC2::Instance",
			"Metadata": {
                "AWS::CloudFormation::Authentication": {
                    "S3AccessCreds": {
                        "type": "S3",
                        "roleName": {
                            "Ref": "WSFCRole"
                        },
                        "buckets": [
                            {
                                "Ref": "ConfigBucketName"
                            }
                        ]
                    }
                },
				"AWS::CloudFormation::Init": {
					"configSets": {
                        "config": [
                            "FetchResources",
                            "Setup",
                            "Prep",
							"Configure",
							"Finalize"
                        ]
                    },
					"FetchResources": {
                        "files": {
							"C:\\cfn\\scripts\\Initialize-Disks.ps1": {
                                "source": {
                                    "Fn::Sub": [
										"https://${ConfigBucketName}.s3${Region}.amazonaws.com/common/scripts/Initialize-Disks.ps1",
										{
											"Region" : {
												"Fn::If" : [
													"IsUsEast1",
													"",
													{
														"Fn::Sub" : "-${AWS::Region}"
													}
												]													
											}
										}
									]
                                }
                            },
							"C:\\cfn\\scripts\\Install-WSFC.ps1": {
                                "source": {
									"Fn::Sub": [
										"https://${ConfigBucketName}.s3${Region}.amazonaws.com/common/scripts/Install-WSFC.ps1",
										{
											"Region" : {
												"Fn::If" : [
													"IsUsEast1",
													"",
													{
														"Fn::Sub" : "-${AWS::Region}"
													}
												]													
											}
										}
									]
                                }
                            },
							"C:\\cfn\\scripts\\Install-FileServer.ps1": {
                                "source": {
									"Fn::Sub": [
										"https://${ConfigBucketName}.s3${Region}.amazonaws.com/common/scripts/Install-FileServer.ps1",
										{
											"Region" : {
												"Fn::If" : [
													"IsUsEast1",
													"",
													{
														"Fn::Sub" : "-${AWS::Region}"
													}
												]													
											}
										}
									]
                                }
                            },
							"C:\\cfn\\scripts\\Join-Domain.ps1": {
                                "source": {
									"Fn::Sub": [
										"https://${ConfigBucketName}.s3${Region}.amazonaws.com/common/scripts/Join-Domain.ps1",
										{
											"Region" : {
												"Fn::If" : [
													"IsUsEast1",
													"",
													{
														"Fn::Sub" : "-${AWS::Region}"
													}
												]													
											}
										}
									]
                                }
                            },
							"C:\\cfn\\scripts\\Restart-Computer.ps1": {
                                "source": {
                                    "Fn::Sub": [
										"https://${ConfigBucketName}.s3${Region}.amazonaws.com/common/scripts/Restart-Computer.ps1",
										{
											"Region" : {
												"Fn::If" : [
													"IsUsEast1",
													"",
													{
														"Fn::Sub" : "-${AWS::Region}"
													}
												]													
											}
										}
									]
                                }
                            },
							"C:\\cfn\\scripts\\Rename-Computer.ps1": {
                                "source": {
                                    "Fn::Sub": [
										"https://${ConfigBucketName}.s3${Region}.amazonaws.com/common/scripts/Rename-Computer.ps1",
										{
											"Region" : {
												"Fn::If" : [
													"IsUsEast1",
													"",
													{
														"Fn::Sub" : "-${AWS::Region}"
													}
												]													
											}
										}
									]
                                }
                            },
							"C:\\cfn\\scripts\\Disable-Firewall.ps1": {
                                "source": {
                                    "Fn::Sub": [
										"https://${ConfigBucketName}.s3${Region}.amazonaws.com/common/scripts/Disable-Firewall.ps1",
										{
											"Region" : {
												"Fn::If" : [
													"IsUsEast1",
													"",
													{
														"Fn::Sub" : "-${AWS::Region}"
													}
												]													
											}
										}
									]
                                }
                            },
							"C:\\cfn\\scripts\\Prepare-S2DDisks.ps1": {
                                "source": {
									"Fn::Sub": [
										"https://${ConfigBucketName}.s3${Region}.amazonaws.com/${ConfigS3KeyPrefix}scripts/Prepare-S2DDisks.ps1",
										{
											"Region" : {
												"Fn::If" : [
													"IsUsEast1",
													"",
													{
														"Fn::Sub" : "-${AWS::Region}"
													}
												]													
											}
										}
									]
                                }
                            },
							"C:\\cfn\\scripts\\Send-CfnSignal.ps1": {
                                "source": {
                                    "Fn::Sub": [
										"https://${ConfigBucketName}.s3${Region}.amazonaws.com/common/scripts/Send-CfnSignal.ps1",
										{
											"Region" : {
												"Fn::If" : [
													"IsUsEast1",
													"",
													{
														"Fn::Sub" : "-${AWS::Region}"
													}
												]													
											}
										}
									]
                                }
                            },
							"C:\\cfn\\scripts\\Install-ADPowerShell.ps1": {
                                "source": {
                                    "Fn::Sub": [
										"https://${ConfigBucketName}.s3${Region}.amazonaws.com/common/scripts/Install-ADPowerShell.ps1",
										{
											"Region" : {
												"Fn::If" : [
													"IsUsEast1",
													"",
													{
														"Fn::Sub" : "-${AWS::Region}"
													}
												]													
											}
										}
									]
                                }
                            },
							"C:\\cfn\\scripts\\Set-S2DTimeout.ps1": {
                                "source": {
                                    "Fn::Sub": [
										"https://${ConfigBucketName}.s3${Region}.amazonaws.com/${ConfigS3KeyPrefix}scripts/Set-S2DTimeout.ps1",
										{
											"Region" : {
												"Fn::If" : [
													"IsUsEast1",
													"",
													{
														"Fn::Sub" : "-${AWS::Region}"
													}
												]													
											}
										}
									]
                                }
                            },
							"C:\\cfn\\scripts\\Set-S2DDiskAutoReplace.ps1": {
                                "source": {
                                    "Fn::Sub": [
										"https://${ConfigBucketName}.s3${Region}.amazonaws.com/${ConfigS3KeyPrefix}scripts/Set-S2DDiskAutoReplace.ps1",
										{
											"Region" : {
												"Fn::If" : [
													"IsUsEast1",
													"",
													{
														"Fn::Sub" : "-${AWS::Region}"
													}
												]													
											}
										}
									]
                                }
                            },							
							"C:\\cfn\\scripts\\Enable-JumboFrames.ps1": {
                                "source": {
                                    "Fn::Sub": [
										"https://${ConfigBucketName}.s3${Region}.amazonaws.com/common/scripts/Enable-JumboFrames.ps1",
										{
											"Region" : {
												"Fn::If" : [
													"IsUsEast1",
													"",
													{
														"Fn::Sub" : "-${AWS::Region}"
													}
												]													
											}
										}
									]
                                }
                            },
							"C:\\cfn\\scripts\\Set-SmbClient.ps1": {
                                "source": {
                                    "Fn::Sub": [
										"https://${ConfigBucketName}.s3${Region}.amazonaws.com/common/scripts/Set-SmbClient.ps1",
										{
											"Region" : {
												"Fn::If" : [
													"IsUsEast1",
													"",
													{
														"Fn::Sub" : "-${AWS::Region}"
													}
												]													
											}
										}
									]
                                }
                            },
							"C:\\cfn\\scripts\\Set-NetAdapterRss.ps1": {
                                "source": {
                                    "Fn::Sub": [
										"https://${ConfigBucketName}.s3${Region}.amazonaws.com/common/scripts/Set-NetAdapterRss.ps1",
										{
											"Region" : {
												"Fn::If" : [
													"IsUsEast1",
													"",
													{
														"Fn::Sub" : "-${AWS::Region}"
													}
												]													
											}
										}
									]
                                }
                            },
							"C:\\cfn\\scripts\\Wait-EBSVolumeAttachment.ps1": {
                                "source": {
                                    "Fn::Sub": [
										"https://${ConfigBucketName}.s3${Region}.amazonaws.com/common/scripts/Wait-EBSVolumeAttachment.ps1",
										{
											"Region" : {
												"Fn::If" : [
													"IsUsEast1",
													"",
													{
														"Fn::Sub" : "-${AWS::Region}"
													}
												]													
											}
										}
									]
                                }
                            }
						}
					},
					"Setup" : {
                        "commands": {
                            "a-set-execution-policy": {
                                "command": "powershell.exe -Command { Set-ExecutionPolicy Unrestricted -Force }",
                                "waitAfterCompletion": "0"
                            }                           
                        }
                    },
					"Prep" : {
						"commands" : {
							"a-wait-volume-attachment" : {
								"command" : {
									"Fn::Sub" : [
										"powershell.exe -Command \"C:\\cfn\\scripts\\Wait-EBSVolumeAttachment -StackName '${AWS::StackName}' -CFNLogicalVolumeIds 'WSFCNode1Volume1','WSFCNode1Volume2'${Suffix}\"",
										{
											"Suffix" : {
												"Fn::If" : [
													"Use4Disks",
													",'WSFCNode1Volume3','WSFCNode1Volume4'",
													""
												]
											}
										}
									]
								},
								"waitAfterCompletion" : "0"
							},
							"b-initialize-disks": {
                                "command": "powershell.exe -File C:\\cfn\\scripts\\Initialize-Disks.ps1 -FileSystem ReFS -PartitionStyle GPT",
                                "waitAfterCompletion": "0"
                            },
							"c-rename-computer": {
                                "command": {
									"Fn::If" : [
										"RenameNode1",
										{
											"Fn::Sub" : "powershell.exe -File C:\\cfn\\scripts\\Rename-Computer.ps1 -NewName \"${WSFCNode1NetBIOSName}\" -Restart"
										},
										""
									]
								},                       
                                "waitAfterCompletion": "forever"
                            },
                            "d-join-domain": {
                                "command": {
									"Fn::Sub" : "powershell.exe -File C:\\cfn\\scripts\\Join-Domain.ps1 -DomainName \"${DomainName}\" -Username \"${DomainUsername}\" -SSMPasswordParameterName \"${DomainUserPasswordSSMParameterKey}\""
								},                       
                                "waitAfterCompletion": "0"
                            },                        
                            "e-install-windows-failover-clustering": {
                                "command": "powershell.exe -File C:\\cfn\\scripts\\Install-WSFC.ps1",
                                "waitAfterCompletion": "0"
                            },
							"f-install-file-server": {
                                "command": "powershell.exe -File C:\\cfn\\scripts\\Install-FileServer.ps1",
                                "waitAfterCompletion": "0"
                            },
							"g-disable-firewall": {
                                "command": "powershell.exe -File C:\\cfn\\scripts\\Disable-Firewall.ps1",
                                "waitAfterCompletion": "0"
                            },
							"h-install-ad-powershell" : {
								"command": "powershell.exe -File C:\\cfn\\scripts\\Install-ADPowerShell.ps1",
                                "waitAfterCompletion": "0"
							},
							"i-reboot": {
                                "command": "powershell.exe -File C:\\cfn\\scripts\\Restart-Computer.ps1",
                                "waitAfterCompletion": "forever"
                            }
						}
					},
					"Configure" : {
						"commands" : {
							"a-prepare-s2d-disks" : {
								"command" : "powershell.exe -File C:\\cfn\\scripts\\Prepare-S2DDisks.ps1",
								"waitAfterCompletion" : "0"
							},
							"b-set-s2d-timeout" : {
								"command" : "powershell.exe -File C:\\cfn\\scripts\\Set-S2DTimeout.ps1",
								"waitAfterCompletion" : "0"
							},
							"c-set-s2d-disk-auto-replace" : {
								"command" : {
									"Fn::Sub" : [
										"powershell.exe -Command \"C:\\cfn\\scripts\\Set-S2DDiskAutoReplace.ps1 -Enabled ${Enabled}\"",
										{
											"Enabled" : {
												"Fn::If" : [
													"DisableAutoReplace",
													"$false",
													"$true"
												]
											}
										}
									]
								},
								"waitAfterCompletion" : "0"
							},
							"d-set-smb-client" : {
								"command" : "powershell.exe -Command \"C:\\cfn\\scripts\\Set-SmbClient.ps1 -EnableMultiChannel $true -EnableLargeMtu $true -UpdateRssConnectionCount\"",
								"waitAfterCompletion" : "0"
							},
							"e-set-netadapter-rss" : {
								"command" : "powershell.exe -File C:\\cfn\\scripts\\Set-NetAdapterRss.ps1",
								"waitAfterCompletion" : "0"
							},
							"f-enable-jumbo-frames" : {
								"command" : {
									"Fn::If" : [
										"UseJumboFrames",
										"powershell.exe -File C:\\cfn\\scripts\\Enable-JumboFrames.ps1",
										""
									]
								},
								"waitAfterCompletion" : "0"
							}
						}
					},
					"Finalize" : {
						"commands" : {
							"a-send-cfn-signal" : {
								"command" : {
									"Fn::Sub" : "powershell.exe -File C:\\cfn\\scripts\\Send-CfnSignal.ps1 -WaitConditionUrl \"${WSFCWaitHandle}\" -ExitCode 0"
								},
								"waitAfterCompletion" : "0"
							},						
							"b-reboot": {
                                "command": "powershell.exe -File C:\\cfn\\scripts\\Restart-Computer.ps1",
                                "waitAfterCompletion": "forever"
                            }
						}
					}
				 }
			},
            "Properties": {
                "Tenancy": "default",
                "ImageId": {
					"Ref" : "OSImage"
				},
                "IamInstanceProfile": {
                    "Ref": "WSFCProfile"
                },
                "InstanceType": {
                    "Ref": "WSFCInstanceType"
                },
                "EbsOptimized": "true",
                "NetworkInterfaces": [
                    {
                        "DeleteOnTermination": "true",
                        "DeviceIndex": 0,
                        "SubnetId": {
                            "Ref": "Subnet1"
                        },
                        "PrivateIpAddresses": [
                            {
                                "Primary": "true",
                                "PrivateIpAddress": {
                                    "Ref": "WSFCNode1PrivateIP1"
                                }
                            },
                            {
                                "Primary": "false",
                                "PrivateIpAddress": {
                                    "Ref": "WSFCNode1PrivateIP2"
                                }
                            },
                            {
                                "Primary": "false",
                                "PrivateIpAddress": {
                                    "Ref": "WSFCNode1PrivateIP3"
                                }
                            }
                        ],
                        "GroupSet": [
                            {
                                "Ref": "WSFCSecurityGroup"
                            },
							{
								"Ref" : "FileShareServerAccessSecurityGroup"
							},
							{
								"Ref" : "ClusterManagementAccessSecurityGroup"
							}
                        ]
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Ref": "WSFCNode1NetBIOSName"
                        }
                    },
					 {
                        "Key" : "Environment",
                        "Value" : {
                            "Ref" : "EnvironmentTag"
                        }
                    },
                    {
                        "Key" : "Application",
                        "Value" : {
                            "Ref" : "ApplicationTag"
                        }
                    },
                    {
                        "Key" : "Organization",
                        "Value" : {
                            "Ref" : "OrganizationTag"
                        }
                    }
                ],
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/sda1",
                        "Ebs": {
                            "VolumeSize": {
								"Ref" : "OSVolumeSize"
							},
                            "VolumeType": {
								"Ref" : "OSVolumeType"
							},
							"Iops": {
								"Fn::If": [
									"OSVolIsIo1",
									{
										"Ref": "OSVolumeIops"
									},
									{
										"Ref": "AWS::NoValue"
									}
								]
							}
                        }
                    }
                ],
                "KeyName": {
                    "Ref": "KeyPairName"
                },
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
								"<script>\n",
								{
									"Fn::Sub" : "cfn-init.exe -v --stack ${AWS::StackId} --resource WSFCNode1 --region ${AWS::Region} --configsets config\n"
								},
                                "</script>"
                            ]
                        ]
                    }
                }
            }
        },
		"WSFCNode2": {
            "Type": "AWS::EC2::Instance",
			"DependsOn" : [
				"WSFCWaitCondition"
			],
			"Metadata": {
                "AWS::CloudFormation::Authentication": {
                    "S3AccessCreds": {
                        "type": "S3",
                        "roleName": {
                            "Ref": "WSFCRole"
                        },
                        "buckets": [
                            {
                                "Ref": "ConfigBucketName"
                            }
                        ]
                    }
                },
				"AWS::CloudFormation::Init": {
					"configSets": {
                        "config": [
                            "FetchResources",
                            "Setup",
                            "Prep",
							"Configure",
							"Install",
							"Finalize"
                        ]
                    },
					"FetchResources": {
                        "files": {
							"C:\\cfn\\scripts\\Initialize-Disks.ps1": {
                                "source": {
                                    "Fn::Sub": [
										"https://${ConfigBucketName}.s3${Region}.amazonaws.com/common/scripts/Initialize-Disks.ps1",
										{
											"Region" : {
												"Fn::If" : [
													"IsUsEast1",
													"",
													{
														"Fn::Sub" : "-${AWS::Region}"
													}
												]													
											}
										}
									]
                                }
                            },
							"C:\\cfn\\scripts\\Install-WSFC.ps1": {
                                "source": {
									"Fn::Sub": [
										"https://${ConfigBucketName}.s3${Region}.amazonaws.com/common/scripts/Install-WSFC.ps1",
										{
											"Region" : {
												"Fn::If" : [
													"IsUsEast1",
													"",
													{
														"Fn::Sub" : "-${AWS::Region}"
													}
												]													
											}
										}
									]
                                }
                            },
							"C:\\cfn\\scripts\\Install-FileServer.ps1": {
                                "source": {
									"Fn::Sub": [
										"https://${ConfigBucketName}.s3${Region}.amazonaws.com/common/scripts/Install-FileServer.ps1",
										{
											"Region" : {
												"Fn::If" : [
													"IsUsEast1",
													"",
													{
														"Fn::Sub" : "-${AWS::Region}"
													}
												]													
											}
										}
									]
                                }
                            },
							"C:\\cfn\\scripts\\Join-Domain.ps1": {
                                "source": {
									"Fn::Sub": [
										"https://${ConfigBucketName}.s3${Region}.amazonaws.com/common/scripts/Join-Domain.ps1",
										{
											"Region" : {
												"Fn::If" : [
													"IsUsEast1",
													"",
													{
														"Fn::Sub" : "-${AWS::Region}"
													}
												]													
											}
										}
									]
                                }
                            },
							"C:\\cfn\\scripts\\Restart-Computer.ps1": {
                                "source": {
                                    "Fn::Sub": [
										"https://${ConfigBucketName}.s3${Region}.amazonaws.com/common/scripts/Restart-Computer.ps1",
										{
											"Region" : {
												"Fn::If" : [
													"IsUsEast1",
													"",
													{
														"Fn::Sub" : "-${AWS::Region}"
													}
												]													
											}
										}
									]
                                }
                            },
							"C:\\cfn\\scripts\\Rename-Computer.ps1": {
                                "source": {
                                    "Fn::Sub": [
										"https://${ConfigBucketName}.s3${Region}.amazonaws.com/common/scripts/Rename-Computer.ps1",
										{
											"Region" : {
												"Fn::If" : [
													"IsUsEast1",
													"",
													{
														"Fn::Sub" : "-${AWS::Region}"
													}
												]													
											}
										}
									]
                                }
                            },
							"C:\\cfn\\scripts\\Disable-Firewall.ps1": {
                                "source": {
                                    "Fn::Sub": [
										"https://${ConfigBucketName}.s3${Region}.amazonaws.com/common/scripts/Disable-Firewall.ps1",
										{
											"Region" : {
												"Fn::If" : [
													"IsUsEast1",
													"",
													{
														"Fn::Sub" : "-${AWS::Region}"
													}
												]													
											}
										}
									]
                                }
                            },
							"C:\\cfn\\scripts\\Prepare-S2DDisks.ps1": {
                                "source": {
									"Fn::Sub": [
										"https://${ConfigBucketName}.s3${Region}.amazonaws.com/${ConfigS3KeyPrefix}scripts/Prepare-S2DDisks.ps1",
										{
											"Region" : {
												"Fn::If" : [
													"IsUsEast1",
													"",
													{
														"Fn::Sub" : "-${AWS::Region}"
													}
												]													
											}
										}
									]
                                }
                            },
							"C:\\cfn\\scripts\\Send-CfnSignal.ps1": {
                                "source": {
                                    "Fn::Sub": [
										"https://${ConfigBucketName}.s3${Region}.amazonaws.com/common/scripts/Send-CfnSignal.ps1",
										{
											"Region" : {
												"Fn::If" : [
													"IsUsEast1",
													"",
													{
														"Fn::Sub" : "-${AWS::Region}"
													}
												]													
											}
										}
									]
                                }
                            },
							"C:\\cfn\\scripts\\Install-ADPowerShell.ps1": {
                                "source": {
                                    "Fn::Sub": [
										"https://${ConfigBucketName}.s3${Region}.amazonaws.com/common/scripts/Install-ADPowerShell.ps1",
										{
											"Region" : {
												"Fn::If" : [
													"IsUsEast1",
													"",
													{
														"Fn::Sub" : "-${AWS::Region}"
													}
												]													
											}
										}
									]
                                }
                            },
							"C:\\cfn\\scripts\\Install-DnsPowerShell.ps1": {
                                "source": {
                                    "Fn::Sub": [
										"https://${ConfigBucketName}.s3${Region}.amazonaws.com/common/scripts/Install-DnsPowerShell.ps1",
										{
											"Region" : {
												"Fn::If" : [
													"IsUsEast1",
													"",
													{
														"Fn::Sub" : "-${AWS::Region}"
													}
												]													
											}
										}
									]
                                }
                            },
							"C:\\cfn\\scripts\\Set-S2DTimeout.ps1": {
                                "source": {
                                    "Fn::Sub": [
										"https://${ConfigBucketName}.s3${Region}.amazonaws.com/${ConfigS3KeyPrefix}scripts/Set-S2DTimeout.ps1",
										{
											"Region" : {
												"Fn::If" : [
													"IsUsEast1",
													"",
													{
														"Fn::Sub" : "-${AWS::Region}"
													}
												]													
											}
										}
									]
                                }
                            },
							"C:\\cfn\\scripts\\Set-S2DDiskAutoReplace.ps1": {
                                "source": {
                                    "Fn::Sub": [
										"https://${ConfigBucketName}.s3${Region}.amazonaws.com/${ConfigS3KeyPrefix}scripts/Set-S2DDiskAutoReplace.ps1",
										{
											"Region" : {
												"Fn::If" : [
													"IsUsEast1",
													"",
													{
														"Fn::Sub" : "-${AWS::Region}"
													}
												]													
											}
										}
									]
                                }
                            },
							"C:\\cfn\\scripts\\Enable-JumboFrames.ps1": {
                                "source": {
                                    "Fn::Sub": [
										"https://${ConfigBucketName}.s3${Region}.amazonaws.com/common/scripts/Enable-JumboFrames.ps1",
										{
											"Region" : {
												"Fn::If" : [
													"IsUsEast1",
													"",
													{
														"Fn::Sub" : "-${AWS::Region}"
													}
												]													
											}
										}
									]
                                }
                            },
							"C:\\cfn\\scripts\\Set-SmbClient.ps1": {
                                "source": {
                                    "Fn::Sub": [
										"https://${ConfigBucketName}.s3${Region}.amazonaws.com/common/scripts/Set-SmbClient.ps1",
										{
											"Region" : {
												"Fn::If" : [
													"IsUsEast1",
													"",
													{
														"Fn::Sub" : "-${AWS::Region}"
													}
												]													
											}
										}
									]
                                }
                            },
							"C:\\cfn\\scripts\\Set-NetAdapterRss.ps1": {
                                "source": {
                                    "Fn::Sub": [
										"https://${ConfigBucketName}.s3${Region}.amazonaws.com/common/scripts/Set-NetAdapterRss.ps1",
										{
											"Region" : {
												"Fn::If" : [
													"IsUsEast1",
													"",
													{
														"Fn::Sub" : "-${AWS::Region}"
													}
												]													
											}
										}
									]
                                }
                            },	
							"C:\\cfn\\scripts\\Wait-EBSVolumeAttachment.ps1": {
                                "source": {
                                    "Fn::Sub": [
										"https://${ConfigBucketName}.s3${Region}.amazonaws.com/common/scripts/Wait-EBSVolumeAttachment.ps1",
										{
											"Region" : {
												"Fn::If" : [
													"IsUsEast1",
													"",
													{
														"Fn::Sub" : "-${AWS::Region}"
													}
												]													
											}
										}
									]
                                }
                            },
							"C:\\cfn\\scripts\\Enable-CredSSP.ps1": {
                                "source": {
                                    "Fn::Sub": [
										"https://${ConfigBucketName}.s3${Region}.amazonaws.com/common/scripts/Enable-CredSSP.ps1",
										{
											"Region" : {
												"Fn::If" : [
													"IsUsEast1",
													"",
													{
														"Fn::Sub" : "-${AWS::Region}"
													}
												]													
											}
										}
									]
                                }
                            },
							"C:\\cfn\\scripts\\Disable-CredSSP.ps1": {
                                "source": {
                                    "Fn::Sub": [
										"https://${ConfigBucketName}.s3${Region}.amazonaws.com/common/scripts/Disable-CredSSP.ps1",
										{
											"Region" : {
												"Fn::If" : [
													"IsUsEast1",
													"",
													{
														"Fn::Sub" : "-${AWS::Region}"
													}
												]													
											}
										}
									]
                                }
                            },
							"C:\\cfn\\scripts\\Configure-WSFC.ps1": {
                                "source": {
									"Fn::Sub": [
										"https://${ConfigBucketName}.s3${Region}.amazonaws.com/${ConfigS3KeyPrefix}scripts/Configure-WSFC.ps1",
										{
											"Region" : {
												"Fn::If" : [
													"IsUsEast1",
													"",
													{
														"Fn::Sub" : "-${AWS::Region}"
													}
												]													
											}
										}
									]
                                }
                            },
							"C:\\cfn\\scripts\\Enable-ClusterS2D.ps1": {
                                "source": {
                                    "Fn::Sub": [
										"https://${ConfigBucketName}.s3${Region}.amazonaws.com/${ConfigS3KeyPrefix}scripts/Enable-ClusterS2D.ps1",
										{
											"Region" : {
												"Fn::If" : [
													"IsUsEast1",
													"",
													{
														"Fn::Sub" : "-${AWS::Region}"
													}
												]													
											}
										}
									]
                                }
                            },
							"C:\\cfn\\scripts\\New-StoragePool.ps1": {
                                "source": {
                                    "Fn::Sub": [
										"https://${ConfigBucketName}.s3${Region}.amazonaws.com/${ConfigS3KeyPrefix}scripts/New-StoragePool.ps1",
										{
											"Region" : {
												"Fn::If" : [
													"IsUsEast1",
													"",
													{
														"Fn::Sub" : "-${AWS::Region}"
													}
												]													
											}
										}
									]
                                }
                            },
							"C:\\cfn\\scripts\\New-S2DVolume.ps1": {
                                "source": {
                                    "Fn::Sub": [
										"https://${ConfigBucketName}.s3${Region}.amazonaws.com/${ConfigS3KeyPrefix}scripts/New-S2DVolume.ps1",
										{
											"Region" : {
												"Fn::If" : [
													"IsUsEast1",
													"",
													{
														"Fn::Sub" : "-${AWS::Region}"
													}
												]													
											}
										}
									]
                                }
                            },
							"C:\\cfn\\scripts\\Enable-CSVCache.ps1": {
                                "source": {
                                    "Fn::Sub": [
										"https://${ConfigBucketName}.s3${Region}.amazonaws.com/${ConfigS3KeyPrefix}scripts/Enable-CSVCache.ps1",
										{
											"Region" : {
												"Fn::If" : [
													"IsUsEast1",
													"",
													{
														"Fn::Sub" : "-${AWS::Region}"
													}
												]													
											}
										}
									]
                                }
                            },
							"C:\\cfn\\scripts\\Add-WSFCFileServerRole.ps1": {
                                "source": {
                                    "Fn::Sub": [
										"https://${ConfigBucketName}.s3${Region}.amazonaws.com/${ConfigS3KeyPrefix}scripts/Add-WSFCFileServerRole.ps1",
										{
											"Region" : {
												"Fn::If" : [
													"IsUsEast1",
													"",
													{
														"Fn::Sub" : "-${AWS::Region}"
													}
												]													
											}
										}
									]
                                }
                            },
							"C:\\cfn\\scripts\\Set-CNOActiveDirectoryPermissions.ps1": {
                                "source": {
                                    "Fn::Sub": [
										"https://${ConfigBucketName}.s3${Region}.amazonaws.com/common/scripts/Set-CNOActiveDirectoryPermissions.ps1",
										{
											"Region" : {
												"Fn::If" : [
													"IsUsEast1",
													"",
													{
														"Fn::Sub" : "-${AWS::Region}"
													}
												]													
											}
										}
									]
                                }
                            },
							"C:\\cfn\\scripts\\Set-ADComputerAccountStatus.ps1": {
                                "source": {
                                    "Fn::Sub": [
										"https://${ConfigBucketName}.s3${Region}.amazonaws.com/common/scripts/Set-ADComputerAccountStatus.ps1",
										{
											"Region" : {
												"Fn::If" : [
													"IsUsEast1",
													"",
													{
														"Fn::Sub" : "-${AWS::Region}"
													}
												]													
											}
										}
									]
                                }
                            },
							"C:\\cfn\\scripts\\Set-ClusterQuorum.ps1": {
                                "source": {
                                    "Fn::Sub": [
										"https://${ConfigBucketName}.s3${Region}.amazonaws.com/${ConfigS3KeyPrefix}scripts/Set-ClusterQuorum.ps1",
										{
											"Region" : {
												"Fn::If" : [
													"IsUsEast1",
													"",
													{
														"Fn::Sub" : "-${AWS::Region}"
													}
												]													
											}
										}
									]
                                }
                            },
							"C:\\cfn\\scripts\\New-S2DFileShare.ps1": {
                                "source": {
                                    "Fn::Sub": [
										"https://${ConfigBucketName}.s3${Region}.amazonaws.com/${ConfigS3KeyPrefix}scripts/New-S2DFileShare.ps1",
										{
											"Region" : {
												"Fn::If" : [
													"IsUsEast1",
													"",
													{
														"Fn::Sub" : "-${AWS::Region}"
													}
												]													
											}
										}
									]
                                }
                            },
							"C:\\cfn\\scripts\\Move-ClusterRole.ps1": {
                                "source": {
                                    "Fn::Sub": [
										"https://${ConfigBucketName}.s3${Region}.amazonaws.com/${ConfigS3KeyPrefix}scripts/Move-ClusterRole.ps1",
										{
											"Region" : {
												"Fn::If" : [
													"IsUsEast1",
													"",
													{
														"Fn::Sub" : "-${AWS::Region}"
													}
												]													
											}
										}
									]
                                }
                            },
							"C:\\cfn\\scripts\\Remove-DnsRecord.ps1": {
                                "source": {
                                    "Fn::Sub": [
										"https://${ConfigBucketName}.s3${Region}.amazonaws.com/common/scripts/Remove-DnsRecord.ps1",
										{
											"Region" : {
												"Fn::If" : [
													"IsUsEast1",
													"",
													{
														"Fn::Sub" : "-${AWS::Region}"
													}
												]													
											}
										}
									]
                                }
                            }
						}						
					},
					"Setup" : {
                        "commands": {
                            "a-set-execution-policy": {
                                "command": "powershell.exe -Command { Set-ExecutionPolicy Unrestricted -Force }",
                                "waitAfterCompletion": "0"
                            }                           
                        }
                    },
					"Prep" : {
						"commands" : {
							"a-wait-volume-attachment" : {
								"command" : {
									"Fn::Sub" : [
										"powershell.exe -Command \"C:\\cfn\\scripts\\Wait-EBSVolumeAttachment -StackName '${AWS::StackName}' -CFNLogicalVolumeIds 'WSFCNode2Volume1','WSFCNode2Volume2'${Suffix}\"",
										{
											"Suffix" : {
												"Fn::If" : [
													"Use4Disks",
													",'WSFCNode2Volume3','WSFCNode2Volume4'",
													""
												]
											}
										}
									]
								},
								"waitAfterCompletion" : "0"
							},
							"b-initialize-disks": {
                                "command": "powershell.exe -File C:\\cfn\\scripts\\Initialize-Disks.ps1 -FileSystem ReFS -PartitionStyle GPT",
                                "waitAfterCompletion": "0"
                            },
							"c-rename-computer": {
                                "command": {
									"Fn::If" : [
										"RenameNode2",
										{
											"Fn::Sub" : "powershell.exe -File C:\\cfn\\scripts\\Rename-Computer.ps1 -NewName \"${WSFCNode2NetBIOSName}\" -Restart"
										},
										""
									]
								},                       
                                "waitAfterCompletion": "forever"
                            },
                            "d-join-domain": {
                                "command": {
									"Fn::Sub" : "powershell.exe -File C:\\cfn\\scripts\\Join-Domain.ps1 -DomainName \"${DomainName}\" -Username \"${DomainUsername}\" -SSMPasswordParameterName \"${DomainUserPasswordSSMParameterKey}\""
								},                       
                                "waitAfterCompletion": "0"
                            },  
                            "e-install-windows-failover-clustering": {
                                "command": "powershell.exe -File C:\\cfn\\scripts\\Install-WSFC.ps1",
                                "waitAfterCompletion": "0"
                            },
							"f-install-file-server": {
                                "command": "powershell.exe -File C:\\cfn\\scripts\\Install-FileServer.ps1",
                                "waitAfterCompletion": "0"
                            },
							"g-disable-firewall": {
                                "command": "powershell.exe -File C:\\cfn\\scripts\\Disable-Firewall.ps1",
                                "waitAfterCompletion": "0"
                            },
							"h-install-ad-powershell" : {
								"command": "powershell.exe -File C:\\cfn\\scripts\\Install-ADPowerShell.ps1",
                                "waitAfterCompletion": "0"
							},
							"i-install-dns-powershell" : {
								"command": "powershell.exe -File C:\\cfn\\scripts\\Install-DnsPowerShell.ps1",
                                "waitAfterCompletion": "0"
							},
							"j-reboot": {
                                "command": "powershell.exe -File C:\\cfn\\scripts\\Restart-Computer.ps1",
                                "waitAfterCompletion": "forever"
                            },
							"k-enable-credssp" : {
								"command": "powershell.exe -File C:\\cfn\\scripts\\Enable-CredSSP.ps1",
                                "waitAfterCompletion": "0"
							}						
						}
					},
					"Configure" : {
						"commands" : {
							"a-prepare-s2d-disks" : {
								"command" : "powershell.exe -File C:\\cfn\\scripts\\Prepare-S2DDisks.ps1",
								"waitAfterCompletion" : "0"
							},
							"b-set-s2d-timeout" : {
								"command" : "powershell.exe -File C:\\cfn\\scripts\\Set-S2DTimeout.ps1",
								"waitAfterCompletion" : "0"
							},
							"c-set-s2d-disk-auto-replace" : {
								"command" : {
									"Fn::Sub" : [
										"powershell.exe -Command \"C:\\cfn\\scripts\\Set-S2DDiskAutoReplace.ps1 -Enabled ${Enabled}\"",
										{
											"Enabled" : {
												"Fn::If" : [
													"DisableAutoReplace",
													"$false",
													"$true"
												]
											}
										}
									]
								},
								"waitAfterCompletion" : "0"
							},
							"d-set-smb-client" : {
								"command" : "powershell.exe -Command \"C:\\cfn\\scripts\\Set-SmbClient.ps1 -EnableMultiChannel $true -EnableLargeMtu $true -UpdateRssConnectionCount\"",
								"waitAfterCompletion" : "0"
							},
							"e-set-netadapter-rss" : {
								"command" : "powershell.exe -File C:\\cfn\\scripts\\Set-NetAdapterRss.ps1",
								"waitAfterCompletion" : "0"
							},
							"f-enable-jumbo-frames" : {
								"command" : {
									"Fn::If" : [
										"UseJumboFrames",
										"powershell.exe -File C:\\cfn\\scripts\\Enable-JumboFrames.ps1",
										""
									]
								},
								"waitAfterCompletion" : "0"
							}
						}
					},
					"Install" : {
						"commands" : {
							"a-disable-existing-computer-object": {
                                "command": {
									"Fn::Sub" : "powershell.exe -Command \"C:\\cfn\\scripts\\Set-ADComputerAccountStatus.ps1 -ComputerName '${WSFCNetBIOSName}' -Enabled $false -Username '${DomainUsername}' -SSMPasswordParameterName '${DomainUserPasswordSSMParameterKey}'\""	
								},
                                "waitAfterCompletion": "0"
                            },
							"b-configure-wsfc": {
                                "command": {
									"Fn::Join" : [
										"",
										[
											"powershell.exe -Command \"C:\\cfn\\scripts\\Configure-WSFC.ps1 -IncludeS2DTest -Nodes '",
											{
												"Ref" : "WSFCNode1NetBIOSName"
											},
											"','",
											{
												"Ref" : "WSFCNode2NetBIOSName"
											},
											"'",
											{
												"Fn::If" : [
													"Is3Node",
													{
														"Fn::Sub" : ",'${WSFCNode3NetBIOSName}'"
													},
													{
														"Ref" : "AWS::NoValue"
													}
												]
											},
											" -IPAddresses '",
											{
												"Ref" : "WSFCNode1PrivateIP2"
											},
											"','",
											{
												"Ref" : "WSFCNode2PrivateIP2"
											},
											"'",
											{
												"Fn::If" : [
													"Is3Node",
													{
														"Fn::Sub" : ",'${WSFCNode3PrivateIP2}'"
													},
													{
														"Ref" : "AWS::NoValue"
													}
												]
											},
											" -ClusterName '",
											{
												"Ref" : "WSFCNetBIOSName"
											},
											"'",
											{
												"Fn::Sub" : " -Username '${DomainUsername}' -SSMPasswordParameterName '${DomainUserPasswordSSMParameterKey}'"												
											}
										]	
									]
								},
                                "waitAfterCompletion": "0"
                            },	
							"c-enable-s2d" : {
								"command" : {
									"Fn::Join" : [
										"",
										[
											{
												"Fn::Sub" : "powershell.exe -File C:\\cfn\\scripts\\Enable-ClusterS2D.ps1 -CachePageSizeKBytes ${CachePageSizeKBytes} -StoragePoolFriendlyName \"${StoragePoolFriendlyName}\""
											},
											{
												"Fn::If" : [
													"UsesInstanceStorageCache",
													" -CacheDeviceModel \"Amazon EC2 NVMe\"",
													{
														"Ref" : "AWS::NoValue"
													}
												]
											}
										]
									]
								},
								"waitAfterCompletion": "0"
							},							
							"d-create-s2d-volume" : {
								"command" : {
									"Fn::Sub" : "powershell.exe -Command \"C:\\cfn\\scripts\\New-S2DVolume.ps1 -StoragePoolFriendlyName '${StoragePoolFriendlyName}' -FriendlyName '${VolumeFriendlyName}' -FileSystem '${FileSystem}' -Size (${FileShareVolumeSize} * 1024 * 1024 * 1024)\""
								},
								"waitAfterCompletion": "0"
							},
							"e-enable-csv-cache" : {
								"command" : {
									"Fn::Join" : [
										"",
										[
											"powershell.exe -File C:\\cfn\\scripts\\Enable-CSVCache.ps1",
											{
												"Fn::If" : [
													"UseCSVCache",
													{
														"Fn::Sub" : " -SizeInMB ${CSVCacheSizeMBytes}"
													},
													{
														"Ref" : "AWS::NoValue"
													}
												]
											}
										]
									]
								},
								"waitAfterCompletion": "0"
							},
							"f-set-cno-permissions" : {
								"command" : {
									"Fn::Sub" : "powershell.exe -File C:\\cfn\\scripts\\Set-CNOActiveDirectoryPermissions.ps1 -ClusterNameObject \"${WSFCNetBIOSName}\" -Username \"${DomainUsername}\" -SSMPasswordParameterName \"${DomainUserPasswordSSMParameterKey}\""
								},
								"waitAfterCompletion": "0"
							},
							"g-disable-existing-computer-object": {
                                "command": {
									"Fn::Sub" : "powershell.exe -Command \"C:\\cfn\\scripts\\Set-ADComputerAccountStatus.ps1 -ComputerName '${FileServerNetBIOSName}' -Enabled $false -Username '${DomainUsername}' -SSMPasswordParameterName '${DomainUserPasswordSSMParameterKey}'\""
								},
                                "waitAfterCompletion": "0"
                            },
							"h-remove-existing-dns": {
                                "command": {
									"Fn::If" : [
										"UseSOFS",
										{
											"Fn::Sub" : "powershell.exe -File C:\\cfn\\scripts\\Remove-DnsRecord.ps1 -Record \"${FileServerNetBIOSName}\" -Username \"${DomainUsername}\" -SSMPasswordParameterName \"${DomainUserPasswordSSMParameterKey}\""
										},
										""
									]
								},
                                "waitAfterCompletion": "0"
                            },
							"i-add-wsfc-fileshare-role" : {
								"command" : {
									"Fn::Sub" : [
										"powershell.exe -Command \"C:\\cfn\\scripts\\Add-WSFCFileServerRole.ps1 -Name '${FileServerNetBIOSName}' -Username '${DomainUsername}' -SSMPasswordParameterName '${DomainUserPasswordSSMParameterKey}'${Suffix}\"",
										{
											"Suffix" : {
												"Fn::If" : [
													"UseSOFS",
													" -SOFS",
													{
														"Fn::Sub" : [
															" -VirtualDisk '${VolumeFriendlyName}' -IPAddress '${WSFCNode1PrivateIP3}','${WSFCNode2PrivateIP3}'${Node3}",
															{
																"Node3" : {
																	"Fn::If" : [
																		"Is3Node",
																		{
																			"Fn::Sub" : ",'${WSFCNode3PrivateIP3}'"
																		},
																		""
																	]
																}
															}
														]
													}					
												]
											}
										}
									]
								},
								"waitAfterCompletion": "0"
							},
							"j-set-quorum": {
                                "command": {
									"Fn::Sub" : [
										"powershell.exe -File C:\\cfn\\scripts\\Set-ClusterQuorum.ps1 -Username \"${DomainUsername}\" -SSMPasswordParameterName \"${DomainUserPasswordSSMParameterKey}\"${Suffix}",
										{										
											"Suffix" : {
												"Fn::If" : [
													"IsTwoNode",
													{
														"Fn::Sub" : " -FileShare \"\\\\${WSFCNode3NetBIOSName}.${DomainName}\\Quorom\""
													},
													""
												]
											}
										}
									]
								},
                                "waitAfterCompletion": "0"
                            },
							"k-move-cluster-role" : {
								"command" : {
									"Fn::Sub" : "powershell.exe -File C:\\cfn\\scripts\\Move-ClusterRole.ps1 -Role \"${FileServerNetBIOSName}\" -Node \"${WSFCNode2NetBIOSName}\" -Username \"${DomainUsername}\" -SSMPasswordParameterName \"${DomainUserPasswordSSMParameterKey}\""
								},
								"waitAfterCompletion": "0"
							},
							"l-new-file-share" : {
								"command" : {
									"Fn::Sub" : [
										"powershell.exe -Command \"C:\\cfn\\scripts\\New-S2DFileShare.ps1 -Name '${FileShareName}' -DiskName '${VolumeFriendlyName}' -Resource '${FileServerNetBIOSName}' -EncryptData -FullAccess 'Domain Admins' -ChangeAccess 'Domain Users'\"${Suffix}",
										{
											"Suffix" : {
												"Fn::If" : [
													"UseSOFS",
													" -SOFS",
													""
												]
											}
										}
									]
								},
								"waitAfterCompletion": "0"
							},
							"m-move-cluster-role" : {
								"command" : {
									"Fn::Sub" : "powershell.exe -File C:\\cfn\\scripts\\Move-ClusterRole.ps1 -Role \"${FileServerNetBIOSName}\" -Node \"${WSFCNode1NetBIOSName}\" -Username \"${DomainUsername}\" -SSMPasswordParameterName \"${DomainUserPasswordSSMParameterKey}\""
								},
								"waitAfterCompletion": "0"
							}
						}
					},
					"Finalize" : {
						"commands" : {
							"a-disable-credssp" : {
								"command": "powershell.exe -File C:\\cfn\\scripts\\Disable-CredSSP.ps1",
                                "waitAfterCompletion": "0"
							},
							"b-send-cfn-signal" : {
								"command" : {
									"Fn::Sub" : "powershell.exe -File C:\\cfn\\scripts\\Send-CfnSignal.ps1 -WaitConditionUrl \"${WSFCWaitHandle2}\" -ExitCode 0"
								},
								"waitAfterCompletion" : "0"
							},
							"c-reboot": {
                                "command": "powershell.exe -File C:\\cfn\\scripts\\Restart-Computer.ps1",
                                "waitAfterCompletion": "forever"
                            }
						}
					}
				 }
			},
            "Properties": {
                "Tenancy": "default",
                "ImageId": {
					"Ref" : "OSImage"
				},
                "IamInstanceProfile": {
                    "Ref": "WSFCProfile"
                },
                "InstanceType": {
                    "Ref": "WSFCInstanceType"
                },
                "EbsOptimized": "true",
                "NetworkInterfaces": [
                    {
                        "DeleteOnTermination": "true",
                        "DeviceIndex": 0,
                        "SubnetId": {
                            "Ref": "Subnet2"
                        },
                        "PrivateIpAddresses": [
                            {
                                "Primary": "true",
                                "PrivateIpAddress": {
                                    "Ref": "WSFCNode2PrivateIP1"
                                }
                            },
                            {
                                "Primary": "false",
                                "PrivateIpAddress": {
                                    "Ref": "WSFCNode2PrivateIP2"
                                }
                            },
                            {
                                "Primary": "false",
                                "PrivateIpAddress": {
                                    "Ref": "WSFCNode2PrivateIP3"
                                }
                            }
                        ],
                        "GroupSet": [
                            {
                                "Ref": "WSFCSecurityGroup"
                            },
							{
								"Ref" : "FileShareServerAccessSecurityGroup"
							},
							{
								"Ref" : "ClusterManagementAccessSecurityGroup"
							}
                        ]
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Ref": "WSFCNode2NetBIOSName"
                        }
                    },
					 {
                        "Key" : "Environment",
                        "Value" : {
                            "Ref" : "EnvironmentTag"
                        }
                    },
                    {
                        "Key" : "Application",
                        "Value" : {
                            "Ref" : "ApplicationTag"
                        }
                    },
                    {
                        "Key" : "Organization",
                        "Value" : {
                            "Ref" : "OrganizationTag"
                        }
                    }
                ],
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/sda1",
                        "Ebs": {
                            "VolumeSize": {
								"Ref" : "OSVolumeSize"
							},
                            "VolumeType": {
								"Ref" : "OSVolumeType"
							},
							"Iops": {
								"Fn::If": [
									"OSVolIsIo1",
									{
										"Ref": "OSVolumeIops"
									},
									{
										"Ref": "AWS::NoValue"
									}
								]
							}
                        }
                    }
                ],
                "KeyName": {
                    "Ref": "KeyPairName"
                },
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "<script>\n",
								{
									"Fn::Sub" : "cfn-init.exe -v --stack ${AWS::StackId} --resource WSFCNode2 --region ${AWS::Region} --configsets config\n"
								},
                                "</script>"
                            ]
                        ]
                    }
                }
            }
        },
		"WSFCNode3": {
            "Type": "AWS::EC2::Instance",
			"Metadata": {
                "AWS::CloudFormation::Authentication": {
                    "S3AccessCreds": {
                        "type": "S3",
                        "roleName": {
                            "Ref": "WSFCRole"
                        },
                        "buckets": [
                            {
                                "Ref": "ConfigBucketName"
                            }
                        ]
                    }
                },
				"AWS::CloudFormation::Init": {
					"configSets": {
                        "config": [
                            "FetchResources",
                            "Setup",
                            "Prep",
							"Configure",
							"Finalize"
                        ]
                    },
					"FetchResources": {
                        "files": {
							"C:\\cfn\\scripts\\Initialize-Disks.ps1": {
                                "source": {
                                    "Fn::Sub": [
										"https://${ConfigBucketName}.s3${Region}.amazonaws.com/common/scripts/Initialize-Disks.ps1",
										{
											"Region" : {
												"Fn::If" : [
													"IsUsEast1",
													"",
													{
														"Fn::Sub" : "-${AWS::Region}"
													}
												]													
											}
										}
									]
                                }
                            },
							"C:\\cfn\\scripts\\Install-WSFC.ps1": {
                                "source": {
									"Fn::Sub": [
										"https://${ConfigBucketName}.s3${Region}.amazonaws.com/common/scripts/Install-WSFC.ps1",
										{
											"Region" : {
												"Fn::If" : [
													"IsUsEast1",
													"",
													{
														"Fn::Sub" : "-${AWS::Region}"
													}
												]													
											}
										}
									]
                                }
                            },
							"C:\\cfn\\scripts\\Install-FileServer.ps1": {
                                "source": {
									"Fn::Sub": [
										"https://${ConfigBucketName}.s3${Region}.amazonaws.com/common/scripts/Install-FileServer.ps1",
										{
											"Region" : {
												"Fn::If" : [
													"IsUsEast1",
													"",
													{
														"Fn::Sub" : "-${AWS::Region}"
													}
												]													
											}
										}
									]
                                }
                            },
							"C:\\cfn\\scripts\\Join-Domain.ps1": {
                                "source": {
									"Fn::Sub": [
										"https://${ConfigBucketName}.s3${Region}.amazonaws.com/common/scripts/Join-Domain.ps1",
										{
											"Region" : {
												"Fn::If" : [
													"IsUsEast1",
													"",
													{
														"Fn::Sub" : "-${AWS::Region}"
													}
												]													
											}
										}
									]
                                }
                            },
							"C:\\cfn\\scripts\\Restart-Computer.ps1": {
                                "source": {
                                    "Fn::Sub": [
										"https://${ConfigBucketName}.s3${Region}.amazonaws.com/common/scripts/Restart-Computer.ps1",
										{
											"Region" : {
												"Fn::If" : [
													"IsUsEast1",
													"",
													{
														"Fn::Sub" : "-${AWS::Region}"
													}
												]													
											}
										}
									]
                                }
                            },
							"C:\\cfn\\scripts\\Rename-Computer.ps1": {
                                "source": {
                                    "Fn::Sub": [
										"https://${ConfigBucketName}.s3${Region}.amazonaws.com/common/scripts/Rename-Computer.ps1",
										{
											"Region" : {
												"Fn::If" : [
													"IsUsEast1",
													"",
													{
														"Fn::Sub" : "-${AWS::Region}"
													}
												]													
											}
										}
									]
                                }
                            },
							"C:\\cfn\\scripts\\Disable-Firewall.ps1": {
                                "source": {
                                    "Fn::Sub": [
										"https://${ConfigBucketName}.s3${Region}.amazonaws.com/common/scripts/Disable-Firewall.ps1",
										{
											"Region" : {
												"Fn::If" : [
													"IsUsEast1",
													"",
													{
														"Fn::Sub" : "-${AWS::Region}"
													}
												]													
											}
										}
									]
                                }
                            },
							"C:\\cfn\\scripts\\Prepare-S2DDisks.ps1": {
                                "source": {
									"Fn::Sub": [
										"https://${ConfigBucketName}.s3${Region}.amazonaws.com/${ConfigS3KeyPrefix}scripts/Prepare-S2DDisks.ps1",
										{
											"Region" : {
												"Fn::If" : [
													"IsUsEast1",
													"",
													{
														"Fn::Sub" : "-${AWS::Region}"
													}
												]													
											}
										}
									]
                                }
                            },
							"C:\\cfn\\scripts\\Send-CfnSignal.ps1": {
                                "source": {
                                    "Fn::Sub": [
										"https://${ConfigBucketName}.s3${Region}.amazonaws.com/common/scripts/Send-CfnSignal.ps1",
										{
											"Region" : {
												"Fn::If" : [
													"IsUsEast1",
													"",
													{
														"Fn::Sub" : "-${AWS::Region}"
													}
												]													
											}
										}
									]
                                }
                            },
							"C:\\cfn\\scripts\\Install-ADPowerShell.ps1": {
                                "source": {
                                    "Fn::Sub": [
										"https://${ConfigBucketName}.s3${Region}.amazonaws.com/common/scripts/Install-ADPowerShell.ps1",
										{
											"Region" : {
												"Fn::If" : [
													"IsUsEast1",
													"",
													{
														"Fn::Sub" : "-${AWS::Region}"
													}
												]													
											}
										}
									]
                                }
                            },
							"C:\\cfn\\scripts\\Set-S2DTimeout.ps1": {
                                "source": {
                                    "Fn::Sub": [
										"https://${ConfigBucketName}.s3${Region}.amazonaws.com/${ConfigS3KeyPrefix}scripts/Set-S2DTimeout.ps1",
										{
											"Region" : {
												"Fn::If" : [
													"IsUsEast1",
													"",
													{
														"Fn::Sub" : "-${AWS::Region}"
													}
												]													
											}
										}
									]
                                }
                            },
							"C:\\cfn\\scripts\\Set-S2DDiskAutoReplace.ps1": {
                                "source": {
                                    "Fn::Sub": [
										"https://${ConfigBucketName}.s3${Region}.amazonaws.com/${ConfigS3KeyPrefix}scripts/Set-S2DDiskAutoReplace.ps1",
										{
											"Region" : {
												"Fn::If" : [
													"IsUsEast1",
													"",
													{
														"Fn::Sub" : "-${AWS::Region}"
													}
												]													
											}
										}
									]
                                }
                            },
							"C:\\cfn\\scripts\\Enable-JumboFrames.ps1": {
                                "source": {
                                    "Fn::Sub": [
										"https://${ConfigBucketName}.s3${Region}.amazonaws.com/common/scripts/Enable-JumboFrames.ps1",
										{
											"Region" : {
												"Fn::If" : [
													"IsUsEast1",
													"",
													{
														"Fn::Sub" : "-${AWS::Region}"
													}
												]													
											}
										}
									]
                                }
                            },
							"C:\\cfn\\scripts\\Set-SmbClient.ps1": {
                                "source": {
                                    "Fn::Sub": [
										"https://${ConfigBucketName}.s3${Region}.amazonaws.com/common/scripts/Set-SmbClient.ps1",
										{
											"Region" : {
												"Fn::If" : [
													"IsUsEast1",
													"",
													{
														"Fn::Sub" : "-${AWS::Region}"
													}
												]													
											}
										}
									]
                                }
                            },
							"C:\\cfn\\scripts\\Set-NetAdapterRss.ps1": {
                                "source": {
                                    "Fn::Sub": [
										"https://${ConfigBucketName}.s3${Region}.amazonaws.com/common/scripts/Set-NetAdapterRss.ps1",
										{
											"Region" : {
												"Fn::If" : [
													"IsUsEast1",
													"",
													{
														"Fn::Sub" : "-${AWS::Region}"
													}
												]													
											}
										}
									]
                                }
                            },
							"C:\\cfn\\scripts\\Wait-EBSVolumeAttachment.ps1": {
                                "source": {
                                    "Fn::Sub": [
										"https://${ConfigBucketName}.s3${Region}.amazonaws.com/common/scripts/Wait-EBSVolumeAttachment.ps1",
										{
											"Region" : {
												"Fn::If" : [
													"IsUsEast1",
													"",
													{
														"Fn::Sub" : "-${AWS::Region}"
													}
												]													
											}
										}
									]
                                }
                            }
						}
					},
					"Setup" : {
                        "commands": {
                            "a-set-execution-policy": {
                                "command": "powershell.exe -Command { Set-ExecutionPolicy Unrestricted -Force }",
                                "waitAfterCompletion": "0"
                            }                           
                        }
                    },
					"Prep" : {
						"commands" : {
							"a-wait-volume-attachment" : {
								"command" : {
									"Fn::Sub" : [
										"powershell.exe -Command \"C:\\cfn\\scripts\\Wait-EBSVolumeAttachment -StackName '${AWS::StackName}' -CFNLogicalVolumeIds 'WSFCNode3Volume1','WSFCNode3Volume2'${Suffix}\"",
										{
											"Suffix" : {
												"Fn::If" : [
													"Use4Disks",
													",'WSFCNode3Volume3','WSFCNode3Volume4'",
													""
												]
											}
										}
									]
								},
								"waitAfterCompletion" : "0"
							},
							"b-initialize-disks": {
                                "command": "powershell.exe -File C:\\cfn\\scripts\\Initialize-Disks.ps1 -FileSystem ReFS -PartitionStyle GPT",
                                "waitAfterCompletion": "0"
                            },
							"c-rename-computer": {
                                "command": {
									"Fn::If" : [
										"RenameNode3",
										{
											"Fn::Sub" : "powershell.exe -File C:\\cfn\\scripts\\Rename-Computer.ps1 -NewName \"${WSFCNode3NetBIOSName}\" -Restart"
										},
										""
									]
								},                       
                                "waitAfterCompletion": "forever"
                            },
                            "d-join-domain": {
                                "command": {
									"Fn::Sub" : "powershell.exe -File C:\\cfn\\scripts\\Join-Domain.ps1 -DomainName \"${DomainName}\" -Username \"${DomainUsername}\" -SSMPasswordParameterName \"${DomainUserPasswordSSMParameterKey}\""
								},                       
                                "waitAfterCompletion": "0"
                            },                        
                            "e-install-windows-failover-clustering": {
                                "command": "powershell.exe -File C:\\cfn\\scripts\\Install-WSFC.ps1",
                                "waitAfterCompletion": "0"
                            },
							"f-install-file-server": {
                                "command": "powershell.exe -File C:\\cfn\\scripts\\Install-FileServer.ps1",
                                "waitAfterCompletion": "0"
                            },
							"g-disable-firewall": {
                                "command": "powershell.exe -File C:\\cfn\\scripts\\Disable-Firewall.ps1",
                                "waitAfterCompletion": "0"
                            },
							"h-install-ad-powershell" : {
								"command": "powershell.exe -File C:\\cfn\\scripts\\Install-ADPowerShell.ps1",
                                "waitAfterCompletion": "0"
							},
							"i-reboot": {
                                "command": "powershell.exe -File C:\\cfn\\scripts\\Restart-Computer.ps1",
                                "waitAfterCompletion": "forever"
                            }
						}
					},
					"Configure" : {
						"commands" : {
							"a-prepare-s2d-disks" : {
								"command" : "powershell.exe -File C:\\cfn\\scripts\\Prepare-S2DDisks.ps1",
								"waitAfterCompletion" : "0"
							},
							"b-set-s2d-timeout" : {
								"command" : "powershell.exe -File C:\\cfn\\scripts\\Set-S2DTimeout.ps1",
								"waitAfterCompletion" : "0"
							},
							"c-set-s2d-disk-auto-replace" : {
								"command" : {
									"Fn::Sub" : [
										"powershell.exe -Command \"C:\\cfn\\scripts\\Set-S2DDiskAutoReplace.ps1 -Enabled ${Enabled}\"",
										{
											"Enabled" : {
												"Fn::If" : [
													"DisableAutoReplace",
													"$false",
													"$true"
												]
											}
										}
									]
								},
								"waitAfterCompletion" : "0"
							},
							"d-set-smb-client" : {
								"command" : "powershell.exe -Command \"C:\\cfn\\scripts\\Set-SmbClient.ps1 -EnableMultiChannel $true -EnableLargeMtu $true -UpdateRssConnectionCount\"",
								"waitAfterCompletion" : "0"
							},
							"e-set-netadapter-rss" : {
								"command" : "powershell.exe -File C:\\cfn\\scripts\\Set-NetAdapterRss.ps1",
								"waitAfterCompletion" : "0"
							},
							"f-enable-jumbo-frames" : {
								"command" : {
									"Fn::If" : [
										"UseJumboFrames",
										"powershell.exe -File C:\\cfn\\scripts\\Enable-JumboFrames.ps1",
										""
									]
								},
								"waitAfterCompletion" : "0"
							}
						}
					},
					"Finalize" : {
						"commands" : {
							"a-send-cfn-signal" : {
								"command" : {
									"Fn::Sub" : "powershell.exe -File C:\\cfn\\scripts\\Send-CfnSignal.ps1 -WaitConditionUrl \"${WSFCWaitHandle}\" -ExitCode 0"
								},
								"waitAfterCompletion" : "0"
							},							
							"b-reboot": {
                                "command": "powershell.exe -File C:\\cfn\\scripts\\Restart-Computer.ps1",
                                "waitAfterCompletion": "forever"
                            }
						}
					}
				 }
			},
			"Condition" : "Is3Node",
            "Properties": {
                "Tenancy": "default",
                "ImageId": {
					"Ref" : "OSImage"
				},
                "IamInstanceProfile": {
                    "Ref": "WSFCProfile"
                },
                "InstanceType": {
                    "Ref": "WSFCInstanceType"
                },
                "EbsOptimized": "true",
                "NetworkInterfaces": [
                    {
                        "DeleteOnTermination": "true",
                        "DeviceIndex": 0,
                        "SubnetId": {
                            "Ref": "Subnet3"
                        },
                        "PrivateIpAddresses": [
                            {
                                "Primary": "true",
                                "PrivateIpAddress": {
                                    "Ref": "WSFCNode3PrivateIP1"
                                }
                            },
                            {
                                "Primary": "false",
                                "PrivateIpAddress": {
                                    "Ref": "WSFCNode3PrivateIP2"
                                }
                            },
                            {
                                "Primary": "false",
                                "PrivateIpAddress": {
                                    "Ref": "WSFCNode3PrivateIP3"
                                }
                            }
                        ],
                        "GroupSet": [
                            {
                                "Ref": "WSFCSecurityGroup"
                            },
							{
								"Ref" : "FileShareServerAccessSecurityGroup"
							},
							{
								"Ref" : "ClusterManagementAccessSecurityGroup"
							}
                        ]
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Ref": "WSFCNode3NetBIOSName"
                        }
                    },
					 {
                        "Key" : "Environment",
                        "Value" : {
                            "Ref" : "EnvironmentTag"
                        }
                    },
                    {
                        "Key" : "Application",
                        "Value" : {
                            "Ref" : "ApplicationTag"
                        }
                    },
                    {
                        "Key" : "Organization",
                        "Value" : {
                            "Ref" : "OrganizationTag"
                        }
                    }
                ],
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/sda1",
                        "Ebs": {
                           "VolumeSize": {
								"Ref" : "OSVolumeSize"
							},
                            "VolumeType": {
								"Ref" : "OSVolumeType"
							},
							"Iops": {
								"Fn::If": [
									"OSVolIsIo1",
									{
										"Ref": "OSVolumeIops"
									},
									{
										"Ref": "AWS::NoValue"
									}
								]
							}
                        }
                    }
                ],
                "KeyName": {
                    "Ref": "KeyPairName"
                },
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                               "<script>\n",
								{
									"Fn::Sub" : "cfn-init.exe -v --stack ${AWS::StackId} --resource WSFCNode3 --region ${AWS::Region} --configsets config\n"
								},
                                "</script>"
                            ]
                        ]
                    }
                }
            }
        },

		"WitnessServer": {
            "Type": "AWS::EC2::Instance",
			"Condition" : "IsTwoNode",
			"Metadata": {
                "AWS::CloudFormation::Authentication": {
                    "S3AccessCreds": {
                        "type": "S3",
                        "roleName": {
                            "Ref": "WSFCRole"
                        },
                        "buckets": [
                            {
                                "Ref": "ConfigBucketName"
                            }
                        ]
                    }
                },
				"AWS::CloudFormation::Init": {
					"configSets": {
                        "config": [
                            "FetchResources",
                            "Setup",
                            "Prep",
							"Configure",
							"Finalize"
                        ]
                    },
					"FetchResources": {
                        "files": {
							"C:\\cfn\\scripts\\Initialize-Disks.ps1": {
                                "source": {
                                    "Fn::Sub": [
										"https://${ConfigBucketName}.s3${Region}.amazonaws.com/common/scripts/Initialize-Disks.ps1",
										{
											"Region" : {
												"Fn::If" : [
													"IsUsEast1",
													"",
													{
														"Fn::Sub" : "-${AWS::Region}"
													}
												]													
											}
										}
									]
                                }
                            },
							"C:\\cfn\\scripts\\Install-WSFC.ps1": {
                                "source": {
									"Fn::Sub": [
										"https://${ConfigBucketName}.s3${Region}.amazonaws.com/common/scripts/Install-WSFC.ps1",
										{
											"Region" : {
												"Fn::If" : [
													"IsUsEast1",
													"",
													{
														"Fn::Sub" : "-${AWS::Region}"
													}
												]													
											}
										}
									]
                                }
                            },
							"C:\\cfn\\scripts\\Install-FileServer.ps1": {
                                "source": {
									"Fn::Sub": [
										"https://${ConfigBucketName}.s3${Region}.amazonaws.com/common/scripts/Install-FileServer.ps1",
										{
											"Region" : {
												"Fn::If" : [
													"IsUsEast1",
													"",
													{
														"Fn::Sub" : "-${AWS::Region}"
													}
												]													
											}
										}
									]
                                }
                            },
							"C:\\cfn\\scripts\\Join-Domain.ps1": {
                                "source": {
									"Fn::Sub": [
										"https://${ConfigBucketName}.s3${Region}.amazonaws.com/common/scripts/Join-Domain.ps1",
										{
											"Region" : {
												"Fn::If" : [
													"IsUsEast1",
													"",
													{
														"Fn::Sub" : "-${AWS::Region}"
													}
												]													
											}
										}
									]
                                }
                            },
							"C:\\cfn\\scripts\\Restart-Computer.ps1": {
                                "source": {
                                    "Fn::Sub": [
										"https://${ConfigBucketName}.s3${Region}.amazonaws.com/common/scripts/Restart-Computer.ps1",
										{
											"Region" : {
												"Fn::If" : [
													"IsUsEast1",
													"",
													{
														"Fn::Sub" : "-${AWS::Region}"
													}
												]													
											}
										}
									]
                                }
                            },
							"C:\\cfn\\scripts\\Rename-Computer.ps1": {
                                "source": {
                                    "Fn::Sub": [
										"https://${ConfigBucketName}.s3${Region}.amazonaws.com/common/scripts/Rename-Computer.ps1",
										{
											"Region" : {
												"Fn::If" : [
													"IsUsEast1",
													"",
													{
														"Fn::Sub" : "-${AWS::Region}"
													}
												]													
											}
										}
									]
                                }
                            },
							"C:\\cfn\\scripts\\Disable-Firewall.ps1": {
                                "source": {
                                    "Fn::Sub": [
										"https://${ConfigBucketName}.s3${Region}.amazonaws.com/common/scripts/Disable-Firewall.ps1",
										{
											"Region" : {
												"Fn::If" : [
													"IsUsEast1",
													"",
													{
														"Fn::Sub" : "-${AWS::Region}"
													}
												]													
											}
										}
									]
                                }
                            },
							"C:\\cfn\\scripts\\Send-CfnSignal.ps1": {
                                "source": {
                                    "Fn::Sub": [
										"https://${ConfigBucketName}.s3${Region}.amazonaws.com/common/scripts/Send-CfnSignal.ps1",
										{
											"Region" : {
												"Fn::If" : [
													"IsUsEast1",
													"",
													{
														"Fn::Sub" : "-${AWS::Region}"
													}
												]													
											}
										}
									]
                                }
                            },
							"C:\\cfn\\scripts\\Install-ADPowerShell.ps1": {
                                "source": {
                                    "Fn::Sub": [
										"https://${ConfigBucketName}.s3${Region}.amazonaws.com/common/scripts/Install-ADPowerShell.ps1",
										{
											"Region" : {
												"Fn::If" : [
													"IsUsEast1",
													"",
													{
														"Fn::Sub" : "-${AWS::Region}"
													}
												]													
											}
										}
									]
                                }
                            },
							"C:\\cfn\\scripts\\New-QuoromFileShare.ps1": {
                                "source": {
                                    "Fn::Sub": [
										"https://${ConfigBucketName}.s3${Region}.amazonaws.com/${ConfigS3KeyPrefix}scripts/New-QuoromFileShare.ps1",
										{
											"Region" : {
												"Fn::If" : [
													"IsUsEast1",
													"",
													{
														"Fn::Sub" : "-${AWS::Region}"
													}
												]													
											}
										}
									]
                                }
                            }
						}
					},
					"Setup" : {
                        "commands": {
                            "a-set-execution-policy": {
                                "command": "powershell.exe -Command { Set-ExecutionPolicy Unrestricted -Force }",
                                "waitAfterCompletion": "0"
                            }                           
                        }
                    },
					"Prep" : {
						"commands" : {
							"a-initialize-disks": {
                                "command": "powershell.exe -File C:\\cfn\\scripts\\Initialize-Disks.ps1 -FileSystem ReFS -PartitionStyle GPT",
                                "waitAfterCompletion": "0"
                            },
							"b-rename-computer": {
                                "command": {
									"Fn::If" : [
										"RenameNode3",
										{
											"Fn::Sub" : "powershell.exe -File C:\\cfn\\scripts\\Rename-Computer.ps1 -NewName \"${WSFCNode3NetBIOSName}\" -Restart"
										},
										""
									]
								},                       
                                "waitAfterCompletion": "forever"
                            },
                            "c-join-domain": {
                                "command": {
									"Fn::Sub" : "powershell.exe -File C:\\cfn\\scripts\\Join-Domain.ps1 -DomainName \"${DomainName}\" -Username \"${DomainUsername}\" -SSMPasswordParameterName \"${DomainUserPasswordSSMParameterKey}\""
								},                       
                                "waitAfterCompletion": "0"
                            },                        
                            "d-install-windows-failover-clustering": {
                                "command": "powershell.exe -File C:\\cfn\\scripts\\Install-WSFC.ps1",
                                "waitAfterCompletion": "0"
                            },
							"e-install-file-server": {
                                "command": "powershell.exe -File C:\\cfn\\scripts\\Install-FileServer.ps1",
                                "waitAfterCompletion": "0"
                            },
							"f-disable-firewall": {
                                "command": "powershell.exe -File C:\\cfn\\scripts\\Disable-Firewall.ps1",
                                "waitAfterCompletion": "0"
                            },
							"g-install-ad-powershell" : {
								"command": "powershell.exe -File C:\\cfn\\scripts\\Install-ADPowerShell.ps1",
                                "waitAfterCompletion": "0"
							}
						}
					},
					"Configure" : {
						"commands" : {
							"a-new-share" : {
								"command" : {
									"Fn::Sub" : "powershell.exe -Command \"C:\\cfn\\scripts\\New-QuoromFileShare.ps1 -Path '%SYSTEMDRIVE%\\Quorom' -Name Quorom -FullAccess 'Domain Admins','${DomainUsername}'\""
								},
								"waitAfterCompletion": "0"
							}
						}
					},
					"Finalize" : {
						"commands" : {
							"a-send-cfn-signal" : {
								"command" : {
									"Fn::Sub" : "powershell.exe -File C:\\cfn\\scripts\\Send-CfnSignal.ps1 -WaitConditionUrl \"${WSFCWaitHandle}\" -ExitCode 0"
								},
								"waitAfterCompletion" : "0"
							}
						}
					}
				 }
			},
            "Properties": {
                "Tenancy": "default",
                "ImageId": {
					"Ref" : "OSImage"
				},
                "IamInstanceProfile": {
                    "Ref": "WSFCProfile"
                },
                "InstanceType": "t2.small",
                "NetworkInterfaces": [
                    {
                        "DeleteOnTermination": "true",
                        "DeviceIndex": 0,
                        "SubnetId": {
                            "Ref": "Subnet3"
                        },                        
                        "GroupSet": [
                            {
                                "Ref": "WSFCSecurityGroup"
                            }
                        ]
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Ref": "WSFCNode3NetBIOSName"
                        }
                    },
					 {
                        "Key" : "Environment",
                        "Value" : {
                            "Ref" : "EnvironmentTag"
                        }
                    },
                    {
                        "Key" : "Application",
                        "Value" : {
                            "Ref" : "ApplicationTag"
                        }
                    },
                    {
                        "Key" : "Organization",
                        "Value" : {
                            "Ref" : "OrganizationTag"
                        }
                    }
                ],
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/sda1",
                        "Ebs": {
                            "VolumeSize": {
								"Ref" : "OSVolumeSize"
							},
                            "VolumeType": {
								"Ref" : "OSVolumeType"
							},
							"Iops": {
								"Fn::If": [
									"OSVolIsIo1",
									{
										"Ref": "OSVolumeIops"
									},
									{
										"Ref": "AWS::NoValue"
									}
								]
							}
                        }
                    }
                ],
                "KeyName": {
                    "Ref": "KeyPairName"
                },
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
								"<script>\n",
								{
									"Fn::Sub" : "cfn-init.exe -v --stack ${AWS::StackId} --resource WitnessServer --region ${AWS::Region} --configsets config\n"
								},
                                "</script>"
                            ]
                        ]
                    }
                }
            }
        },
		
		"WSFCNode1Volume1": {
            "Type": "AWS::EC2::Volume",
            "Properties": {
                "Size": {
                    "Ref": "FileShareVolumeSize"
                },
                "VolumeType": {
                    "Ref": "FileShareVolumeType"
                },
                "AvailabilityZone": {
                    "Fn::GetAtt": [
                        "WSFCNode1",
                        "AvailabilityZone"
                    ]
                },
				"Encrypted" : true,
                "Iops": {
                    "Fn::If": [
                        "FileShareVolIsIo1",
                        {
                            "Ref": "FileShareVolumeIops"
                        },
                        {
                            "Ref": "AWS::NoValue"
                        }
                    ]
                },
				"Tags" : [
					{	
						"Key" : "InstanceId",
						"Value" : {
							"Ref" : "WSFCNode1"
						}
					},
					{
                        "Key" : "Environment",
                        "Value" : {
                            "Ref" : "EnvironmentTag"
                        }
                    },
                    {
                        "Key" : "Application",
                        "Value" : {
                            "Ref" : "ApplicationTag"
                        }
                    },
                    {
                        "Key" : "Organization",
                        "Value" : {
                            "Ref" : "OrganizationTag"
                        }
                    }
				]
            }
        },
		"WSFCNode2Volume1": {
            "Type": "AWS::EC2::Volume",
            "Properties": {
                "Size": {
                    "Ref": "FileShareVolumeSize"
                },
                "VolumeType": {
                    "Ref": "FileShareVolumeType"
                },
                "AvailabilityZone": {
                    "Fn::GetAtt": [
                        "WSFCNode2",
                        "AvailabilityZone"
                    ]
                },
				"Encrypted" : true,
                "Iops": {
                    "Fn::If": [
                        "FileShareVolIsIo1",
                        {
                            "Ref": "FileShareVolumeIops"
                        },
                        {
                            "Ref": "AWS::NoValue"
                        }
                    ]
                },
				"Tags" : [
					{	
						"Key" : "InstanceId",
						"Value" : {
							"Ref" : "WSFCNode2"
						}
					},
					 {
                        "Key" : "Environment",
                        "Value" : {
                            "Ref" : "EnvironmentTag"
                        }
                    },
                    {
                        "Key" : "Application",
                        "Value" : {
                            "Ref" : "ApplicationTag"
                        }
                    },
                    {
                        "Key" : "Organization",
                        "Value" : {
                            "Ref" : "OrganizationTag"
                        }
                    }
				]
            }
        },
		"WSFCNode3Volume1": {
            "Type": "AWS::EC2::Volume",
			"Condition" : "Is3Node",
            "Properties": {
                "Size": {
                    "Ref": "FileShareVolumeSize"
                },
                "VolumeType": {
                    "Ref": "FileShareVolumeType"
                },
                "AvailabilityZone": {
                    "Fn::GetAtt": [
                        "WSFCNode3",
                        "AvailabilityZone"
                    ]
                },
				"Encrypted" : true,
                "Iops": {
                    "Fn::If": [
                        "FileShareVolIsIo1",
                        {
                            "Ref": "FileShareVolumeIops"
                        },
                        {
                            "Ref": "AWS::NoValue"
                        }
                    ]
                },
				"Tags" : [
					{	
						"Key" : "InstanceId",
						"Value" : {
							"Ref" : "WSFCNode3"
						}
					},
					 {
                        "Key" : "Environment",
                        "Value" : {
                            "Ref" : "EnvironmentTag"
                        }
                    },
                    {
                        "Key" : "Application",
                        "Value" : {
                            "Ref" : "ApplicationTag"
                        }
                    },
                    {
                        "Key" : "Organization",
                        "Value" : {
                            "Ref" : "OrganizationTag"
                        }
                    }
				]
            }
        },

		"WSFCNode1Volume2": {
            "Type": "AWS::EC2::Volume",
            "Properties": {
                "Size": {
                    "Ref": "FileShareVolumeSize"
                },
                "VolumeType": {
                    "Ref": "FileShareVolumeType"
                },
                "AvailabilityZone": {
                    "Fn::GetAtt": [
                        "WSFCNode1",
                        "AvailabilityZone"
                    ]
                },
				"Encrypted" : true,
                "Iops": {
                    "Fn::If": [
                        "FileShareVolIsIo1",
                        {
                            "Ref": "FileShareVolumeIops"
                        },
                        {
                            "Ref": "AWS::NoValue"
                        }
                    ]
                },
				"Tags" : [
					{	
						"Key" : "InstanceId",
						"Value" : {
							"Ref" : "WSFCNode1"
						}
					},
					 {
                        "Key" : "Environment",
                        "Value" : {
                            "Ref" : "EnvironmentTag"
                        }
                    },
                    {
                        "Key" : "Application",
                        "Value" : {
                            "Ref" : "ApplicationTag"
                        }
                    },
                    {
                        "Key" : "Organization",
                        "Value" : {
                            "Ref" : "OrganizationTag"
                        }
                    }
				]
            }
        },
		"WSFCNode2Volume2": {
            "Type": "AWS::EC2::Volume",
            "Properties": {
                "Size": {
                    "Ref": "FileShareVolumeSize"
                },
                "VolumeType": {
                    "Ref": "FileShareVolumeType"
                },
                "AvailabilityZone": {
                    "Fn::GetAtt": [
                        "WSFCNode2",
                        "AvailabilityZone"
                    ]
                },
				"Encrypted" : true,
                "Iops": {
                    "Fn::If": [
                        "FileShareVolIsIo1",
                        {
                            "Ref": "FileShareVolumeIops"
                        },
                        {
                            "Ref": "AWS::NoValue"
                        }
                    ]
                },
				"Tags" : [
					{	
						"Key" : "InstanceId",
						"Value" : {
							"Ref" : "WSFCNode2"
						}
					},
					 {
                        "Key" : "Environment",
                        "Value" : {
                            "Ref" : "EnvironmentTag"
                        }
                    },
                    {
                        "Key" : "Application",
                        "Value" : {
                            "Ref" : "ApplicationTag"
                        }
                    },
                    {
                        "Key" : "Organization",
                        "Value" : {
                            "Ref" : "OrganizationTag"
                        }
                    }
				]
            }
        },
		"WSFCNode3Volume2": {
            "Type": "AWS::EC2::Volume",
			"Condition" : "Is3Node",
            "Properties": {
                "Size": {
                    "Ref": "FileShareVolumeSize"
                },
                "VolumeType": {
                    "Ref": "FileShareVolumeType"
                },
                "AvailabilityZone": {
                    "Fn::GetAtt": [
                        "WSFCNode3",
                        "AvailabilityZone"
                    ]
                },
				"Encrypted" : true,
                "Iops": {
                    "Fn::If": [
                        "FileShareVolIsIo1",
                        {
                            "Ref": "FileShareVolumeIops"
                        },
                        {
                            "Ref": "AWS::NoValue"
                        }
                    ]
                },
				"Tags" : [
					{	
						"Key" : "InstanceId",
						"Value" : {
							"Ref" : "WSFCNode3"
						}
					},
					 {
                        "Key" : "Environment",
                        "Value" : {
                            "Ref" : "EnvironmentTag"
                        }
                    },
                    {
                        "Key" : "Application",
                        "Value" : {
                            "Ref" : "ApplicationTag"
                        }
                    },
                    {
                        "Key" : "Organization",
                        "Value" : {
                            "Ref" : "OrganizationTag"
                        }
                    }
				]
            }
        },

		"WSFCNode1Volume3": {
            "Type": "AWS::EC2::Volume",
			"Condition" : "Use4Disks",
            "Properties": {
                "Size": {
                    "Ref": "FileShareVolumeSize"
                },
                "VolumeType": {
                    "Ref": "FileShareVolumeType"
                },
                "AvailabilityZone": {
                    "Fn::GetAtt": [
                        "WSFCNode1",
                        "AvailabilityZone"
                    ]
                },
				"Encrypted" : true,
                "Iops": {
                    "Fn::If": [
                        "FileShareVolIsIo1",
                        {
                            "Ref": "FileShareVolumeIops"
                        },
                        {
                            "Ref": "AWS::NoValue"
                        }
                    ]
                },
				"Tags" : [
					{	
						"Key" : "InstanceId",
						"Value" : {
							"Ref" : "WSFCNode1"
						}
					},
					 {
                        "Key" : "Environment",
                        "Value" : {
                            "Ref" : "EnvironmentTag"
                        }
                    },
                    {
                        "Key" : "Application",
                        "Value" : {
                            "Ref" : "ApplicationTag"
                        }
                    },
                    {
                        "Key" : "Organization",
                        "Value" : {
                            "Ref" : "OrganizationTag"
                        }
                    }
				]
            }
        },
		"WSFCNode2Volume3": {
            "Type": "AWS::EC2::Volume",
			"Condition" : "Use4Disks",
            "Properties": {
                "Size": {
                    "Ref": "FileShareVolumeSize"
                },
                "VolumeType": {
                    "Ref": "FileShareVolumeType"
                },
                "AvailabilityZone": {
                    "Fn::GetAtt": [
                        "WSFCNode2",
                        "AvailabilityZone"
                    ]
                },
				"Encrypted" : true,
                "Iops": {
                    "Fn::If": [
                        "FileShareVolIsIo1",
                        {
                            "Ref": "FileShareVolumeIops"
                        },
                        {
                            "Ref": "AWS::NoValue"
                        }
                    ]
                },
				"Tags" : [
					{	
						"Key" : "InstanceId",
						"Value" : {
							"Ref" : "WSFCNode2"
						}
					},
					 {
                        "Key" : "Environment",
                        "Value" : {
                            "Ref" : "EnvironmentTag"
                        }
                    },
                    {
                        "Key" : "Application",
                        "Value" : {
                            "Ref" : "ApplicationTag"
                        }
                    },
                    {
                        "Key" : "Organization",
                        "Value" : {
                            "Ref" : "OrganizationTag"
                        }
                    }
				]
            }
        },
		"WSFCNode3Volume3": {
            "Type": "AWS::EC2::Volume",
			"Condition" : "3NodeAndUse4Disks",
            "Properties": {
                "Size": {
                    "Ref": "FileShareVolumeSize"
                },
                "VolumeType": {
                    "Ref": "FileShareVolumeType"
                },
                "AvailabilityZone": {
                    "Fn::GetAtt": [
                        "WSFCNode3",
                        "AvailabilityZone"
                    ]
                },
				"Encrypted" : true,
                "Iops": {
                    "Fn::If": [
                        "FileShareVolIsIo1",
                        {
                            "Ref": "FileShareVolumeIops"
                        },
                        {
                            "Ref": "AWS::NoValue"
                        }
                    ]
                },
				"Tags" : [
					{	
						"Key" : "InstanceId",
						"Value" : {
							"Ref" : "WSFCNode3"
						}
					},
					 {
                        "Key" : "Environment",
                        "Value" : {
                            "Ref" : "EnvironmentTag"
                        }
                    },
                    {
                        "Key" : "Application",
                        "Value" : {
                            "Ref" : "ApplicationTag"
                        }
                    },
                    {
                        "Key" : "Organization",
                        "Value" : {
                            "Ref" : "OrganizationTag"
                        }
                    }
				]
            }
        },

		"WSFCNode1Volume4": {
            "Type": "AWS::EC2::Volume",
			"Condition" : "Use4Disks",
            "Properties": {
                "Size": {
                    "Ref": "FileShareVolumeSize"
                },
                "VolumeType": {
                    "Ref": "FileShareVolumeType"
                },
                "AvailabilityZone": {
                    "Fn::GetAtt": [
                        "WSFCNode1",
                        "AvailabilityZone"
                    ]
                },
				"Encrypted" : true,
                "Iops": {
                    "Fn::If": [
                        "FileShareVolIsIo1",
                        {
                            "Ref": "FileShareVolumeIops"
                        },
                        {
                            "Ref": "AWS::NoValue"
                        }
                    ]
                },
				"Tags" : [
					{	
						"Key" : "InstanceId",
						"Value" : {
							"Ref" : "WSFCNode1"
						}
					},
					 {
                        "Key" : "Environment",
                        "Value" : {
                            "Ref" : "EnvironmentTag"
                        }
                    },
                    {
                        "Key" : "Application",
                        "Value" : {
                            "Ref" : "ApplicationTag"
                        }
                    },
                    {
                        "Key" : "Organization",
                        "Value" : {
                            "Ref" : "OrganizationTag"
                        }
                    }
				]
            }
        },
		"WSFCNode2Volume4": {
            "Type": "AWS::EC2::Volume",
			"Condition" : "Use4Disks",
            "Properties": {
                "Size": {
                    "Ref": "FileShareVolumeSize"
                },
                "VolumeType": {
                    "Ref": "FileShareVolumeType"
                },
                "AvailabilityZone": {
                    "Fn::GetAtt": [
                        "WSFCNode2",
                        "AvailabilityZone"
                    ]
                },
				"Encrypted" : true,
                "Iops": {
                    "Fn::If": [
                        "FileShareVolIsIo1",
                        {
                            "Ref": "FileShareVolumeIops"
                        },
                        {
                            "Ref": "AWS::NoValue"
                        }
                    ]
                },
				"Tags" : [
					{	
						"Key" : "InstanceId",
						"Value" : {
							"Ref" : "WSFCNode2"
						}
					},
					 {
                        "Key" : "Environment",
                        "Value" : {
                            "Ref" : "EnvironmentTag"
                        }
                    },
                    {
                        "Key" : "Application",
                        "Value" : {
                            "Ref" : "ApplicationTag"
                        }
                    },
                    {
                        "Key" : "Organization",
                        "Value" : {
                            "Ref" : "OrganizationTag"
                        }
                    }
				]
            }
        },
		"WSFCNode3Volume4": {
            "Type": "AWS::EC2::Volume",
			"Condition" : "3NodeAndUse4Disks",
            "Properties": {
                "Size": {
                    "Ref": "FileShareVolumeSize"
                },
                "VolumeType": {
                    "Ref": "FileShareVolumeType"
                },
                "AvailabilityZone": {
                    "Fn::GetAtt": [
                        "WSFCNode3",
                        "AvailabilityZone"
                    ]
                },
				"Encrypted" : true,
                "Iops": {
                    "Fn::If": [
                        "FileShareVolIsIo1",
                        {
                            "Ref": "FileShareVolumeIops"
                        },
                        {
                            "Ref": "AWS::NoValue"
                        }
                    ]
                },
				"Tags" : [
					{	
						"Key" : "InstanceId",
						"Value" : {
							"Ref" : "WSFCNode3"
						}
					},
					 {
                        "Key" : "Environment",
                        "Value" : {
                            "Ref" : "EnvironmentTag"
                        }
                    },
                    {
                        "Key" : "Application",
                        "Value" : {
                            "Ref" : "ApplicationTag"
                        }
                    },
                    {
                        "Key" : "Organization",
                        "Value" : {
                            "Ref" : "OrganizationTag"
                        }
                    }
				]
            }
        },

		"WSFCNode1Volume1Attachment": {
            "Type": "AWS::EC2::VolumeAttachment",
            "Properties": {
                "Device": "/dev/xvdb",
                "InstanceId": {
                    "Ref": "WSFCNode1"
                },
                "VolumeId": {
                    "Ref": "WSFCNode1Volume1"
                }
            }
        },
		"WSFCNode2Volume1Attachment": {
            "Type": "AWS::EC2::VolumeAttachment",
            "Properties": {
                "Device": "/dev/xvdb",
                "InstanceId": {
                    "Ref": "WSFCNode2"
                },
                "VolumeId": {
                    "Ref": "WSFCNode2Volume1"
                }
            }
        },
		"WSFCNode3Volume1Attachment": {
            "Type": "AWS::EC2::VolumeAttachment",
			"Condition" : "Is3Node",
            "Properties": {
                "Device": "/dev/xvdb",
                "InstanceId": {
                    "Ref": "WSFCNode3"
                },
                "VolumeId": {
                    "Ref": "WSFCNode3Volume1"
                }
            }
        },

		"WSFCNode1Volume2Attachment": {
            "Type": "AWS::EC2::VolumeAttachment",
            "Properties": {
                "Device": "/dev/xvdc",
                "InstanceId": {
                    "Ref": "WSFCNode1"
                },
                "VolumeId": {
                    "Ref": "WSFCNode1Volume2"
                }
            }
        },
		"WSFCNode2Volume2Attachment": {
            "Type": "AWS::EC2::VolumeAttachment",
            "Properties": {
                "Device": "/dev/xvdc",
                "InstanceId": {
                    "Ref": "WSFCNode2"
                },
                "VolumeId": {
                    "Ref": "WSFCNode2Volume2"
                }
            }
        },
		"WSFCNode3Volume2Attachment": {
            "Type": "AWS::EC2::VolumeAttachment",
			"Condition" : "Is3Node",
            "Properties": {
                "Device": "/dev/xvdc",
                "InstanceId": {
                    "Ref": "WSFCNode3"
                },
                "VolumeId": {
                    "Ref": "WSFCNode3Volume2"
                }
            }
        },

		"WSFCNode1Volume3Attachment": {
            "Type": "AWS::EC2::VolumeAttachment",
			"Condition" : "Use4Disks",
            "Properties": {
                "Device": "/dev/xvdd",
                "InstanceId": {
                    "Ref": "WSFCNode1"
                },
                "VolumeId": {
                    "Ref": "WSFCNode1Volume3"
                }
            }
        },
		"WSFCNode2Volume3Attachment": {
            "Type": "AWS::EC2::VolumeAttachment",
			"Condition" : "Use4Disks",
            "Properties": {
                "Device": "/dev/xvdd",
                "InstanceId": {
                    "Ref": "WSFCNode2"
                },
                "VolumeId": {
                    "Ref": "WSFCNode2Volume3"
                }
            }
        },
		"WSFCNode3Volume3Attachment": {
            "Type": "AWS::EC2::VolumeAttachment",
			"Condition" : "3NodeAndUse4Disks",
            "Properties": {
                "Device": "/dev/xvdd",
                "InstanceId": {
                    "Ref": "WSFCNode3"
                },
                "VolumeId": {
                    "Ref": "WSFCNode3Volume3"
                }
            }
        },

		"WSFCNode1Volume4Attachment": {
            "Type": "AWS::EC2::VolumeAttachment",
			"Condition" : "Use4Disks",
            "Properties": {
                "Device": "/dev/xvde",
                "InstanceId": {
                    "Ref": "WSFCNode1"
                },
                "VolumeId": {
                    "Ref": "WSFCNode1Volume4"
                }
            }
        },
		"WSFCNode2Volume4Attachment": {
            "Type": "AWS::EC2::VolumeAttachment",
			"Condition" : "Use4Disks",
            "Properties": {
                "Device": "/dev/xvde",
                "InstanceId": {
                    "Ref": "WSFCNode2"
                },
                "VolumeId": {
                    "Ref": "WSFCNode2Volume4"
                }
            }
        },
		"WSFCNode3Volume4Attachment": {
            "Type": "AWS::EC2::VolumeAttachment",
			"Condition" : "3NodeAndUse4Disks",
            "Properties": {
                "Device": "/dev/xvde",
                "InstanceId": {
                    "Ref": "WSFCNode3"
                },
                "VolumeId": {
                    "Ref": "WSFCNode3Volume4"
                }
            }
        },

		"WSFCSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Enable WSFC communication",
                "VpcId": {
                    "Ref": "VpcId"
                },
				"Tags"                 : [
                    {
                        "Key" : "Name",
                        "Value" : {
							"Fn::Sub" : "SG-${ApplicationTag}-${AWS::Region}-WSFC-${EnvironmentTag}"
                        }
                    },
                    {
                        "Key" : "Environment",
                        "Value" : {
                            "Ref" : "EnvironmentTag"
                        }
                    },
                    {
                        "Key" : "Application",
                        "Value" : {
                            "Ref" : "ApplicationTag"
                        }
                    },
                    {
                        "Key" : "Organization",
                        "Value" : {
                            "Ref" : "OrganizationTag"
                        }
                    }
                ]
            }
        },
		"WSFCSecurityGroupIngressIcmp": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": {
                    "Ref": "WSFCSecurityGroup"
                },
                "SourceSecurityGroupId": {
                    "Ref": "WSFCSecurityGroup"
                },
                "IpProtocol": "icmp",
                "FromPort": "-1",
                "ToPort": "-1"
            }
        },
        "WSFCSecurityGroupIngressTcp135": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": {
                    "Ref": "WSFCSecurityGroup"
                },
                "SourceSecurityGroupId": {
                    "Ref": "WSFCSecurityGroup"
                },
                "IpProtocol": "tcp",
                "FromPort": "135",
                "ToPort": "135"
            }
        },
        "WSFCSecurityGroupIngressTcp137": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": {
                    "Ref": "WSFCSecurityGroup"
                },
                "SourceSecurityGroupId": {
                    "Ref": "WSFCSecurityGroup"
                },
                "IpProtocol": "tcp",
                "FromPort": "137",
                "ToPort": "137"
            }
        },
		"WSFCSecurityGroupIngressTcp139": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": {
                    "Ref": "WSFCSecurityGroup"
                },
                "SourceSecurityGroupId": {
                    "Ref": "WSFCSecurityGroup"
                },
                "IpProtocol": "tcp",
                "FromPort": "139",
                "ToPort": "139"
            }
        },
        "WSFCSecurityGroupIngressTcp445": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": {
                    "Ref": "WSFCSecurityGroup"
                },
                "SourceSecurityGroupId": {
                    "Ref": "WSFCSecurityGroup"
                },
                "IpProtocol": "tcp",
                "FromPort": "445",
                "ToPort": "445"
            }
        },
		"WSFCSecurityGroupIngressTcp3343": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": {
                    "Ref": "WSFCSecurityGroup"
                },
                "SourceSecurityGroupId": {
                    "Ref": "WSFCSecurityGroup"
                },
                "IpProtocol": "tcp",
                "FromPort": "3343",
                "ToPort": "3343"
            }
        },
		"WSFCSecurityGroupIngressTcp5985to5986": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": {
                    "Ref": "WSFCSecurityGroup"
                },
                "SourceSecurityGroupId": {
                    "Ref": "WSFCSecurityGroup"
                },
                "IpProtocol": "tcp",
                "FromPort": "5985",
                "ToPort": "5986"
            }
        },
        "WSFCSecurityGroupIngressUdp137to138": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": {
                    "Ref": "WSFCSecurityGroup"
                },
                "SourceSecurityGroupId": {
                    "Ref": "WSFCSecurityGroup"
                },
                "IpProtocol": "udp",
                "FromPort": "137",
                "ToPort": "138"
            }
        },
        "WSFCSecurityGroupIngressUdp3343": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": {
                    "Ref": "WSFCSecurityGroup"
                },
                "SourceSecurityGroupId": {
                    "Ref": "WSFCSecurityGroup"
                },
                "IpProtocol": "udp",
                "FromPort": "3343",
                "ToPort": "3343"
            }
        },
		"WSFCSecurityGroupIngressTcpEphemeral": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": {
                    "Ref": "WSFCSecurityGroup"
                },
                "SourceSecurityGroupId": {
                    "Ref": "WSFCSecurityGroup"
                },
                "IpProtocol": "tcp",
                "FromPort": "49152",
                "ToPort": "65535"
            }
        },

		"FileShareServerAccessSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Enable clients to access file share",
                "VpcId": {
                    "Ref": "VpcId"
                },
				"Tags"                 : [
                    {
                        "Key" : "Name",
                        "Value" : {
							"Fn::Sub" : "SG-${ApplicationTag}-${AWS::Region}-FileShareAccess-${EnvironmentTag}"
                        }
                    },
                    {
                        "Key" : "Environment",
                        "Value" : {
                            "Ref" : "EnvironmentTag"
                        }
                    },
                    {
                        "Key" : "Application",
                        "Value" : {
                            "Ref" : "ApplicationTag"
                        }
                    },
                    {
                        "Key" : "Organization",
                        "Value" : {
                            "Ref" : "OrganizationTag"
                        }
                    }
                ]
            }
        },
		"FileShareSecurityGroupIngressTcp445": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": {
                    "Ref": "FileShareServerAccessSecurityGroup"
                },
                "SourceSecurityGroupId": {
                    "Ref": "FileShareClientSecurityGroup"
                },
                "IpProtocol": "tcp",
                "FromPort": "445",
                "ToPort": "445"
            }
        },

		"FileShareClientSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Assign this groups to clients to enable them to access the file share",
                "VpcId": {
                    "Ref": "VpcId"
                },
				"Tags"                 : [
                    {
                        "Key" : "Name",
                        "Value" : {
							"Fn::Sub" : "SG-${ApplicationTag}-${AWS::Region}-FileShareClientAccess-${EnvironmentTag}"
                        }
                    },
                    {
                        "Key" : "Environment",
                        "Value" : {
                            "Ref" : "EnvironmentTag"
                        }
                    },
                    {
                        "Key" : "Application",
                        "Value" : {
                            "Ref" : "ApplicationTag"
                        }
                    },
                    {
                        "Key" : "Organization",
                        "Value" : {
                            "Ref" : "OrganizationTag"
                        }
                    }
                ]
            }
        },

		"ClusterManagementAccessSecurityGroup" : {
			"Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Enables remote administrators to manage the cluster.",
                "VpcId": {
                    "Ref": "VpcId"
                },
				"Tags"                 : [
                    {
                        "Key" : "Name",
                        "Value" : {
							"Fn::Sub" : "SG-${ApplicationTag}-${AWS::Region}-ClusterManagementAccess-${EnvironmentTag}"
                        }
                    },
                    {
                        "Key" : "Environment",
                        "Value" : {
                            "Ref" : "EnvironmentTag"
                        }
                    },
                    {
                        "Key" : "Application",
                        "Value" : {
                            "Ref" : "ApplicationTag"
                        }
                    },
                    {
                        "Key" : "Organization",
                        "Value" : {
                            "Ref" : "OrganizationTag"
                        }
                    }
                ]
            }
		},
		"ClusterManagementSecurityGroupIngressTcp445": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": {
                    "Ref": "ClusterManagementAccessSecurityGroup"
                },
                "SourceSecurityGroupId": {
                    "Ref": "ClusterManagementSecurityGroup"
                },
                "IpProtocol": "tcp",
                "FromPort": "445",
                "ToPort": "445"
            }
        },
		"ClusterManagementSecurityGroupIngressTcp5895to5986": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": {
                    "Ref": "ClusterManagementAccessSecurityGroup"
                },
                "SourceSecurityGroupId": {
                    "Ref": "ClusterManagementSecurityGroup"
                },
                "IpProtocol": "tcp",
                "FromPort": "5985",
                "ToPort": "5986"
            }
        },
		"ClusterManagementSecurityGroupIngressTcp135": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": {
                    "Ref": "ClusterManagementAccessSecurityGroup"
                },
                "SourceSecurityGroupId": {
                    "Ref": "ClusterManagementSecurityGroup"
                },
                "IpProtocol": "tcp",
                "FromPort": "135",
                "ToPort": "135"
            }
        },
		"ClusterManagementSecurityGroupIngressTcpEphemeral": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": {
                    "Ref": "ClusterManagementAccessSecurityGroup"
                },
                "SourceSecurityGroupId": {
                    "Ref": "ClusterManagementSecurityGroup"
                },
                "IpProtocol": "tcp",
                "FromPort": "49152",
                "ToPort": "65535"
            }
        },
		"ClusterManagementSecurityGroupIngressUdp137": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": {
                    "Ref": "ClusterManagementAccessSecurityGroup"
                },
                "SourceSecurityGroupId": {
                    "Ref": "ClusterManagementSecurityGroup"
                },
                "IpProtocol": "udp",
                "FromPort": "137",
                "ToPort": "137"
            }
        },
		"ClusterManagementSecurityGroupIngressIcmp": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": {
                    "Ref": "ClusterManagementAccessSecurityGroup"
                },
                "SourceSecurityGroupId": {
                    "Ref": "ClusterManagementSecurityGroup"
                },
                "IpProtocol": "icmp",
                "FromPort": "-1",
                "ToPort": "-1"
            }
        },
		"ClusterManagementSecurityGroupIngressTcp3389": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": {
                    "Ref": "ClusterManagementAccessSecurityGroup"
                },
                "SourceSecurityGroupId": {
                    "Ref": "ClusterManagementSecurityGroup"
                },
                "IpProtocol": "tcp",
                "FromPort": "3389",
                "ToPort": "3389"
            }
        },

		"ClusterManagementSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Assign this groups to administrative instrances to enable them to manage the file share and cluster.",
                "VpcId": {
                    "Ref": "VpcId"
                },
				"Tags"                 : [
                    {
                        "Key" : "Name",
                        "Value" : {
							"Fn::Sub" : "SG-${ApplicationTag}-${AWS::Region}-ClusterManagement-${EnvironmentTag}"
                        }
                    },
                    {
                        "Key" : "Environment",
                        "Value" : {
                            "Ref" : "EnvironmentTag"
                        }
                    },
                    {
                        "Key" : "Application",
                        "Value" : {
                            "Ref" : "ApplicationTag"
                        }
                    },
                    {
                        "Key" : "Organization",
                        "Value" : {
                            "Ref" : "OrganizationTag"
                        }
                    }
                ]
            }
        }
	},

	"Outputs" : {
	}
}
